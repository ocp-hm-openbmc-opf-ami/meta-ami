diff --git a/mctp-i3c/mctp-i3c.c b/mctp-i3c/mctp-i3c.c
index ed67d99..61b96fe 100644
--- a/mctp-i3c/mctp-i3c.c
+++ b/mctp-i3c/mctp-i3c.c
@@ -59,6 +59,32 @@ static void print_usage(const char *name)
 	fprintf(stderr, "    -h --help                        Output usage message and exit.\n");
 }
 
+// Workaround : remove this when i3c slave driver supports append pec
+#define APPEND_PEC_FOR_I3C_SLAVE 1
+#ifdef APPEND_PEC_FOR_I3C_SLAVE
+static bool cal_pec = false;
+uint8_t crc8 (uint8_t crc, const uint8_t *data, uint8_t len)
+{
+	int i, j;
+
+	if (data == NULL)
+		return crc;
+
+	for (i = 0; i < len; ++i) {
+		crc ^= data[i];
+
+		for (j = 0; j < 8; ++j) {
+			if ((crc & 0x80) != 0)
+				crc = (uint8_t) ((crc << 1) ^ 0x07);
+			else
+				crc <<= 1;
+		}
+	}
+
+	return crc;
+}
+#endif
+
 static int rx_args_to_xfer(struct i3c_mctp_xfer *xfer)
 {
 	uint8_t *tmp;
@@ -80,6 +106,30 @@ static int w_args_to_xfer(struct i3c_mctp_xfer *xfer, char *arg)
 	data_ptrs[i] = strtok(arg, ",");
 	while (data_ptrs[i] && i < 255)
 		data_ptrs[++i] = strtok(NULL, ",");
+
+#ifdef APPEND_PEC_FOR_I3C_SLAVE
+	int buf_size = i;
+	uint8_t pec, addr = ((0x08 << 1) | 0x01);
+
+	if (cal_pec)
+		buf_size++;
+
+	tmp = (uint8_t *)calloc(buf_size, sizeof(uint8_t));
+	if (!tmp)
+		return -1;
+
+	for (len = 0; len < i; len++)
+		tmp[len] = (uint8_t)strtol(data_ptrs[len], NULL, 0);
+
+	if (cal_pec) {
+		pec = crc8(0, &addr, 1);
+		pec = crc8(pec, tmp, len);
+		tmp[len++] = pec;
+	}
+	xfer->rnw = 0;
+	xfer->len = len;
+	xfer->data = (__u32 *)tmp;
+#else
 	tmp = (uint8_t *)calloc(i, sizeof(uint8_t));
 	if (!tmp)
 		return -1;
@@ -88,6 +138,7 @@ static int w_args_to_xfer(struct i3c_mctp_xfer *xfer, char *arg)
 	xfer->rnw = 0;
 	xfer->len = len;
 	xfer->data = (__u32 *)tmp;
+#endif
 	return 0;
 }
 
@@ -228,6 +279,14 @@ int main(int argc, char *argv[])
 	}
 	if (!device)
 		exit(EXIT_FAILURE);
+
+#ifdef APPEND_PEC_FOR_I3C_SLAVE
+	char *mq = "slave-mqueue";
+	if (strstr(device, mq) != NULL) {
+		cal_pec = true;
+	}
+#endif
+
 	file = open(device, O_RDWR);
 	if (file < 0)
 		exit(EXIT_FAILURE);
