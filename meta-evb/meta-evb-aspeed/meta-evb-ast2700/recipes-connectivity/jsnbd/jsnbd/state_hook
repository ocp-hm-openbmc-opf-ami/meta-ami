#!/bin/sh

if [ $# -ne 2 ]
then
    echo "usage: $0 <start|stop> <config>" >&2
    exit 1
fi

action=$1
config=$2

gadget_name=mass-storage
gadget_dir=/sys/kernel/config/usb_gadget/$gadget_name

#  Assign different dev_name to find AST2750 node1 device in which_dev() 
if [ -e "/sys/bus/platform/devices/1e6a0000.usb-vhub/" ]; then
    dev_name="1e6a0000.usb-vhub"  # For AST2600
else
    dev_name="12011000.usb-vhub"  # For AST2700
fi

case "$config" in
0)
    nbd_device=/dev/nbd0
    ;;
1)
    nbd_device=/dev/nbd1
    ;;
8)
    #For AST2750 dual nodes
    nbd_device=/dev/nbd8
    gadget_name=mass-storage1
    gadget_dir=/sys/kernel/config/usb_gadget/$gadget_name
    dev_name="12021000.usb-vhub" 
    ;;
*)
    echo "invalid config $config" >&2
    exit 1
    ;;
esac

set -e

GADGET_BASE=/sys/kernel/config/usb_gadget

which_dev()
{
       in_use="$(cat $GADGET_BASE/*/UDC)"
       cd /sys/class/udc
       for dev in $dev_name*; do
               case "$in_use" in
                       *"$dev"*) ;;
                       *) echo "$dev"; return 0;;
               esac
       done
       return 1
}

case "$action" in
start)
    mkdir -p $gadget_dir
    (
    cd $gadget_dir
    # http://www.linux-usb.org/usb.ids
    #    |-> 1d6b  Linux Foundation
    #          |-> 0104  Multifunction Composite Gadget
    echo "0x1d6b" > idVendor
    echo "0x0104" > idProduct
    mkdir -p strings/0x409
    echo "OpenBMC" > strings/0x409/manufacturer
    echo "Virtual Media Device" > strings/0x409/product
    mkdir -p configs/c.1/strings/0x409
    echo "config 1" > configs/c.1/strings/0x409/configuration
    mkdir -p functions/mass_storage.usb0
    ln -s functions/mass_storage.usb0 configs/c.1
    echo 1 > functions/mass_storage.usb0/lun.0/removable
    echo 1 > functions/mass_storage.usb0/lun.0/ro
    echo 1 > functions/mass_storage.usb0/lun.0/cdrom
    echo 0 > functions/mass_storage.usb0/lun.0/nofua
    echo $nbd_device > functions/mass_storage.usb0/lun.0/file
    device=$(which_dev)
    echo "$device" > UDC
    echo "Assign $device to $gadget_name/UDC" 
    )
    ;;
stop)
    (
    cd $gadget_dir
    rm configs/c.1/mass_storage.usb0
    rmdir functions/mass_storage.usb0
    rmdir configs/c.1/strings/0x409
    rmdir configs/c.1
    rmdir strings/0x409
    )
    rmdir $gadget_dir
    ;;
*)
    echo "invalid action $action" >&2
    exit 1
esac

exit 0

