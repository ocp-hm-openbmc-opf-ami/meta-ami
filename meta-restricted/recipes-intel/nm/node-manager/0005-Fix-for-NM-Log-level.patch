From e41f714c937e21242f35de8bd657e5cd9fcb2638 Mon Sep 17 00:00:00 2001
From: arjuncr <arjuncr@ami.com>
Date: Tue, 23 May 2023 23:57:27 +0530
Subject: [PATCH] Fix for NM Log level

Signed-off-by: arjuncr <arjuncr@ami.com>
---
 include/loggers/redfish_logger.hpp | 22 +++++++++++++++++++---
 include/sps_integrator.hpp         | 11 ++++++-----
 2 files changed, 25 insertions(+), 8 deletions(-)

diff --git a/include/loggers/redfish_logger.hpp b/include/loggers/redfish_logger.hpp
index 146d69f..1aa040b 100644
--- a/include/loggers/redfish_logger.hpp
+++ b/include/loggers/redfish_logger.hpp
@@ -33,17 +33,33 @@ class RedfishLogger
     RedfishLogger& operator=(RedfishLogger&&) = delete;
     virtual ~RedfishLogger() = delete;
 
-    static void logStoppingNm()
+    static void logNmInitializationMode0()
     {
-        phosphor::logging::log<phosphor::logging::level::INFO>(
+        phosphor::logging::log<phosphor::logging::level::WARNING>(
+            "Sending RF message: NodeManager.0.1.NmStopping",
+            phosphor::logging::entry("REDFISH_MESSAGE_ID=%s",
+                                     "NodeManager.0.1.NmStopping"));
+    }
+
+    static void logNmInitializationMode1()
+    {
+        phosphor::logging::log<phosphor::logging::level::CRIT>(
             "Sending RF message: NodeManager.0.1.NmStopping",
             phosphor::logging::entry("REDFISH_MESSAGE_ID=%s",
                                      "NodeManager.0.1.NmStopping"));
     }
 
+    static void logNmInitializationMode2()
+    {
+        phosphor::logging::log<phosphor::logging::level::WARNING>(
+            "Sending RF message: NodeManager.0.1.SPSNMStopping",
+            phosphor::logging::entry("REDFISH_MESSAGE_ID=%s",
+                                     "NodeManager.0.1.SPSNMStopping"));
+    }
+
     static void logUnableToDisableSpsNm()
     {
-        phosphor::logging::log<phosphor::logging::level::INFO>(
+        phosphor::logging::log<phosphor::logging::level::CRIT>(
             "Sending RF message: NodeManager.0.1.NmUnableToDisableSpsNm",
             phosphor::logging::entry("REDFISH_MESSAGE_ID=%s",
                                      "NodeManager.0.1.NmUnableToDisableSpsNm"));
diff --git a/include/sps_integrator.hpp b/include/sps_integrator.hpp
index 5d897f2..1820deb 100644
--- a/include/sps_integrator.hpp
+++ b/include/sps_integrator.hpp
@@ -100,7 +100,7 @@ class SpsIntegrator
     {
         if (isSpsNmEnabled())
         {
-            RedfishLogger::logStoppingNm();
+            RedfishLogger::logNmInitializationMode0();
             Logger::log<LogLevel::warning>(
                 "SPS NM enabled, stopping OpenBMC NM");
             return false;
@@ -113,8 +113,8 @@ class SpsIntegrator
     {
         if (isSpsNmEnabled())
         {
-            RedfishLogger::logStoppingNm();
-            Logger::log<LogLevel::warning>(
+            RedfishLogger::logNmInitializationMode1();
+            Logger::log<LogLevel::critical>(
                 "SPS NM enabled, stopping OpenBMC NM");
             return false;
         }
@@ -131,7 +131,8 @@ class SpsIntegrator
 
         if (res && res->assistModule.nm == kSupportedAndEnabledValue)
         {
-            Logger::log<LogLevel::info>("SPS NM enabled, disabling...");
+	    RedfishLogger::logNmInitializationMode2();
+            Logger::log<LogLevel::warning>("SPS NM enabled, disabling...");
             if (tryDisableSpsNm(res->assistModule))
             {
                 if (tryColdResetSPS())
@@ -146,7 +147,7 @@ class SpsIntegrator
                 "Unable to disable the SPS NM, stopping OpenBMC NM");
             return false;
         }
-        Logger::log<LogLevel::info>("SPS NM disabled, starting OpenBMC NM");
+        Logger::log<LogLevel::warning>("SPS NM disabled, starting OpenBMC NM");
         return true;
     }
 
-- 
2.34.1

