From a95bc1bb126a575e367e5c44b66086a84bdd0550 Mon Sep 17 00:00:00 2001
From: Yaswanth <yaswanthsai@ami.com>
Date: Thu, 31 Aug 2023 14:58:53 +0530
Subject: [PATCH] Fix for Policy Creation with Busctl

---
 include/devices_manager/devices_manager.hpp     | 1 +
 include/devices_manager/hwmon_file_provider.hpp | 1 +
 include/readings/reading_power_efficiency.hpp   | 2 +-
 include/readings/reading_type.hpp               | 3 ++-
 include/sensors/hwmon_sensor.hpp                | 7 +++++--
 include/sensors/sensor_reading_type.hpp         | 2 ++
 6 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/include/devices_manager/devices_manager.hpp b/include/devices_manager/devices_manager.hpp
index ac3e30e..2c1768f 100644
--- a/include/devices_manager/devices_manager.hpp
+++ b/include/devices_manager/devices_manager.hpp
@@ -308,6 +308,7 @@ class DevicesManager : public RunnerIf,
             ReadingType::pciePower,
             ReadingType::pciePowerCapabilitiesMax,
             ReadingType::pciePowerCapabilitiesMin,
+	    ReadingType::acPlatformPower,
             ReadingType::inletTemperature,
             ReadingType::outletTemperature,
             ReadingType::volumetricAirflow,
diff --git a/include/devices_manager/hwmon_file_provider.hpp b/include/devices_manager/hwmon_file_provider.hpp
index 7491c1a..f6868dc 100644
--- a/include/devices_manager/hwmon_file_provider.hpp
+++ b/include/devices_manager/hwmon_file_provider.hpp
@@ -85,6 +85,7 @@ static const boost::container::flat_map<std::pair<std::string, std::string>,
          SensorReadingType::dcPlatformPowerCapabilitiesMaxCpu},
         {{"platformpower", "energy1_input"},
          SensorReadingType::dcPlatformEnergy},
+	{{"psu", "power1_input"}, SensorReadingType::acPlatformPower},
         {{"psu", "power1_input"}, SensorReadingType::acPlatformPowerPsuPin},
         {{"psu", "power1_average"}, SensorReadingType::acPlatformPowerPsuEin},
         {{"psu", "power2_input"}, SensorReadingType::dcPlatformPowerPsuPout},
diff --git a/include/readings/reading_power_efficiency.hpp b/include/readings/reading_power_efficiency.hpp
index 6f0ba18..bcc1ce3 100644
--- a/include/readings/reading_power_efficiency.hpp
+++ b/include/readings/reading_power_efficiency.hpp
@@ -44,7 +44,7 @@ class ReadingPowerEfficiency : public Reading
         readingAc(readingAcPower)
     {
         readingAc->registerReadingConsumer(
-            readHandler, ReadingType::acPlatformPowerPsu, kAllDevices);
+            readHandler, ReadingType::acPlatformPower, kAllDevices);
     }
 
     virtual ~ReadingPowerEfficiency()
diff --git a/include/readings/reading_type.hpp b/include/readings/reading_type.hpp
index 634b178..f2358d9 100644
--- a/include/readings/reading_type.hpp
+++ b/include/readings/reading_type.hpp
@@ -78,6 +78,7 @@ SensorReadingType mapReadingTypeToSensorReadingType(ReadingType rt)
     switch (rt)
     {
         case ReadingType::acPlatformPower:
+	    return SensorReadingType::acPlatformPower;
         case ReadingType::acPlatformPowerPsu:
         case ReadingType::acPlatformPowerPsuEin:
             return SensorReadingType::acPlatformPowerPsuEin;
@@ -97,7 +98,7 @@ SensorReadingType mapReadingTypeToSensorReadingType(ReadingType rt)
         case ReadingType::dramPower:
             return SensorReadingType::dramPower;
         case ReadingType::totalChassisPower:
-            return SensorReadingType::acPlatformPowerPsuPin;
+            return SensorReadingType::acPlatformPower;
         case ReadingType::inletTemperature:
             return SensorReadingType::inletTemperature;
         case ReadingType::outletTemperature:
diff --git a/include/sensors/hwmon_sensor.hpp b/include/sensors/hwmon_sensor.hpp
index e5e29a9..de76f28 100644
--- a/include/sensors/hwmon_sensor.hpp
+++ b/include/sensors/hwmon_sensor.hpp
@@ -109,6 +109,7 @@ class HwmonSensor : public Sensor
         }
 
         constexpr std::array psuTypes = {
+	    SensorReadingType::acPlatformPower,
             SensorReadingType::acPlatformPowerPsuPin,
             SensorReadingType::acPlatformPowerPsuEin,
             SensorReadingType::acPlatformPowerCapabilitiesMax,
@@ -232,7 +233,8 @@ class HwmonSensor : public Sensor
                         hwmonFile >> valueFromHwmonFile;
                         if (hwmonFile.good())
                         {
-                            if (type ==
+                            if (type == SensorReadingType::acPlatformPower ||
+				type ==
                                     SensorReadingType::acPlatformPowerPsuPin ||
                                 type ==
                                     SensorReadingType::acPlatformPowerPsuEin ||
@@ -283,6 +285,7 @@ class HwmonSensor : public Sensor
         {
             case SensorReadingType::cpuPackagePower:
                 return sensorReadingsManager->isPowerStateOn();
+	    case SensorReadingType::acPlatformPower:
             case SensorReadingType::acPlatformPowerPsuPin:
             case SensorReadingType::acPlatformPowerPsuEin:
             case SensorReadingType::acPlatformPowerCapabilitiesMax:
@@ -301,4 +304,4 @@ class HwmonSensor : public Sensor
     }
 };
 
-} // namespace nodemanager
\ No newline at end of file
+} // namespace nodemanager
diff --git a/include/sensors/sensor_reading_type.hpp b/include/sensors/sensor_reading_type.hpp
index c997d5f..b389b78 100644
--- a/include/sensors/sensor_reading_type.hpp
+++ b/include/sensors/sensor_reading_type.hpp
@@ -23,6 +23,7 @@ namespace nodemanager
 
 enum class SensorReadingType
 {
+    acPlatformPower,
     acPlatformPowerPsuPin,
     acPlatformPowerPsuEin,
     dcPlatformPowerCpu,
@@ -78,6 +79,7 @@ enum class SmartStatusType
  */
 static const std::unordered_map<SensorReadingType, std::string>
     kSensorReadingTypeNames = {
+	{SensorReadingType::acPlatformPower, "AcPlatformPower"},
         {SensorReadingType::acPlatformPowerPsuPin, "AcPlatformPowerPsuPin"},
         {SensorReadingType::acPlatformPowerPsuEin, "AcPlatformPowerPsuEin"},
         {SensorReadingType::dcPlatformPowerCpu, "DcPlatformPowerCpu"},
-- 
2.34.1

