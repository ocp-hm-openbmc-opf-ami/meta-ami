From d9257f1a03306b8a3bcafabd1908f79e16758af9 Mon Sep 17 00:00:00 2001
From: seancheng1 <seancheng@ami.com>
Date: Tue, 25 Jul 2023 17:29:37 +0800
Subject: [PATCH] Fix build failed with kernel 6.1.15 with a USB-related patch

---
 drivers/usb/gadget/configfs.c         | 35 ++++++---------------------
 drivers/usb/gadget/function/f_rndis.c | 20 +++++++++------
 2 files changed, 21 insertions(+), 34 deletions(-)

diff --git a/drivers/usb/gadget/configfs.c b/drivers/usb/gadget/configfs.c
index 98382151d3ce..2579a241f40a 100644
--- a/drivers/usb/gadget/configfs.c
+++ b/drivers/usb/gadget/configfs.c
@@ -1244,37 +1244,18 @@ static void borrow_network_to_rndis(struct gadget_info *gi,
        if (!list_empty(&gi->available_func)) {
                list_for_each_entry (ecm_fi, &gi->available_func, cfs_list) {
                        //if(strcmp(ecm_fi->group.cg_item.ci_name, "ecm.usb0") == 0) {
-                       if ((strcmp(ecm_fi->group.cg_item.ci_name,
-                                   "ecm.usb0") == 0) ||
-                           (strcmp(ecm_fi->group.cg_item.ci_name,
-                                   "ecm.usb1") == 0)) {
-                               ecm_opts = container_of(
-                                       ecm_fi, struct f_ecm_opts, func_inst);
-                               if (cdev->gadget != NULL) {
+			if(strcmp(ecm_fi->group.cg_item.ci_name, "ecm.usb0") == 0) {
+				ecm_opts = container_of(ecm_fi, struct f_ecm_opts, func_inst);
+				if(cdev->gadget != NULL) {
                                        mutex_lock(&ecm_opts->lock);
-                                       gether_set_gadget(ecm_opts->net,
-                                                         cdev->gadget);
+                                       gether_set_gadget(ecm_opts->net, cdev->gadget);
                                        gether_register_netdev(ecm_opts->net);
                                        mutex_unlock(&ecm_opts->lock);
                                        ecm_opts->bound = true;
-                                       list_for_each_entry (
-                                               rndis_fi, &gi->available_func,
-                                               cfs_list) {
-                                               //if(strcmp(rndis_fi->group.cg_item.ci_name, "rndis.usb0") == 0) {
-                                               if ((strcmp(rndis_fi->group
-                                                                   .cg_item
-                                                                   .ci_name,
-                                                           "rndis.usb0") ==
-                                                    0) ||
-                                                   (strcmp(rndis_fi->group
-                                                                   .cg_item
-                                                                   .ci_name,
-                                                           "rndis.usb1") ==
-                                                    0)) {
-                                                       rndis_borrow_net(
-                                                               rndis_fi,
-                                                               ecm_opts->net);
-                                               }
+                                       list_for_each_entry(rndis_fi, &gi->available_func, cfs_list) {
+		                               if(strcmp(rndis_fi->group.cg_item.ci_name, "rndis.usb0") == 0) {
+		                                       rndis_borrow_net(rndis_fi, ecm_opts->net);
+		                               }
                                        }
                                }
                        }
diff --git a/drivers/usb/gadget/function/f_rndis.c b/drivers/usb/gadget/function/f_rndis.c
index 7a54222aee1a..b86255f35667 100644
--- a/drivers/usb/gadget/function/f_rndis.c
+++ b/drivers/usb/gadget/function/f_rndis.c
@@ -69,7 +69,8 @@
 struct f_rndis {
 	struct gether			port;
 	u8				ctrl_id, data_id;
-       u8 ethaddr[14];	
+	u8				ethaddr[ETH_ALEN];
+	char				host_mac[14];		//for string descriptor
 	u32				vendorID;
 	const char			*manufacturer;
 	struct rndis_params		*params;
@@ -711,13 +712,17 @@ rndis_bind(struct usb_configuration *c, struct usb_function *f)
 			goto fail;
 		rndis_opts->bound = true;
 	}
-       status = gether_get_host_addr_cdc(rndis_opts->net, rndis->ethaddr,
-                                         sizeof(rndis->ethaddr));
+	status = gether_get_host_addr_cdc(rndis_opts->net, rndis->host_mac,
+					  sizeof(rndis->host_mac));
+
        if (status < 12) {
                kfree(rndis);
                return -EINVAL;
        }
-       rndis_string_defs[0].s = rndis->ethaddr;
+	//rndis_string_defs[0].s = rndis->ethaddr;
+	rndis_string_defs[0].s = rndis->host_mac;
+
+	gether_get_host_addr_u8(rndis_opts->net, rndis->ethaddr);
 
 	us = usb_gstrings_attach(cdev, rndis_strings,
 				 ARRAY_SIZE(rndis_string_defs));
@@ -843,9 +848,10 @@ void rndis_borrow_net(struct usb_function_instance *f, struct net_device *net)
 	struct f_rndis_opts *opts;
 
 	opts = container_of(f, struct f_rndis_opts, func_inst);
-	if (opts->bound)
-		gether_cleanup(netdev_priv(opts->net));
-	else
+/*	if (opts->bound)
+ 		gether_cleanup(netdev_priv(opts->net));
+ 	else
+		free_netdev(opts->net);*/
 		free_netdev(opts->net);
 	opts->borrowed_net = opts->bound = true;
 	opts->net = net;
