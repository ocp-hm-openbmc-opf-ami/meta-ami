From cfa64915ecce7ea567b81bda16881769d3bdc8c9 Mon Sep 17 00:00:00 2001
From: Ethan Wei <ethanwei@ami.com>
Date: Mon, 20 Nov 2023 01:07:14 -0800
Subject: [PATCH] Flush IP Index List when changing to DHCP

---
 src/ethernet_interface.cpp | 10 ++++++++++
 1 file changed, 10 insertions(+)

diff --git a/src/ethernet_interface.cpp b/src/ethernet_interface.cpp
index 037f509..cd6c715 100644
--- a/src/ethernet_interface.cpp
+++ b/src/ethernet_interface.cpp
@@ -588,6 +588,7 @@ ObjectPath EthernetInterface::ipWithIndex(IP::Protocol protType, std::string ipa
             addr.emplace(stdplus::fromStr<stdplus::In4Addr>(ipaddress));
         } // else if
     } catch (const std::exception& e) {
+        log<level::INFO>(fmt::format("{}\n", e.what()).c_str());
         elog<InvalidArgument>(Argument::ARGUMENT_NAME("idx"), Argument::ARGUMENT_VALUE(stdplus::toStr(idx).c_str()));
         elog<InvalidArgument>(Argument::ARGUMENT_NAME("ipaddress"), Argument::ARGUMENT_VALUE(ipaddress.c_str()));
     }
@@ -811,7 +812,16 @@ EthernetInterface::DHCPConf EthernetInterface::dhcpEnabled(DHCPConf value)
                     EthernetInterfaceIntf::ipv6StaticRtrAddr(std::string{});
                 }
             }
+
+            ipv6IndexUsedList.clear();
+            ipv6IndexUsedList.assign(IPV6_MAX_NUM+1, std::nullopt);
+        }
+
+        if (EthernetInterfaceIntf::dhcp4() && old4 != new4) {
+            ipv4IndexUsedList.clear();
+            ipv4IndexUsedList.assign(IPV4_MAX_NUM+1, std::nullopt);
         }
+
         writeConfigurationFile();
         manager.get().reloadConfigs();
     }
-- 
2.25.1

