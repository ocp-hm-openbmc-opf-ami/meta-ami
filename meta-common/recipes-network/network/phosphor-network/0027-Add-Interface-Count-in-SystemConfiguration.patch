From 0e9f7b9a7e3a762d68b110cdf88fd02edd46bf63 Mon Sep 17 00:00:00 2001
From: Ethan Wei <ethanwei@ami.com>
Date: Tue, 7 Nov 2023 01:15:00 -0800
Subject: [PATCH] Add Interface Count in SystemConfiguration 	modified:  
 src/system_configuration.cpp 	modified:   src/system_configuration.hpp

	modified:   src/network_manager.cpp
---
 src/network_manager.cpp      |  3 ++-
 src/system_configuration.cpp | 15 ++++++++++++++-
 src/system_configuration.hpp |  8 +++++++-
 3 files changed, 23 insertions(+), 3 deletions(-)

diff --git a/src/network_manager.cpp b/src/network_manager.cpp
index 422bf1a..56cf4a0 100644
--- a/src/network_manager.cpp
+++ b/src/network_manager.cpp
@@ -160,9 +160,9 @@ Manager::Manager(stdplus::PinnedRef<sdbusplus::bus_t> bus,
         handleAdminState(std::get<std::string>(val), ifidx);
     }
 
     std::filesystem::create_directories(confDir);
     systemConf = std::make_unique<phosphor::network::SystemConfiguration>(
-        bus, (this->objPath / "config").str);
+        bus, (this->objPath / "config").str, *this);
     dhcpConf = std::make_unique<phosphor::network::dhcp::Configuration>(
         bus, (this->objPath / "dhcp").str, *this);
     ddnsConf = std::make_unique<phosphor::network::dns::Configuration>(
diff --git a/src/system_configuration.cpp b/src/system_configuration.cpp
index 61c7f0e..62c6a27 100644
--- a/src/system_configuration.cpp
+++ b/src/system_configuration.cpp
@@ -1,4 +1,5 @@
 #include "system_configuration.hpp"
+#include "network_manager.hpp"
 
 #include <phosphor-logging/elog-errors.hpp>
 #include <phosphor-logging/lg2.hpp>
@@ -24,7 +25,7 @@ static constexpr char propMatch[] =
     "arg0='org.freedesktop.hostname1'";
 
 SystemConfiguration::SystemConfiguration(
-    stdplus::PinnedRef<sdbusplus::bus_t> bus, stdplus::const_zstring objPath) :
+    stdplus::PinnedRef<sdbusplus::bus_t> bus, stdplus::const_zstring objPath, stdplus::PinnedRef<Manager> parent) :
     Iface(bus, objPath.c_str(), Iface::action::defer_emit),
     bus(bus), hostnamePropMatch(
                   bus, propMatch,
@@ -46,6 +47,7 @@ SystemConfiguration::SystemConfiguration(
         lg2::error("Hostname match parsing failed: {ERROR}", "ERROR", e);
     }
 })
+    ,manager(parent)
 {
     try
     {
@@ -97,5 +99,15 @@ std::string SystemConfiguration::hostName(std::string name)
 }
 
 
+uint8_t SystemConfiguration::interfaceCount() const {
+    int count =0;
+    for (auto it = manager.get().interfaces.begin(); it != manager.get().interfaces.end(); it++) {
+        if (it->second->interfaceName().find(".") == std::string::npos && it->second->interfaceName().find_first_of("eth") != std::string::npos)
+            count++;
+    }
+
+    return count;
+}
+
 } // namespace network
 } // namespace phosphor
diff --git a/src/system_configuration.hpp b/src/system_configuration.hpp
index f5204e2..a7453bd 100644
--- a/src/system_configuration.hpp
+++ b/src/system_configuration.hpp
@@ -42,13 +42,17 @@ class SystemConfiguration : public Iface
      *  @param[in] parent - Parent object.
      */
     SystemConfiguration(stdplus::PinnedRef<sdbusplus::bus_t> bus,
-                        stdplus::const_zstring objPath);
+                        stdplus::const_zstring objPath,
+                        stdplus::PinnedRef<Manager> parent);
 
     /** @brief set the hostname of the system.
      *  @param[in] name - host name of the system.
      */
     std::string hostName(std::string name) override;
 
+    /** Get value of InterfaceCount */
+    uint8_t interfaceCount() const override;
+
     using SystemConfigIntf::hostName;
 
   private:
@@ -57,6 +61,8 @@ class SystemConfiguration : public Iface
 
     /** @brief Monitor for hostname changes */
     sdbusplus::bus::match_t hostnamePropMatch;
+
+    stdplus::PinnedRef<Manager> manager;
 };
 
 } // namespace network
-- 
2.25.1

