From f8b0a5e775c2c1a40ec8a26a3bdafd324bc6a6b2 Mon Sep 17 00:00:00 2001
From: Ethan Wei <ethanwei@ami.com>
Date: Sun, 15 Oct 2023 23:21:51 -0700
Subject: [PATCH 06/13] 0013-Add-Prefix-Length-at-Neighbor.patch

---
 src/ethernet_interface.cpp                    |   6 +-
 src/ethernet_interface.hpp                    |   2 +-
 src/neighbor.cpp                              |  12 +-
 src/neighbor.hpp                              |   7 +-
 src/types.hpp                                 |   3 +-
 .../Neighbor/CreateStatic.interface.yaml      |   4 +
 7 files changed, 193 insertions(+), 10 deletions(-)
 create mode 100644 0013-Add-Prefix-Length-at-Neighbor.patch

diff --git a/src/ethernet_interface.cpp b/src/ethernet_interface.cpp
index 343a7db..6820bcf 100644
--- a/src/ethernet_interface.cpp
+++ b/src/ethernet_interface.cpp
@@ -247,7 +247,7 @@ void EthernetInterface::addStaticNeigh(const NeighborInfo& info)
     {
         staticNeighbors.emplace(*info.addr, std::make_unique<Neighbor>(
                                                 bus, std::string_view(objPath),
-                                                *this, *info.addr, *info.mac,
+                                                *this, *info.addr, *info.mac, info.prefixLength,
                                                 Neighbor::State::Permanent));
     }
 }
@@ -338,7 +338,7 @@ ObjectPath EthernetInterface::ip(IP::Protocol protType, std::string ipaddress,
 }
 
 ObjectPath EthernetInterface::neighbor(std::string ipAddress,
-                                       std::string macAddress)
+                                       std::string macAddress, uint8_t prefixLength)
 {
     std::optional<stdplus::InAnyAddr> addr;
     try
@@ -371,7 +371,7 @@ ObjectPath EthernetInterface::neighbor(std::string ipAddress,
     {
         it = std::get<0>(staticNeighbors.emplace(
             *addr, std::make_unique<Neighbor>(bus, std::string_view(objPath),
-                                              *this, *addr, *lladdr,
+                                              *this, *addr, *lladdr, prefixLength,
                                               Neighbor::State::Permanent)));
     }
     else
diff --git a/src/ethernet_interface.hpp b/src/ethernet_interface.hpp
index 028bab7..fe21de4 100644
--- a/src/ethernet_interface.hpp
+++ b/src/ethernet_interface.hpp
@@ -138,7 +138,7 @@ class EthernetInterface : public Ifaces
      *  @param[in] ipAddress - IP address.
      *  @param[in] macAddress - Low level MAC address.
      */
-    ObjectPath neighbor(std::string ipAddress, std::string macAddress) override;
+    ObjectPath neighbor(std::string ipAddress, std::string macAddress, uint8_t prefixLength) override;
 
     /** Set value of DHCPEnabled */
     DHCPConf dhcpEnabled() const override;
diff --git a/src/neighbor.cpp b/src/neighbor.cpp
index 4d899c4..65f37d9 100644
--- a/src/neighbor.cpp
+++ b/src/neighbor.cpp
@@ -25,20 +25,21 @@ static auto makeObjPath(std::string_view root, stdplus::InAnyAddr addr)
 Neighbor::Neighbor(sdbusplus::bus_t& bus, std::string_view objRoot,
                    stdplus::PinnedRef<EthernetInterface> parent,
                    stdplus::InAnyAddr addr, stdplus::EtherAddr lladdr,
-                   State state) :
-    Neighbor(bus, makeObjPath(objRoot, addr), parent, addr, lladdr, state)
+                   uint8_t prefixLength, State state) :
+    Neighbor(bus, makeObjPath(objRoot, addr), parent, addr, lladdr, prefixLength, state)
 {}
 
 Neighbor::Neighbor(sdbusplus::bus_t& bus,
                    sdbusplus::message::object_path objPath,
                    stdplus::PinnedRef<EthernetInterface> parent,
-                   stdplus::InAnyAddr addr, stdplus::EtherAddr lladdr,
+                   stdplus::InAnyAddr addr, stdplus::EtherAddr lladdr, uint8_t prefixLength,
                    State state) :
     NeighborObj(bus, objPath.str.c_str(), NeighborObj::action::defer_emit),
     parent(parent), objPath(std::move(objPath))
 {
     NeighborObj::ipAddress(stdplus::toStr(addr), true);
     NeighborObj::macAddress(stdplus::toStr(lladdr), true);
+    NeighborObj::prefixLength(prefixLength, true);
     NeighborObj::state(state, true);
     emit_object_added();
 }
@@ -81,5 +82,10 @@ Neighbor::State Neighbor::state(State /*state*/)
     elog<NotAllowed>(REASON("Property update is not allowed"));
 }
 
+uint8_t Neighbor::prefixLength(uint8_t /*prefixLength*/)
+{
+    elog<NotAllowed>(REASON("Property update is not allowed"));
+}
+
 } // namespace network
 } // namespace phosphor
diff --git a/src/neighbor.hpp b/src/neighbor.hpp
index 5072afe..3f9af74 100644
--- a/src/neighbor.hpp
+++ b/src/neighbor.hpp
@@ -36,11 +36,12 @@ class Neighbor : public NeighborObj
      *  @param[in] parent - Parent object.
      *  @param[in] addr - IP address.
      *  @param[in] lladdr - Low level MAC address.
+     *  @param[in] prefixLength - Prefix Length.
      *  @param[in] state - The state of the neighbor entry.
      */
     Neighbor(sdbusplus::bus_t& bus, std::string_view objRoot,
              stdplus::PinnedRef<EthernetInterface> parent,
-             stdplus::InAnyAddr addr, stdplus::EtherAddr lladdr, State state);
+             stdplus::InAnyAddr addr, stdplus::EtherAddr lladdr, uint8_t prefixLength, State state);
 
     /** @brief Delete this d-bus object.
      */
@@ -52,6 +53,8 @@ class Neighbor : public NeighborObj
     std::string macAddress(std::string) override;
     using NeighborObj::state;
     State state(State) override;
+    using NeighborObj::prefixLength;
+    uint8_t prefixLength(uint8_t) override;
 
     inline const auto& getObjPath() const
     {
@@ -67,7 +70,7 @@ class Neighbor : public NeighborObj
 
     Neighbor(sdbusplus::bus_t& bus, sdbusplus::message::object_path objPath,
              stdplus::PinnedRef<EthernetInterface> parent,
-             stdplus::InAnyAddr addr, stdplus::EtherAddr lladdr, State state);
+             stdplus::InAnyAddr addr, stdplus::EtherAddr lladdr, uint8_t prefixLength, State state);
 };
 
 } // namespace network
diff --git a/src/types.hpp b/src/types.hpp
index 6195c3f..a892d48 100644
--- a/src/types.hpp
+++ b/src/types.hpp
@@ -71,11 +71,12 @@ struct NeighborInfo
     uint16_t state;
     std::optional<stdplus::InAnyAddr> addr;
     std::optional<stdplus::EtherAddr> mac;
+    uint8_t prefixLength;
 
     constexpr bool operator==(const NeighborInfo& rhs) const noexcept
     {
         return ifidx == rhs.ifidx && state == rhs.state && addr == rhs.addr &&
-               mac == rhs.mac;
+               mac == rhs.mac && prefixLength == rhs.prefixLength;
     }
 };
 
diff --git a/yaml/xyz/openbmc_project/Network/Neighbor/CreateStatic.interface.yaml b/yaml/xyz/openbmc_project/Network/Neighbor/CreateStatic.interface.yaml
index 630ac14..4cdb7eb 100644
--- a/yaml/xyz/openbmc_project/Network/Neighbor/CreateStatic.interface.yaml
+++ b/yaml/xyz/openbmc_project/Network/Neighbor/CreateStatic.interface.yaml
@@ -12,6 +12,10 @@ methods:
             type: string
             description: >
                 MAC Address.
+          - name: PrefixLength
+            type: byte
+            description: >
+                Prefix Length.
       returns:
           - name: Path
             type: object_path
-- 
2.25.1

