diff --git a/src/ethernet_interface.cpp b/src/ethernet_interface.cpp
index ab8b815..bef485a 100644
--- a/src/ethernet_interface.cpp
+++ b/src/ethernet_interface.cpp
@@ -617,6 +617,11 @@ ObjectPath EthernetInterface::createVLAN(uint16_t id)
     config.map["VLAN"].emplace_back()["Id"].emplace_back(std::move(idStr));
     config.writeFile(config::pathForIntfDev(manager.getConfDir(), intfName));
 
+    manager.addReloadPostHook(
+            [ifname = interfaceName()]() {
+                execute("/bin/systemctl", "systemctl", "restart", fmt::format("phosphor-ipmi-net@{}.service", ifname).c_str());
+            }
+    );
     writeConfigurationFile();
     manager.reloadConfigs();
 
@@ -931,7 +936,7 @@ EthernetInterface::VlanProperties::VlanProperties(
 void EthernetInterface::VlanProperties::delete_()
 {
     auto intf = eth.interfaceName();
-
+    std::string parentIfName;
     // Remove all configs for the current interface
     const auto& confDir = eth.manager.getConfDir();
     std::error_code ec;
@@ -951,6 +956,7 @@ void EthernetInterface::VlanProperties::delete_()
     {
         if (intf->ifIdx == parentIdx)
         {
+            parentIfName = intf->interfaceName();
             intf->writeConfigurationFile();
         }
     }
@@ -961,6 +967,11 @@ void EthernetInterface::VlanProperties::delete_()
         eth.manager.addReloadPostHook(
             [idx = eth.ifIdx]() { system::deleteIntf(idx); });
 
+        eth.manager.addReloadPostHook(
+                    [parentIfName]() {
+                        execute("/bin/systemctl", "systemctl", "restart", fmt::format("phosphor-ipmi-net@{}.service", parentIfName).c_str());
+                    }
+        );
         // Ignore the interface so the reload doesn't re-query it
         eth.manager.ignoredIntf.emplace(eth.ifIdx);
     }
diff --git a/src/network_manager.cpp b/src/network_manager.cpp
index 880b621..2932f33 100644
--- a/src/network_manager.cpp
+++ b/src/network_manager.cpp
@@ -396,8 +396,8 @@ void Manager::addAddress(const AddressInfo& info)
     if (auto it = intfInfo.find(info.ifidx); it != intfInfo.end())
     {
         it->second.addrs.insert_or_assign(info.ifaddr, info);
-        if (auto it = interfacesByIdx.find(info.ifidx);
-            it != interfacesByIdx.end())
+        auto name = it->second.intf.name;
+        if (auto it = interfaces.find(name.value()); it != interfaces.end())
         {
             it->second->addAddr(info);
         }
@@ -411,12 +411,13 @@ void Manager::addAddress(const AddressInfo& info)
 
 void Manager::removeAddress(const AddressInfo& info)
 {
-    if (auto it = interfacesByIdx.find(info.ifidx); it != interfacesByIdx.end())
+    if (auto it = intfInfo.find(info.ifidx); it != intfInfo.end())
     {
-        it->second->addrs.erase(info.ifaddr);
-        if (auto it = intfInfo.find(info.ifidx); it != intfInfo.end())
+        it->second.addrs.erase(info.ifaddr);
+        auto name = it->second.intf.name;
+        if (auto it = interfaces.find(name.value()); it != interfaces.end())
         {
-            it->second.addrs.erase(info.ifaddr);
+            it->second->addrs.erase(info.ifaddr);
         }
     }
 }
