From 60bddf15ddb0ef7165286a73e2f9fcb82419c31c Mon Sep 17 00:00:00 2001
From: "chrisduxbury@ami.com" <chrisduxbury@ami.com>
Date: Fri, 15 Dec 2023 16:11:34 +0800
Subject: [PATCH] [USB] Add USB DBus Interface

---
 gen/xyz/openbmc_project/USB/meson.build       | 16 +++++++++++
 .../openbmc_project/USB/status/meson.build    | 15 +++++++++++
 gen/xyz/openbmc_project/meson.build           |  1 +
 .../openbmc_project/USB/status.interface.yaml | 27 +++++++++++++++++++
 4 files changed, 59 insertions(+)
 create mode 100644 gen/xyz/openbmc_project/USB/meson.build
 create mode 100644 gen/xyz/openbmc_project/USB/status/meson.build
 create mode 100644 yaml/xyz/openbmc_project/USB/status.interface.yaml

diff --git a/gen/xyz/openbmc_project/USB/meson.build b/gen/xyz/openbmc_project/USB/meson.build
new file mode 100644
index 0000000..37f3e13
--- /dev/null
+++ b/gen/xyz/openbmc_project/USB/meson.build
@@ -0,0 +1,16 @@
+# Generated file; do not modify.
+subdir('status')
+generated_others += custom_target(
+    'xyz/openbmc_project/USB/status__markdown'.underscorify(),
+    input: [ '../../../../yaml/xyz/openbmc_project/USB/status.interface.yaml',  ],
+    output: [ 'status.md' ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../yaml',
+        'xyz/openbmc_project/USB/status',
+    ],
+)
+
diff --git a/gen/xyz/openbmc_project/USB/status/meson.build b/gen/xyz/openbmc_project/USB/status/meson.build
new file mode 100644
index 0000000..7e369a7
--- /dev/null
+++ b/gen/xyz/openbmc_project/USB/status/meson.build
@@ -0,0 +1,15 @@
+# Generated file; do not modify.
+generated_sources += custom_target(
+    'xyz/openbmc_project/USB/status__cpp'.underscorify(),
+    input: [ '../../../../../yaml/xyz/openbmc_project/USB/status.interface.yaml',  ],
+    output: [ 'common.hpp', 'server.cpp', 'server.hpp', 'client.hpp',  ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/USB/status',
+    ],
+)
+
diff --git a/gen/xyz/openbmc_project/meson.build b/gen/xyz/openbmc_project/meson.build
index f03b941..3c2e884 100644
--- a/gen/xyz/openbmc_project/meson.build
+++ b/gen/xyz/openbmc_project/meson.build
@@ -143,5 +143,6 @@ generated_others += custom_target(
     ],
 )
 
+subdir('USB')
 subdir('User')
 subdir('VirtualMedia')
diff --git a/yaml/xyz/openbmc_project/USB/status.interface.yaml b/yaml/xyz/openbmc_project/USB/status.interface.yaml
new file mode 100644
index 0000000..8991eed
--- /dev/null
+++ b/yaml/xyz/openbmc_project/USB/status.interface.yaml
@@ -0,0 +1,27 @@
+description: >
+    Implement to provide USB enable/disable.
+methods:
+    - name: SetUSBPowerSaveMode
+      description: >
+          Set USB Power Save Mode Enable or Disable
+      parameters:
+          - name: USBPowerSaveModeSetting
+            type: byte
+            description: >
+                   1 for enable and 0 for disable
+      returns:
+          - name: OperationResult
+            type: byte
+            description: >
+                   0xC0 or less than 0 means operation failure
+
+    - name: GetUSBPowerSaveMode
+      description: >
+          Get USB Power Save Mode
+      returns:
+          - name: USBPowerSaveMode
+            type: byte
+            description: >
+                   Indicating the mode or operation failure
+
+
-- 
2.42.0

