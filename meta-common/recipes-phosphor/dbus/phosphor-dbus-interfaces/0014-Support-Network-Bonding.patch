From 804422d9a4bebfe6b9918e795b03e7634841e0fd Mon Sep 17 00:00:00 2001
From: vaibhavs <vaibhavs@ami.com>
Date: Thu, 31 Aug 2023 16:09:35 +0000
Subject: [PATCH] Support Network Bonding

---
 .../openbmc_project/Network/Bond/meson.build  | 15 +++++
 gen/xyz/openbmc_project/Network/meson.build   | 14 +++++
 .../Network/Bond.interface.yaml               | 56 +++++++++++++++++++
 3 files changed, 85 insertions(+)
 create mode 100644 gen/xyz/openbmc_project/Network/Bond/meson.build
 create mode 100644 yaml/xyz/openbmc_project/Network/Bond.interface.yaml

diff --git a/gen/xyz/openbmc_project/Network/Bond/meson.build b/gen/xyz/openbmc_project/Network/Bond/meson.build
new file mode 100644
index 0000000..5506a06
--- /dev/null
+++ b/gen/xyz/openbmc_project/Network/Bond/meson.build
@@ -0,0 +1,15 @@
+# Generated file; do not modify.
+generated_sources += custom_target(
+    'xyz/openbmc_project/Network/Bond__cpp'.underscorify(),
+    input: [ '../../../../../yaml/xyz/openbmc_project/Network/Bond.interface.yaml',  ],
+    output: [ 'server.cpp', 'server.hpp', 'client.hpp',  ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'cpp',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../../yaml',
+        'xyz/openbmc_project/Network/Bond',
+    ],
+)
+
diff --git a/gen/xyz/openbmc_project/Network/meson.build b/gen/xyz/openbmc_project/Network/meson.build
index 5dc5e13..b7e6641 100644
--- a/gen/xyz/openbmc_project/Network/meson.build
+++ b/gen/xyz/openbmc_project/Network/meson.build
@@ -165,3 +165,17 @@ generated_others += custom_target(
     ],
 )
 
+subdir('Bond')
+generated_others += custom_target(
+    'xyz/openbmc_project/Network/Bond__markdown'.underscorify(),
+    input: [ '../../../../yaml/xyz/openbmc_project/Network/Bond.interface.yaml',  ],
+    output: [ 'Bond.md' ],
+    depend_files: sdbusplusplus_depfiles,
+    command: [
+        sdbuspp_gen_meson_prog, '--command', 'markdown',
+        '--output', meson.current_build_dir(),
+        '--tool', sdbusplusplus_prog,
+        '--directory', meson.current_source_dir() / '../../../../yaml',
+        'xyz/openbmc_project/Network/Bond',
+    ],
+)
diff --git a/yaml/xyz/openbmc_project/Network/Bond.interface.yaml b/yaml/xyz/openbmc_project/Network/Bond.interface.yaml
new file mode 100644
index 0000000..0218b85
--- /dev/null
+++ b/yaml/xyz/openbmc_project/Network/Bond.interface.yaml
@@ -0,0 +1,58 @@
+description: >
+    This defines network bonding parameters.
+
+# TODO Fix it through https://github.com/openbmc/openbmc/issues/1438
+# creatable: true
+
+properties:
+    - name: Mode
+      type: enum[self.BondingMode]
+      description: >
+          Network interface bonding modes.
+      default: ActiveBackup
+      errors:
+          - xyz.openbmc_project.Common.Error.NotAllowed
+    - name: MIIMonitor
+      type: byte
+      description: >
+          Specifies the frequency that Media Independent Interface link monitoring will occur.
+      errors:
+          - xyz.openbmc_project.Common.Error.NotAllowed
+      default: 0
+    - name: ActiveSlave
+      type: string
+      description: >
+          Name of Active Slave Interface
+      errors:
+          - xyz.openbmc_project.Common.Error.InvalidArgument
+
+enumerations:
+    - name: BondingMode
+      description: >
+          Possible bonding mode types.
+      values:
+          - name: RoundRobin
+            description: >
+                It is the default mode,in this mode system transmits packets in
+                sequential order from the first available slave through the last.
+          - name: ActiveBackup
+            description: >
+                In this mode, only one slave in the bond is active.
+                The other one will become active, only when the active slave fails.
+          - name: XOR
+            description: >
+                Transmit based on selectable hashing algorithm.
+                The default policy is a simple source+destination MAC address algorithm.
+          - name: Broadcast
+            description: >
+                Transmits everything on all slave interfaces.
+          - name: Dynamic
+            description: >
+                IEEE 802.3ad Dynamic link aggregation.
+          - name: TLB
+            description: >
+                The outgoing traffic is distributed according to the current load on each slave.
+          - name: ALB
+            description: >
+                Incoming/outgoing traffic is distributed according to the current load on each slave.
+
