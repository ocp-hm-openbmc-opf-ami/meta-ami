From 75f39d8c54df93f145da347ac2d0f57bed426166 Mon Sep 17 00:00:00 2001
From: "chrisduxbury@ami.com" <chrisduxbury@ami.com>
Date: Fri, 15 Dec 2023 16:10:52 +0800
Subject: [PATCH] [USB] Register USB DBus Methods

---
 src/main.cpp | 62 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 61 insertions(+), 1 deletion(-)

diff --git a/src/main.cpp b/src/main.cpp
index 1899d1f..7c1ee63 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -16,6 +16,60 @@
 
 #include "interface.hpp"
 #include "defaults.hpp"
+static constexpr auto powerSaveMode = "/sys/class/usb/usb_vhub/power_save_mode";
+static constexpr auto ccNodeBusy = 0xC0;
+
+int setUSBPowerSaveMode(int cmd)
+{
+    int usbfd;
+    int ret = 0;
+
+    // convert int command to char
+    char value = cmd + '0';
+
+    usbfd = open(powerSaveMode, O_RDWR);
+
+    if (usbfd < 0)
+    {
+        return ccNodeBusy;
+    }
+    ret = write(usbfd, &value, 1);
+    if (ret < 0)
+    {
+        close(usbfd);
+        return -errno;
+    }
+
+    close(usbfd);
+
+    return ret;
+}
+
+int getUSBPowerSaveMode()
+{
+    int usbfd;
+    int ret = 0;
+    char status;
+
+    usbfd = open(powerSaveMode, O_RDONLY);
+
+    if (usbfd < 0)
+    {
+        return ccNodeBusy;
+    }
+
+    ret = read(usbfd, &status, 1);
+    if (ret < 0)
+    {
+        close(usbfd);
+        return -errno;
+    }
+
+    close(usbfd);
+
+    // convert char to int
+    return atoi(&status);
+}
 
 int main()
 {
@@ -27,7 +81,13 @@ int main()
 
     std::vector<SettingsInterface> settings;
     loadSettings(objServer, settings);
+
+    auto ifaceUSB = objServer.add_interface(
+        "/xyz/openbmc_project/logging/settings", "xyz.openbmc_project.USB");
+    ifaceUSB->register_method("SetUSBPowerSaveMode", setUSBPowerSaveMode);
+    ifaceUSB->register_method("GetUSBPowerSaveMode", getUSBPowerSaveMode);
+    ifaceUSB->initialize();
     io.run();
 
     return 0;
-}
\ No newline at end of file
+}
-- 
2.42.0

