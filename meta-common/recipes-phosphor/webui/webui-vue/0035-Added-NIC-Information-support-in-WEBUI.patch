From 8245689c03b41a9d4cf1039467d3b8daab518373 Mon Sep 17 00:00:00 2001
From: dineshkumar <dineshkumar@ami.com>
Date: Mon, 21 Nov 2022 21:07:11 +0530
Subject: [PATCH] Added NIC Information support in WEBUI

Created the WEBUI page NIC Information to list the available NIC
details.

Following NIC data will be displayed in WEBUI in table form.
	1. PCI Class Code
	2. Slot Number
	3. Vendor ID
	4. Device ID
	5. Current Speed
	6. Port Idx
	7. Media State
	8. MAC Address
	9. Firmware Address

Signed-off-by: dineshkumar <dineshkumar@ami.com>
---
 .../AppNavigation/AppNavigationMixin.js       |   8 ++
 src/env/components/AppNavigation/intel.js     |   8 ++
 src/env/router/intel.js                       |   9 ++
 src/locales/en-US.json                        |  17 ++-
 src/router/routes.js                          |   9 ++
 src/store/index.js                            |   2 +
 src/store/modules/Nic/Nic.js                  | 122 ++++++++++++++++++
 src/views/Nic/NicInformation.vue              | 107 +++++++++++++++
 src/views/Nic/index.js                        |   2 +
 9 files changed, 282 insertions(+), 2 deletions(-)
 create mode 100644 src/store/modules/Nic/Nic.js
 create mode 100644 src/views/Nic/NicInformation.vue
 create mode 100644 src/views/Nic/index.js

diff --git a/src/components/AppNavigation/AppNavigationMixin.js b/src/components/AppNavigation/AppNavigationMixin.js
index eb6b694..42c684a 100644
--- a/src/components/AppNavigation/AppNavigationMixin.js
+++ b/src/components/AppNavigation/AppNavigationMixin.js
@@ -6,6 +6,7 @@ import IconSettings from '@carbon/icons-vue/es/settings/16';
 import IconSecurity from '@carbon/icons-vue/es/security/16';
 import IconChevronUp from '@carbon/icons-vue/es/chevron--up/16';
 import IconDataBase from '@carbon/icons-vue/es/data--base--alt/16';
+import IconNic from '@carbon/icons-vue/es/network--2/16';
 
 const AppNavigationMixin = {
   components: {
@@ -17,6 +18,7 @@ const AppNavigationMixin = {
     iconSecurityAndAccess: IconSecurity,
     iconExpand: IconChevronUp,
     iconResourceManagement: IconDataBase,
+    iconNic: IconNic,
   },
   data() {
     return {
@@ -201,6 +203,12 @@ const AppNavigationMixin = {
             },
           ],
         },
+        {
+          id: 'nic',
+          label: this.$t('appNavigation.nicInformation'),
+          icon: 'iconNic',
+          route: '/nic',
+        },
       ],
     };
   },
diff --git a/src/env/components/AppNavigation/intel.js b/src/env/components/AppNavigation/intel.js
index 7b2dc7d..3532382 100644
--- a/src/env/components/AppNavigation/intel.js
+++ b/src/env/components/AppNavigation/intel.js
@@ -6,6 +6,7 @@ import IconSettings from '@carbon/icons-vue/es/settings/16';
 import IconSecurity from '@carbon/icons-vue/es/security/16';
 import IconChevronUp from '@carbon/icons-vue/es/chevron--up/16';
 import IconDataBase from '@carbon/icons-vue/es/data--base--alt/16';
+import IconNic from '@carbon/icons-vue/es/network--2/16';
 
 const AppNavigationMixin = {
   components: {
@@ -17,6 +18,7 @@ const AppNavigationMixin = {
     iconSecurityAndAccess: IconSecurity,
     iconExpand: IconChevronUp,
     iconResourceManagement: IconDataBase,
+    iconNic: IconNic,
   },
   data() {
     return {
@@ -196,6 +198,12 @@ const AppNavigationMixin = {
             },
           ],
         },
+        {
+          id: 'nic',
+          label: this.$t('appNavigation.nicInformation'),
+          icon: 'iconNic',
+          route: '/nic',
+        },
       ],
     };
   },
diff --git a/src/env/router/intel.js b/src/env/router/intel.js
index 5434103..e871f6b 100644
--- a/src/env/router/intel.js
+++ b/src/env/router/intel.js
@@ -31,6 +31,7 @@ import ServerPowerOperations from '@/views/Operations/ServerPowerOperations';
 import Certificates from '@/views/SecurityAndAccess/Certificates';
 import VirtualMedia from '@/views/Operations/VirtualMedia';
 import Power from '@/views/ResourceManagement/Power';
+import nicInformation from '@/views/Nic';
 import i18n from '@/i18n';
 import Dumps from '@/views/Logs/Dumps';
 
@@ -298,6 +299,14 @@ const routes = [
           title: i18n.t('appPageTitle.virtualMedia'),
         },
       },
+      {
+        path: '/nic',
+        name: 'nic-information',
+        component: nicInformation,
+        meta: {
+          title: i18n.t('appPageTitle.nicInformation'),
+        },
+      },
       {
         path: '*',
         name: 'page-not-found',
diff --git a/src/locales/en-US.json b/src/locales/en-US.json
index f7248ca..ace7e06 100644
--- a/src/locales/en-US.json
+++ b/src/locales/en-US.json
@@ -135,7 +135,8 @@
     "smtpSettings": "SMTP Settings",
     "pef": "Platform Event Filter",
     "eventFilter": "Event Filter",
-    "alertDestination": "Alert Destination"
+    "alertDestination": "Alert Destination",
+    "nicInformation": "NIC Information"
   },
   "appPageTitle": {
     "changePassword": "Change password",
@@ -169,7 +170,8 @@
     "FactoryDefault": "Factory Default",
     "smtpSettings": "SMTP Settings",
     "eventFilter": "Event Filter",
-    "alertDestination": "Alert Destination"
+    "alertDestination": "Alert Destination",
+    "nicInformation": "NIC Information"
   },
   "pageChangePassword": {
     "changePassword": "Change password",
@@ -199,6 +201,17 @@
       "successDelete": "Successfully disconnected %{count} session. | Successfully disconnected %{count} sessions."
     }
   },
+  "pageNic": {
+    "pciClassCode": "PCI Class Code",
+    "slotNumber": "Slot Number",
+    "vendorId": "Vendor ID",
+    "deviceId": "Device ID",
+    "currentSpeed": "Current Speed",
+    "portIdx": "Port Idx",
+    "mediaState": "Media State",
+    "macAddress": "MAC Address",
+    "firmwareAddress": "Firmware Address"
+  },
   "pageDateTime": {
     "alert": {
       "message": "To change how date and time are displayed (either UTC or browser offset) throughout the application, visit ",
diff --git a/src/router/routes.js b/src/router/routes.js
index e2e00d7..f779e93 100644
--- a/src/router/routes.js
+++ b/src/router/routes.js
@@ -35,6 +35,7 @@ import Certificates from '@/views/SecurityAndAccess/Certificates';
 import VirtualMedia from '@/views/Operations/VirtualMedia';
 import Power from '@/views/ResourceManagement/Power';
 import i18n from '@/i18n';
+import nicInformation from '@/views/Nic';
 
 const routes = [
   {
@@ -316,6 +317,14 @@ const routes = [
           title: i18n.t('appPageTitle.virtualMedia'),
         },
       },
+      {
+        path: '/nic',
+        name: 'nic-information',
+        component: nicInformation,
+        meta: {
+          title: i18n.t('appPageTitle.nicInformation'),
+        },
+      },
       {
         path: '*',
         name: 'page-not-found',
diff --git a/src/store/index.js b/src/store/index.js
index 194893a..d2a6318 100644
--- a/src/store/index.js
+++ b/src/store/index.js
@@ -37,6 +37,7 @@ import DateTimeStore from './modules/Settings/DateTimeStore';
 import VirtualMediaStore from './modules/Operations/VirtualMediaStore';
 import KvmStore from './modules/Operations/KvmStore';
 import AlertDestinationStore from './modules/Pef/alertDestinationStore';
+import NicStore from './modules/Nic/Nic';
 
 Vue.use(Vuex);
 
@@ -80,6 +81,7 @@ export default new Vuex.Store({
     factoryReset: FactoryResetStore,
     keyClear: KeyClearStore,
     FactoryDefault: FactoryDefaultStore,
+    nic: NicStore,
   },
   plugins: [WebSocketPlugin],
 });
diff --git a/src/store/modules/Nic/Nic.js b/src/store/modules/Nic/Nic.js
new file mode 100644
index 0000000..2a79c15
--- /dev/null
+++ b/src/store/modules/Nic/Nic.js
@@ -0,0 +1,122 @@
+import api from '@/store/api';
+
+const NicStore = {
+  namespaced: true,
+  state: {
+    nicData: [],
+    nicNetworkAdopter: [],
+  },
+  getters: {
+    getAllNicData: (state) => state.nicData,
+    getNicNetworkAdopterData: (state) => state.nicNetworkAdopter,
+  },
+  mutations: {
+    setNicNetworkAdopterData: (state, networkAdopters) =>
+      (state.nicNetworkAdopter = networkAdopters),
+    setNicDataToView: (state, obj) =>
+      (state.nicData = state.nicData.concat(obj)),
+    emptyExistingData: (state, data) => (state.nicData = data),
+  },
+  actions: {
+    async getNicData({ dispatch, commit }) {
+      return await api
+        .get('/redfish/v1/Systems/system/NetworkInterfaces')
+        .then((response) =>
+          response.data.Members.map((nicInterface) => nicInterface['@odata.id'])
+        )
+        .then((nicInterfaceIds) =>
+          api.all(
+            nicInterfaceIds.map((eachNicInterface) => api.get(eachNicInterface))
+          )
+        )
+        .then((nicInterfaceNetworks) => {
+          let networkAdopters = nicInterfaceNetworks.map((eachNicNetwork) => {
+            return eachNicNetwork.data.Links.NetworkAdapter['@odata.id'];
+          });
+          commit('emptyExistingData', []);
+          dispatch('getNicNetworkData', networkAdopters);
+        });
+    },
+    async getNicNetworkData({ dispatch }, nicNetworkUrls) {
+      api
+        .all(nicNetworkUrls.map((nicNetworkUrl) => api.get(nicNetworkUrl)))
+        .then((response) => {
+          let fwVersion = 'N/A';
+          let nicChannels = response.map((eachResponse) => {
+            fwVersion = eachResponse.data.Controllers[0].FirmwarePackageVersion;
+            let channelUrl = eachResponse.data.Controllers[0].Links.NetworkPorts.map(
+              (each) => {
+                return each['@odata.id'];
+              }
+            );
+            let fwVerData = {
+              channelUrl: channelUrl,
+              fwVersion: fwVersion,
+            };
+            return fwVerData;
+          });
+          nicChannels.map((eachChannel) => {
+            dispatch('getallNicData', eachChannel);
+          });
+        });
+    },
+    async getallNicData({ commit }, Url) {
+      api
+        .all(Url.channelUrl.map((eachUrl) => api.get(eachUrl)))
+        .then((response) => {
+          response.map((eachData) => {
+            let finalObjWithNicData = {};
+            let pciClassCode = 'N/A';
+            let slotNumber = 'N/A';
+            let deviceId = 'N/A';
+            let portIdx = 'N/A';
+            let mediaState = 'N/A';
+            function checkKeyInObj(obj, key) {
+              if (Object.keys(obj).includes(key)) {
+                return obj[key];
+              }
+              return 'N/A';
+            }
+            if (eachData.data.Oem && eachData.data.Oem.OpenBmc) {
+              pciClassCode = checkKeyInObj(
+                eachData.data.Oem.OpenBmc,
+                'PCIClassCode'
+              );
+              slotNumber = checkKeyInObj(
+                eachData.data.Oem.OpenBmc,
+                'SlotNumber'
+              );
+              deviceId = checkKeyInObj(eachData.data.Oem.OpenBmc, 'DeviceId');
+              portIdx = checkKeyInObj(eachData.data.Oem.OpenBmc, 'PortIndex');
+              mediaState =
+                checkKeyInObj(eachData.data.Oem.OpenBmc, 'MediaState') == 1
+                  ? 'Connected'
+                  : 'Not Connected';
+            }
+            finalObjWithNicData['pciClassCode'] = pciClassCode;
+            finalObjWithNicData['slotNumber'] = slotNumber;
+            finalObjWithNicData['deviceId'] = deviceId;
+            finalObjWithNicData['portIdx'] = portIdx;
+            finalObjWithNicData['mediaState'] = mediaState;
+            finalObjWithNicData['vendorId'] = eachData.data.VendorId
+              ? eachData.data.VendorId
+              : 'N/A';
+            finalObjWithNicData['currentSpeed'] = eachData.data
+              .CurrentLinkSpeedMbps
+              ? eachData.data.CurrentLinkSpeedMbps
+              : 'N/A';
+            finalObjWithNicData['macAddress'] = eachData.data
+              .AssociatedNetworkAddresses
+              ? eachData.data.AssociatedNetworkAddresses[0]
+              : 'N/A';
+            finalObjWithNicData['firmwareAddress'] = Url.fwVersion
+              ? Url.fwVersion
+              : 'N/A';
+            commit('setNicDataToView', finalObjWithNicData);
+          });
+        });
+    },
+  },
+};
+
+export default NicStore;
diff --git a/src/views/Nic/NicInformation.vue b/src/views/Nic/NicInformation.vue
new file mode 100644
index 0000000..d7cdb61
--- /dev/null
+++ b/src/views/Nic/NicInformation.vue
@@ -0,0 +1,107 @@
+<template>
+  <b-container fluid="xl">
+    <page-title />
+    <b-row class="align-items-end">
+      <b-col sm="3" md="3" xl="2">
+        <table-cell-count
+          :total-number-of-cells="totalNicData.length"
+          :filtered-items-count="totalNicData.length"
+        >
+        </table-cell-count>
+      </b-col>
+    </b-row>
+    <b-row>
+      <b-col>
+        <b-table
+          id="table-nic-information"
+          ref="table"
+          responsive="md"
+          no-select-on-click
+          hover
+          show-empty
+          :busy="isBusy"
+          :fields="fields"
+          :items="totalNicData"
+          :empty-text="$t('global.table.emptyMessage')"
+        >
+        </b-table>
+      </b-col>
+    </b-row>
+  </b-container>
+</template>
+
+<script>
+import PageTitle from '@/components/Global/PageTitle';
+import TableCellCount from '@/components/Global/TableCellCount';
+import LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';
+import BVToastMixin from '@/components/Mixins/BVToastMixin';
+
+export default {
+  components: {
+    PageTitle,
+    TableCellCount,
+  },
+  mixins: [BVToastMixin, LoadingBarMixin],
+  beforeRouteLeave(to, from, next) {
+    // Hide loader if the user navigates to another page
+    // before request is fulfilled.
+    this.hideLoader();
+    next();
+  },
+  data() {
+    return {
+      isBusy: true,
+      fields: [
+        {
+          key: 'pciClassCode',
+          label: this.$t('pageNic.pciClassCode'),
+        },
+        {
+          key: 'slotNumber',
+          label: this.$t('pageNic.slotNumber'),
+        },
+        {
+          key: 'vendorId',
+          label: this.$t('pageNic.vendorId'),
+        },
+        {
+          key: 'deviceId',
+          label: this.$t('pageNic.deviceId'),
+        },
+        {
+          key: 'currentSpeed',
+          label: this.$t('pageNic.currentSpeed'),
+        },
+        {
+          key: 'portIdx',
+          label: this.$t('pageNic.portIdx'),
+        },
+        {
+          key: 'mediaState',
+          label: this.$t('pageNic.mediaState'),
+        },
+        {
+          key: 'macAddress',
+          label: this.$t('pageNic.macAddress'),
+        },
+        {
+          key: 'firmwareAddress',
+          label: this.$t('pageNic.firmwareAddress'),
+        },
+      ],
+    };
+  },
+  computed: {
+    totalNicData() {
+      return this.$store.getters['nic/getAllNicData'];
+    },
+  },
+  created() {
+    this.startLoader();
+    this.$store.dispatch('nic/getNicData').finally(() => {
+      this.endLoader();
+      this.isBusy = false;
+    });
+  },
+};
+</script>
diff --git a/src/views/Nic/index.js b/src/views/Nic/index.js
new file mode 100644
index 0000000..c53954e
--- /dev/null
+++ b/src/views/Nic/index.js
@@ -0,0 +1,2 @@
+import nicInformation from './NicInformation.vue';
+export default nicInformation;
-- 
2.25.1

