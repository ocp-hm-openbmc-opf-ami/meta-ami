From 24b1eb02fec1724799e040805790e029f59c9b3b Mon Sep 17 00:00:00 2001
From: Sivaprabu Ganesan <sivaprabug@ami.com>
Date: Wed, 10 May 2023 19:17:17 +0530
Subject: [PATCH] webui support for password change enhancements

Signed-off-by: Sivaprabu Ganesan <sivaprabug@ami.com>
---
 src/env/assets/styles/_ami.scss               |   4 +
 src/locales/en-US.json                        |   1 +
 .../Authentication/AuthenticanStore.js        |   8 +-
 src/views/ChangePassword/ChangePassword.vue   | 273 +++++++++++++-----
 src/views/Login/Login.vue                     |  20 +-
 5 files changed, 216 insertions(+), 90 deletions(-)

diff --git a/src/env/assets/styles/_ami.scss b/src/env/assets/styles/_ami.scss
index af65eb6..4a35a68 100644
--- a/src/env/assets/styles/_ami.scss
+++ b/src/env/assets/styles/_ami.scss
@@ -178,4 +178,8 @@ body {
 }
 *::-ms-reveal {
   display: none;
+}
+.btn-datepicker .dropdown-toggle,
+.input-action-btn {
+  padding: 10px;
 }
\ No newline at end of file
diff --git a/src/locales/en-US.json b/src/locales/en-US.json
index 46b72db..2909b2d 100644
--- a/src/locales/en-US.json
+++ b/src/locales/en-US.json
@@ -182,6 +182,7 @@
     "changePasswordError": "There was an error changing the password.",
     "confirmNewPassword": "Confirm new password",
     "goBack": "Go back",
+    "submit": "Submit",
     "newPassword": "New password",
     "username": "Username"
   },
diff --git a/src/store/modules/Authentication/AuthenticanStore.js b/src/store/modules/Authentication/AuthenticanStore.js
index 88fb54b..50dfff3 100644
--- a/src/store/modules/Authentication/AuthenticanStore.js
+++ b/src/store/modules/Authentication/AuthenticanStore.js
@@ -58,10 +58,12 @@ const AuthenticationStore = {
         .then(() => router.go('/login'))
         .catch((error) => console.log(error));
     },
-    checkPasswordChangeRequired(_, username) {
-      api
+    async checkPasswordChangeRequired(_, username) {
+      return await api
         .get(`/redfish/v1/AccountService/Accounts/${username}`)
-        .then(({ data: { PasswordChangeRequired } }) => PasswordChangeRequired)
+        .then((response) => {
+          return response.data.PasswordChangeRequired;
+        })
         .catch((error) => console.log(error));
     },
     resetStoreState({ state }) {
diff --git a/src/views/ChangePassword/ChangePassword.vue b/src/views/ChangePassword/ChangePassword.vue
index 2440ace..c3f94d8 100644
--- a/src/views/ChangePassword/ChangePassword.vue
+++ b/src/views/ChangePassword/ChangePassword.vue
@@ -1,86 +1,114 @@
 <template>
-  <div class="change-password-container">
-    <alert variant="danger" class="mb-4">
-      <p v-if="changePasswordError">
-        {{ $t('pageChangePassword.changePasswordError') }}
-      </p>
-      <p v-else>{{ $t('pageChangePassword.changePasswordAlertMessage') }}</p>
-    </alert>
-    <div class="change-password__form-container">
-      <dl>
-        <dt>{{ $t('pageChangePassword.username') }}</dt>
-        <dd>{{ username }}</dd>
-      </dl>
-      <b-form novalidate @submit.prevent="changePassword">
-        <b-form-group
-          label-for="password"
-          :label="$t('pageChangePassword.newPassword')"
+  <div class="login-container">
+    <div class="py-5">
+      <b-card class="card-cont my-5">
+        <b-container
+          class="containers logo-pos pa-5 rounded-circle d-inline-block"
         >
-          <input-password-toggle>
-            <b-form-input
-              id="password"
-              v-model="form.password"
-              autofocus="autofocus"
-              type="password"
-              :state="getValidationState($v.form.password)"
-              class="form-control-with-button"
-              @change="$v.form.password.$touch()"
+          <img
+            class="imges"
+            width="100px"
+            src="@/assets/images/ami-logo-no-tag-dark-bg.svg"
+            :alt="altLogo"
+          />
+        </b-container>
+        <h1 v-if="customizableGuiName" class="h4 mt-3 mb-3">
+          <img
+            class="img-margin"
+            width="350px"
+            src="@/assets/images/MegaRAC_OneTree.svg"
+            alt="MegaRAC OneTree"
+          />
+        </h1>
+        <div>
+          <b-form>
+            <input-password-toggle>
+              <b-form-input
+                id="password"
+                v-model="form.password"
+                class="form-control-with-button input"
+                placeholder="New Password"
+                aria-describedby="login-error-alert newpassword-required"
+                data-test-id="login-input-newpassword"
+                autofocus="autofocus"
+                type="password"
+                :state="getValidationState($v.form.password)"
+                @change="$v.form.password.$touch()"
+              >
+              </b-form-input>
+              <b-form-invalid-feedback role="alert">
+                <template v-if="!$v.form.password.required">
+                  {{ $t('global.form.fieldRequired') }}
+                </template>
+                <template
+                  v-else-if="
+                    !$v.form.password.maxLength || !$v.form.password.minLength
+                  "
+                >
+                  {{
+                    $t('global.form.lengthMustBeBetween', { min: 8, max: 16 })
+                  }}
+                </template>
+                <template v-else-if="!$v.form.password.pattern">
+                  {{ $t('global.form.invalidFormat') }}
+                </template>
+              </b-form-invalid-feedback>
+            </input-password-toggle>
+            <div class="mb-4"></div>
+            <input-password-toggle>
+              <b-form-input
+                id="password-confirm"
+                v-model="form.passwordConfirm"
+                class="form-control-with-button input"
+                placeholder="Confirm Password"
+                aria-describedby="login-error-alert newpassword-required"
+                data-test-id="login-input-newpassword"
+                autofocus="autofocus"
+                type="password"
+                :state="getValidationState($v.form.passwordConfirm)"
+                @change="$v.form.passwordConfirm.$touch()"
+              >
+              </b-form-input>
+              <b-form-invalid-feedback role="alert">
+                <template v-if="!$v.form.passwordConfirm.required">
+                  {{ $t('global.form.fieldRequired') }}
+                </template>
+                <template v-else-if="!$v.form.passwordConfirm.sameAsPassword">
+                  {{ $t('global.form.passwordsDoNotMatch') }}
+                </template>
+              </b-form-invalid-feedback>
+            </input-password-toggle>
+            <div class="mb-2"></div>
+            <b-button
+              class="mt-4 btns"
+              type="submit"
+              variant="primary"
+              data-test-id="login-button-submit"
+              :disabled="disableSubmitButton"
+              @click="changePassword"
+              >{{ $t('pageChangePassword.submit') }}</b-button
             >
-            </b-form-input>
-            <b-form-invalid-feedback role="alert">
-              <template v-if="!$v.form.password.required">
-                {{ $t('global.form.fieldRequired') }}
-              </template>
-            </b-form-invalid-feedback>
-          </input-password-toggle>
-        </b-form-group>
-        <b-form-group
-          label-for="password-confirm"
-          :label="$t('pageChangePassword.confirmNewPassword')"
-        >
-          <input-password-toggle>
-            <b-form-input
-              id="password-confirm"
-              v-model="form.passwordConfirm"
-              type="password"
-              :state="getValidationState($v.form.passwordConfirm)"
-              class="form-control-with-button"
-              @change="$v.form.passwordConfirm.$touch()"
-            >
-            </b-form-input>
-            <b-form-invalid-feedback role="alert">
-              <template v-if="!$v.form.passwordConfirm.required">
-                {{ $t('global.form.fieldRequired') }}
-              </template>
-              <template v-else-if="!$v.form.passwordConfirm.sameAsPassword">
-                {{ $t('global.form.passwordsDoNotMatch') }}
-              </template>
-            </b-form-invalid-feedback>
-          </input-password-toggle>
-        </b-form-group>
-        <div class="text-right">
-          <b-button type="button" variant="link" @click="goBack">
-            {{ $t('pageChangePassword.goBack') }}
-          </b-button>
-          <b-button type="submit" variant="primary">
-            {{ $t('pageChangePassword.changePassword') }}
-          </b-button>
+          </b-form>
         </div>
-      </b-form>
+      </b-card>
     </div>
   </div>
 </template>
 
 <script>
-import { required, sameAs } from 'vuelidate/lib/validators';
-import Alert from '@/components/Global/Alert';
+import {
+  required,
+  sameAs,
+  maxLength,
+  minLength,
+} from 'vuelidate/lib/validators';
 import VuelidateMixin from '@/components/Mixins/VuelidateMixin';
 import InputPasswordToggle from '@/components/Global/InputPasswordToggle';
 import BVToastMixin from '@/components/Mixins/BVToastMixin';
 
 export default {
   name: 'ChangePassword',
-  components: { Alert, InputPasswordToggle },
+  components: { InputPasswordToggle },
   mixins: [VuelidateMixin, BVToastMixin],
   data() {
     return {
@@ -88,14 +116,24 @@ export default {
         password: null,
         passwordConfirm: null,
       },
+      altLogo: process.env.VUE_APP_COMPANY_NAME || 'AMI',
+      customizableGuiName: process.env.VUE_APP_GUI_NAME || '',
       username: this.$store.getters['global/username'],
+      disableSubmitButton: false,
       changePasswordError: false,
     };
   },
   validations() {
     return {
       form: {
-        password: { required },
+        password: {
+          required,
+          maxLength: maxLength(16),
+          minLength: minLength(8),
+          pattern: function (pw) {
+            return this.passwordValidation(pw);
+          },
+        },
         passwordConfirm: {
           required,
           sameAsPassword: sameAs('password'),
@@ -104,13 +142,10 @@ export default {
     };
   },
   methods: {
-    goBack() {
-      // Remove session created if navigating back to the Login page
-      this.$store.dispatch('authentication/logout');
-    },
     changePassword() {
       this.$v.$touch();
       if (this.$v.$invalid) return;
+      this.disableSubmitButton = true;
       let data = {
         originalUsername: this.username,
         password: this.form.password,
@@ -118,17 +153,103 @@ export default {
 
       this.$store
         .dispatch('userManagement/updateUser', data)
-        .then(() => this.$router.push('/'))
+        .then((success) => this.successToast(success))
+        .catch(({ message }) => this.errorToast(message))
+        .finally(() => (this.disableSubmitButton = false))
+        .then(() => this.$router.push('/login'))
         .catch(() => (this.changePasswordError = true));
     },
+    passwordValidation(val) {
+      if (
+        /([a-zA-Z0-9])\1\1+|(sshd|bin|daemon|sys|adm|asdfghjk|asdfghjkl|sync|shutdown|halt|mail|news|uucp operator|games|ftp|man|nobody|stunnel4|password|Password|qwertyui|qwertyuiop)+/gi.test(
+          val
+        ) ||
+        /^[!@#$%^&*)(+=._-]+$/gi.test(val) ||
+        this.form.password.indexOf(this.username) !== -1 ||
+        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?!\d)[a-zA-Z\d]$/gi.test(val) ||
+        /^(?:^|\D)(\d{8,20})$/gi.test(val)
+      ) {
+        return false;
+      }
+      return true;
+    },
   },
 };
 </script>
 
 <style lang="scss" scoped>
-.change-password__form-container {
+.login-container {
+  background: gray('100');
+  display: flex;
+  flex-direction: column;
+  gap: $spacer * 2;
+  min-height: 100vh;
+  max-width: none !important;
+  justify-content: space-around;
+
   @include media-breakpoint-up('md') {
-    max-width: 360px;
+    background: radial-gradient(circle, #4bb1b9 0%, #191c24 100%) !important;
+    flex-direction: row;
   }
 }
+
+.card-cont {
+  width: 100%;
+  transform: translate(-50%, -50%);
+  top: 40%;
+  left: 50%;
+  border: #3f3f3f;
+  background: #ffffff;
+  box-shadow: 0 15px 25px rgb(0 0 0 / 60%);
+}
+
+.h4 {
+  padding-top: 7%;
+}
+
+.input {
+  width: 100%;
+  height: 50px;
+}
+
+.btns {
+  width: 100%;
+  height: 50px;
+}
+
+.valid {
+  margin-top: 10px;
+  margin-bottom: 10px;
+}
+
+.containers {
+  box-shadow: 0px 10px 40px -10px rgba(0, 0, 0, 0.7);
+  width: 130px;
+  height: 130px;
+  position: absolute;
+  top: -14%;
+  left: 110px;
+  background: #252323;
+}
+
+.logo-pos {
+  position: absolute;
+  top: -20%;
+  left: 34%;
+}
+
+.imges {
+  position: absolute;
+  top: 35%;
+  left: 13%;
+}
+
+.img-bmc {
+  position: absolute;
+  bottom: 2%;
+  right: 2%;
+}
+.img-margin {
+  margin: inherit;
+}
 </style>
diff --git a/src/views/Login/Login.vue b/src/views/Login/Login.vue
index 9f5acbc..f385259 100644
--- a/src/views/Login/Login.vue
+++ b/src/views/Login/Login.vue
@@ -165,17 +165,15 @@ export default {
           localStorage.setItem('storedUsername', username);
           this.$store.commit('global/setUsername', username);
           this.$store.commit('global/setLanguagePreference', i18n.locale);
-          return this.$store.dispatch(
-            'authentication/checkPasswordChangeRequired',
-            username
-          );
-        })
-        .then((passwordChangeRequired) => {
-          if (passwordChangeRequired) {
-            this.$router.push('/change-password');
-          } else {
-            this.$router.push('/');
-          }
+          this.$store
+            .dispatch('authentication/checkPasswordChangeRequired', username)
+            .then((passwordChangeRequired) => {
+              if (passwordChangeRequired === true) {
+                this.$router.push('/change-password');
+              } else {
+                this.$router.push('/');
+              }
+            });
         })
         .catch((error) => console.log(error))
         .finally(() => (this.disableSubmitButton = false));
-- 
2.25.1

