From d0f9b168c22826a5c597bba21eac12812a5c592a Mon Sep 17 00:00:00 2001
From: sivaprabug <sivaprabug@ami.com>
Date: Thu, 29 Sep 2022 10:50:15 +0530
Subject: [PATCH] password_policies

Signed-off-by: sivaprabug <sivaprabug@ami.com>
---
 src/locales/en-US.json                        | 15 +++-
 .../SecurityAndAccess/PoliciesStore.js        | 67 ++++++++++++++-
 .../SecurityAndAccess/Policies/Policies.vue   | 86 ++++++++++++++++++-
 3 files changed, 163 insertions(+), 5 deletions(-)

diff --git a/src/locales/en-US.json b/src/locales/en-US.json
index eb6a547..f3adfc5 100644
--- a/src/locales/en-US.json
+++ b/src/locales/en-US.json
@@ -830,6 +830,8 @@
       "successIpmiPort": "Successfully update IPMI Port value.",
       "successSolSshPort": "Successfully update SOL SSH Port value.",
       "errorSessionTimeout": "Error in changing session timeout.",
+      "errorComplexity": "Error in changing complexity.",
+      "errorPasswordHistory": "Error in changing password history.",
       "successIpmiDisabled": "Successfully disabled IPMI security setting.",
       "successIpmiEnabled": "Successfully enabled IPMI security setting.",
       "successRtadDisabled": "Successfully disabled RTAD security setting.",
@@ -844,7 +846,9 @@
       "successVmcEnabled": "Successfully enabled Virtual Media security setting.",
       "successSOLDisabled": "Successfully disabled SOL SSH security setting.",
       "successSOLEnabled": "Successfully enabled SOL SSH security setting.",
-      "successSessionTimeout": "Successfully changed the session timeout value."
+      "successSessionTimeout": "Successfully changed the session timeout value.",
+      "successComplexity": "Successfully changed the complexity value.",
+      "successPasswordHistory": "Successfully changed the password history value."
     },
     "vtpm": "VirtualTPM",
     "vtpmDescription": "Enabling vTPM makes a TPM available to the guest operating system.",
@@ -855,7 +859,12 @@
     "vmc": "Virtual Media",
     "vmcDescription": "Enabling Virtual Media for image redirection",
     "solssh": "SOL SSH",
-    "solDescription": "Enabling SOL SSH"
+    "solDescription": "Enabling SOL SSH",
+    "complexity": "Complexity",
+    "complexityDescription": "Select the Password History dropdown to set the password History (0 to 5). saves the last N(0~5) passwords for each user in order to force password change history and keep the user from alternating between the same password too frequently.",
+    "passwordHistory": "Password History",
+    "passwordHistoryDescription": "Select the Password Complexity dropdown to set the password complexity (Low, Medium, High). Password cannot exceed 20 bytes of length due to IPMI 2.0 restrictions."
+
   },
   "pagePower": {
     "description": "Set a power cap to keep power consumption at or below the specified value in watts",
@@ -1253,4 +1262,4 @@
     "ZW": "Zimbabwe",
     "AX": "Ã…land Islands"
   }
-}
+}
\ No newline at end of file
diff --git a/src/store/modules/SecurityAndAccess/PoliciesStore.js b/src/store/modules/SecurityAndAccess/PoliciesStore.js
index bce9047..ea31334 100644
--- a/src/store/modules/SecurityAndAccess/PoliciesStore.js
+++ b/src/store/modules/SecurityAndAccess/PoliciesStore.js
@@ -16,6 +16,8 @@ const PoliciesStore = {
     kvmEnabled: true,
     vmcEnabled: true,
     solEnabled: true,
+    complexity: '',
+    passwordHistory: null,
   },
   getters: {
     sshProtocolEnabled: (state) => state.sshProtocolEnabled,
@@ -30,6 +32,8 @@ const PoliciesStore = {
     solSshServiceEnabled: (state) => state.solSshServiceEnabled,
     kvmServiceEnabled: (state) => state.kvmServiceEnabled,
     virtualMediaServiceEnabled: (state) => state.virtualMediaServiceEnabled,
+    complexity: (state) => state.complexity,
+    passwordHistory: (state) => state.passwordHistory,
   },
   mutations: {
     setSshProtocolEnabled: (state, sshProtocolEnabled) =>
@@ -52,6 +56,9 @@ const PoliciesStore = {
     setSessionTimeoutValue(state, sessionTimeoutValue) {
       state.sessionTimeoutValue = sessionTimeoutValue;
     },
+    setComplexity: (state, complexity) => (state.complexity = complexity),
+    setPasswordHistory: (state, passwordHistory) =>
+      (state.passwordHistory = passwordHistory),
   },
   actions: {
     setSessionTimeoutNewValue({ commit }, sessionTimeoutNewValue) {
@@ -107,6 +114,19 @@ const PoliciesStore = {
         })
         .catch((error) => console.log(error));
     },
+    async getAccountService({ commit }) {
+      return await api
+        .get('/redfish/v1/AccountService')
+        .then((response) => {
+          const ComplexityValue =
+            response.data.Oem.OpenBMC.PasswordPolicyComplexity;
+          const passwordHistory =
+            response.data.Oem.OpenBMC.RememberOldPasswordTimes;
+          commit('setComplexity', ComplexityValue);
+          commit('setPasswordHistory', passwordHistory);
+        })
+        .catch((error) => console.log(error));
+    },
     async saveIpmiProtocolState({ commit }, protocolEnabled) {
       commit('setIpmiProtocolEnabled', protocolEnabled);
       const ipmi = {
@@ -325,12 +345,57 @@ const PoliciesStore = {
         })
         .catch((error) => {
           console.log(error);
-          commit('setSessionTimeoutValue', sessionTimeoutNewValue);
           if (sessionTimeoutNewValue) {
             throw new Error(i18n.t('pagePolicies.toast.errorSessionTimeout'));
           }
         });
     },
+    async saveComplexity({ commit }, complexityValue) {
+      commit('setComplexity', complexityValue);
+      const Oem = {
+        Oem: {
+          OpenBMC: {
+            PasswordPolicyComplexity: complexityValue,
+          },
+        },
+      };
+      return await api
+        .patch('/redfish/v1/AccountService', Oem)
+        .then(() => {
+          if (complexityValue) {
+            return i18n.t('pagePolicies.toast.successComplexity');
+          }
+        })
+        .catch((error) => {
+          console.log(error);
+          if (complexityValue) {
+            throw new Error(i18n.t('pagePolicies.toast.errorComplexity'));
+          }
+        });
+    },
+    async savePasswordHistory({ commit }, passwordHistoryValue) {
+      commit('setPasswordHistory', passwordHistoryValue);
+      const Oem = {
+        Oem: {
+          OpenBMC: {
+            RememberOldPasswordTimes: passwordHistoryValue,
+          },
+        },
+      };
+      return await api
+        .patch('/redfish/v1/AccountService', Oem)
+        .then(() => {
+          if (passwordHistoryValue) {
+            return i18n.t('pagePolicies.toast.successPasswordHistory');
+          }
+        })
+        .catch((error) => {
+          console.log(error);
+          if (passwordHistoryValue) {
+            throw new Error(i18n.t('pagePolicies.toast.errorPasswordHistory'));
+          }
+        });
+    },
   },
 };
 
diff --git a/src/views/SecurityAndAccess/Policies/Policies.vue b/src/views/SecurityAndAccess/Policies/Policies.vue
index 7bb9136..512ec5f 100644
--- a/src/views/SecurityAndAccess/Policies/Policies.vue
+++ b/src/views/SecurityAndAccess/Policies/Policies.vue
@@ -2,7 +2,7 @@
   <b-container fluid="xl">
     <page-title />
     <b-row>
-      <b-col md="8">
+      <b-col md="12">
         <b-row v-if="!modifySSHPolicyDisabled" class="setting-section">
           <b-col class="d-flex align-items-center justify-content-between">
             <dl class="mr-3 w-75">
@@ -229,6 +229,44 @@
             </b-form-select>
           </b-col>
         </b-row>
+        <b-row class="setting-section">
+          <b-col class="d-flex align-items-center justify-content-between">
+            <dl class="mt-3 mr-3 w-75">
+              <dt>{{ $t('pagePolicies.complexity') }}</dt>
+              <dd>
+                {{ $t('pagePolicies.complexityDescription') }}
+              </dd>
+            </dl>
+          </b-col>
+          <b-col lg="3" class="session-timeout">
+            <b-form-select
+              id="complexity"
+              v-model="complexityState"
+              :options="complexityOptions"
+              @change="changeComplexity"
+            >
+            </b-form-select>
+          </b-col>
+        </b-row>
+        <b-row class="setting-section">
+          <b-col class="d-flex align-items-center justify-content-between">
+            <dl class="mt-3 mr-3 w-75">
+              <dt>{{ $t('pagePolicies.passwordHistory') }}</dt>
+              <dd>
+                {{ $t('pagePolicies.passwordHistoryDescription') }}
+              </dd>
+            </dl>
+          </b-col>
+          <b-col lg="3" class="session-timeout">
+            <b-form-select
+              id="password-history"
+              v-model="passwordHistoryState"
+              :options="passwordHistoryOptions"
+              @change="changePasswordHistory"
+            >
+            </b-form-select>
+          </b-col>
+        </b-row>
       </b-col>
     </b-row>
   </b-container>
@@ -258,6 +296,20 @@ export default {
         { value: 28800, text: '8 Hours' },
         { value: 86400, text: '1 Day' },
       ],
+      complexityOptions: [
+        { value: 'Disabled', text: 'Disabled' },
+        { value: 'Low', text: 'Low' },
+        { value: 'Medium', text: 'Medium' },
+        { value: 'High', text: 'High' },
+      ],
+      passwordHistoryOptions: [
+        { value: 0, text: 0 },
+        { value: 1, text: 1 },
+        { value: 2, text: 2 },
+        { value: 3, text: 3 },
+        { value: 4, text: 4 },
+        { value: 5, text: 5 },
+      ],
       modifySSHPolicyDisabled:
         process.env.VUE_APP_MODIFY_SSH_POLICY_DISABLED === 'true',
     };
@@ -343,6 +395,22 @@ export default {
         this.$store.dispatch('policies/setSessionTimeoutNewValue', newValue);
       },
     },
+    complexityState: {
+      get() {
+        return this.$store.getters['policies/complexity'];
+      },
+      set(newValue) {
+        this.$store.commit('policies/setComplexity', newValue);
+      },
+    },
+    passwordHistoryState: {
+      get() {
+        return this.$store.getters['policies/passwordHistory'];
+      },
+      set(newValue) {
+        this.$store.commit('policies/setPasswordHistory', newValue);
+      },
+    },
   },
   created() {
     this.startLoader();
@@ -351,6 +419,7 @@ export default {
       this.$store.dispatch('policies/getNetworkProtocolStatus'),
       this.$store.dispatch('policies/getSessionTimeout'),
       this.$store.dispatch('policies/getKvmServiceStatus'),
+      this.$store.dispatch('policies/getAccountService'),
     ]).finally(() => this.endLoader());
   },
   methods: {
@@ -414,6 +483,21 @@ export default {
         .then((message) => this.successToast(message))
         .catch(({ message }) => this.errorToast(message));
     },
+    changeComplexity() {
+      this.$store
+        .dispatch('policies/saveComplexity', this.complexityState)
+        .then((message) => this.successToast(message))
+        .catch(({ message }) => this.errorToast(message));
+    },
+    changePasswordHistory() {
+      this.$store
+        .dispatch(
+          'policies/savePasswordHistory',
+          parseInt(this.passwordHistoryState)
+        )
+        .then((message) => this.successToast(message))
+        .catch(({ message }) => this.errorToast(message));
+    },
   },
 };
 </script>
-- 
2.25.1

