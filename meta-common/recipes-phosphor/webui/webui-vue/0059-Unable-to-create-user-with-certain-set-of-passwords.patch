<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
From c97cba8f750b2875b2876cac3b09d15ab2863cf1 Mon Sep 17 00:00:00 2001
From: Sivaprabu Ganesan <sivaprabug@ami.com>
Date: Wed, 14 Jun 2023 17:47:02 +0530
=======
From ff11f299034980c43942e44776d4da7322eacc86 Mon Sep 17 00:00:00 2001
From: Sivaprabu Ganesan <sivaprabug@ami.com>
Date: Tue, 13 Jun 2023 22:26:19 +0530
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
=======
From ff11f299034980c43942e44776d4da7322eacc86 Mon Sep 17 00:00:00 2001
From: Sivaprabu Ganesan <sivaprabug@ami.com>
Date: Tue, 13 Jun 2023 22:26:19 +0530
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
=======
From c97cba8f750b2875b2876cac3b09d15ab2863cf1 Mon Sep 17 00:00:00 2001
From: Sivaprabu Ganesan <sivaprabug@ami.com>
Date: Wed, 14 Jun 2023 17:47:02 +0530
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
Subject: [PATCH] Unable to create user with certain set of passwords and
 throwing proper error message

Signed-off-by: Sivaprabu Ganesan <sivaprabug@ami.com>
---
 src/locales/en-US.json                        |  46 ++++
 .../SecurityAndAccess/UserManagementStore.js  |  57 ++++-
 src/views/ProfileSettings/ProfileSettings.vue |  27 +--
 .../UserManagement/ModalUser.vue              |  27 +--
 .../PasswordComplexityRules.vue               | 207 ++++++++++++++++++
 .../UserManagement/UserManagement.vue         |  18 ++
 6 files changed, 332 insertions(+), 50 deletions(-)
 create mode 100644 src/views/SecurityAndAccess/UserManagement/PasswordComplexityRules.vue

diff --git a/src/locales/en-US.json b/src/locales/en-US.json
index e08e33b..fc86720 100644
--- a/src/locales/en-US.json
+++ b/src/locales/en-US.json
@@ -627,6 +627,8 @@
     "deleteUser": "Delete user | Delete users",
     "editUser": "Edit user",
     "viewPrivilegeRoleDescriptions": "View privilege role descriptions",
+    "passwordComplexityRules": "Password complexity rules",
+    "note": "To view or modify the password complexity rule go to security and access -> polices page",
     "modal": {
       "accountLocked": "Account locked",
       "accountStatus": "Account status",
@@ -671,6 +673,7 @@
       "errorLoadUsers": "Error loading users.",
       "errorSaveSettings": "Error saving account settings.",
       "errorUpdateUser": "Error updating user '%{username}'.",
+      "errorInvalidPassword": "Invalid Password check the Password complexity rules",
       "successBatchDelete": "Successfully deleted %{count} user. | Successfully deleted %{count} users.",
       "successBatchDisable": "Successfully disabled %{count} user. | Successfully disabled %{count} users.",
       "successBatchEnable": "Successfully enabled %{count} user. | Successfully enabled %{count} users.",
@@ -678,6 +681,49 @@
       "successDeleteUser": "Deleted user '%{username}'.",
       "successSaveSettings": "Successfully saved account settings.",
       "successUpdateUser": "Updated user '%{username}'."
+    },
+    "passwordRules": {
+      "passwordForHigh": {
+        "passwordComplexityForHigh": "Password Complexity for high",
+        "rule1": "Contains printable characters only.",
+        "rule2": "Password length should not be shorter than 8 characters.",
+        "rule3":"Meets following 4 criteria:" ,
+        "rule4": "Contains upper case (e.g. A, G).",
+        "rule5": "Contains lower case (e.g. a, g).",
+        "rule6": "Contains digit numbers (e.g. 1, 6).",
+        "rule7": "Contain at least a space or symbols (e.g. $, &).",
+        "rule8": "Could not contains username or the user name in reverse order (case insensitive).",
+        "rule9": "Have at least two new characters when compared with theprevious password.",
+        "rule10": "Could not contains continuous digits longer than or equal to 3 characters (e.g. BMC(123)ste, BMC(654)sfc are not allowed).",
+        "rule11": "Could not contains continuous alphabets longer than or equalto 3 characters (e.g. (AbC)3478!,57$(DeF)68k are notallowed).",
+        "rule12": "Alphabets could no longer than 3 characters (e.g. (Fher)145! are not allowed))",
+        "rule13": "Digits could no longer than 3 characters (e.g. Fgke(1245)#@, (4390)FGL$ are not allowed)",
+        "rule14": "Contains no more than 3 same alphabets(case insensitive) (e.g. Fkr4fcpF&f (4 'f' or 'F'),Glg5gt2G! (4 'g' or 'G') are not allowed)"
+      },
+      "passwordFormedium": {
+        "passwordComplexityFormedium": "Password Complexity for Medium",
+        "rule1": "Contains printable characters only.",
+        "rule2": "Password length should not be shorter than 8 characters.",
+        "rule3": "Cannot be the same as the username or the user name in reverse order.",
+        "rule4": "Have at least two new characters when compared with the previous password.",
+        "rule5": "Meets following 4 criteria:",
+        "rule6": "Contains upper case (e.g. A, G).",
+        "rule7": "Contains lower case (e.g. a, g).",
+        "rule8": "Contains digit numbers (e.g. 1, 6).",
+        "rule9": "Contain at least a space or symbols (e.g. $, &).",
+        "rule10": "Could not contains username or the user name in reverse order (case insensitive) (eg,username=Hello, Password=th12(oLleH)_78 is not allowed)."
+      },
+      "passwordForLow": {
+        "passwordComplexityForLow": "Password Complexity for Low",
+        "rule1": "Contains printable characters only.",
+        "rule2": "Password length should not be shorter than 6 characters.",
+        "rule3": "Meets following 4 criteria:",
+        "rule4": "Contains upper case (e.g. A, G).",
+        "rule5": "Contains lower case (e.g. a, g).",
+        "rule6": "Contains digit numbers (e.g. 1, 6).",
+        "rule7": "Contain at least a space or symbols (e.g. $, &).",
+        "rule8": "Could not contains user name or the user name in reverse order (pam_cracklib will check both) (case insensitive) (eg, username=Hello, both Password=th12(heLLo)_78 and Password=th12(oLleH)_78 is not allowed, same as Medium and High)."
+      }
     }
   },
   "pageLogin": {
diff --git a/src/store/modules/SecurityAndAccess/UserManagementStore.js b/src/store/modules/SecurityAndAccess/UserManagementStore.js
index 66e925d..d3db89d 100644
--- a/src/store/modules/SecurityAndAccess/UserManagementStore.js
+++ b/src/store/modules/SecurityAndAccess/UserManagementStore.js
@@ -131,12 +131,10 @@ const UserManagementStore = {
             username,
           })
         )
-        .catch((error) => {
+        .catch(async (error) => {
           console.log(error);
-          const message = i18n.t('pageUserManagement.toast.errorCreateUser', {
-            username,
-          });
-          throw new Error(message);
+          let temp = await dispatch('handleError', { error, username });
+          throw new Error(temp);
         });
     },
     async updateUser(
@@ -157,12 +155,10 @@ const UserManagementStore = {
             username: originalUsername,
           })
         )
-        .catch((error) => {
+        .catch(async (error) => {
           console.log(error);
-          const message = i18n.t('pageUserManagement.toast.errorUpdateUser', {
-            username: originalUsername,
-          });
-          throw new Error(message);
+          let temp = await dispatch('handleError', { error, originalUsername });
+          throw new Error(temp);
         });
     },
     async deleteUser({ dispatch }, username) {
@@ -331,6 +327,47 @@ const UserManagementStore = {
           throw new Error(message);
         });
     },
+    async handleError(_, { error, username, originalUsername }) {
+      if (
+        error.response &&
+        error.response.data &&
+        error.response.data['Password@Message.ExtendedInfo']
+      ) {
+        const extendedInfo =
+          error.response.data['Password@Message.ExtendedInfo'];
+        if (Array.isArray(extendedInfo) && extendedInfo.length > 0) {
+          const message = extendedInfo[0].Message;
+          if (message && message.indexOf('Password') !== -1) {
+            const errorMessage = i18n.t(
+              'pageUserManagement.toast.errorInvalidPassword',
+              {
+                username,
+                originalUsername,
+              }
+            );
+            return errorMessage;
+          }
+        }
+      }
+      if (username && username != undefined) {
+        const errorMessage = i18n.t(
+          'pageUserManagement.toast.errorCreateUser',
+          {
+            username,
+          }
+        );
+        return errorMessage;
+      }
+      if (originalUsername && originalUsername != undefined) {
+        const errorMessage = i18n.t(
+          'pageUserManagement.toast.errorUpdateUser',
+          {
+            username: originalUsername,
+          }
+        );
+        return errorMessage;
+      }
+    },
   },
 };
 
diff --git a/src/views/ProfileSettings/ProfileSettings.vue b/src/views/ProfileSettings/ProfileSettings.vue
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
index 8f01c59..1ca52d1 100644
=======
index 8f01c59..88cad7e 100644
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
=======
index 8f01c59..88cad7e 100644
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
=======
index 8f01c59..1ca52d1 100644
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
--- a/src/views/ProfileSettings/ProfileSettings.vue
+++ b/src/views/ProfileSettings/ProfileSettings.vue
@@ -48,18 +48,8 @@
                   @input="$v.form.newPassword.$touch()"
                 />
                 <b-form-invalid-feedback role="alert">
-                  <template
-                    v-if="
-                      !$v.form.newPassword.minLength ||
-                      !$v.form.newPassword.maxLength
-                    "
-                  >
-                    {{
-                      $t('pageProfileSettings.newPassLabelTextInfo', {
-                        min: passwordRequirements.minLength,
-                        max: passwordRequirements.maxLength,
-                      })
-                    }}
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
+                  <template v-if="!$v.form.newPassword.pattern">
=======
+                  <template v-if="!$v.form.password.pattern">
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
=======
+                  <template v-if="!$v.form.password.pattern">
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
=======
+                  <template v-if="!$v.form.newPassword.pattern">
>>>>>>> Unable to create user with certain set of passwords and throwing proper error message
+                    {{ $t('global.form.invalidFormat') }}
                   </template>
                 </b-form-invalid-feedback>
               </input-password-toggle>
@@ -130,7 +120,7 @@
 <script>
 import BVToastMixin from '@/components/Mixins/BVToastMixin';
 import InputPasswordToggle from '@/components/Global/InputPasswordToggle';
-import { maxLength, minLength, sameAs } from 'vuelidate/lib/validators';
+import { sameAs } from 'vuelidate/lib/validators';
 import LoadingBarMixin from '@/components/Mixins/LoadingBarMixin';
 import LocalTimezoneLabelMixin from '@/components/Mixins/LocalTimezoneLabelMixin';
 import PageTitle from '@/components/Global/PageTitle';
@@ -176,8 +166,9 @@ export default {
     return {
       form: {
         newPassword: {
-          minLength: minLength(this.passwordRequirements.minLength),
-          maxLength: maxLength(this.passwordRequirements.maxLength),
+          pattern: function (pw) {
+            return this.passwordValidation(pw);
+          },
         },
         confirmPassword: {
           sameAsPassword: sameAs('newPassword'),
@@ -217,6 +208,12 @@ export default {
       }
       this.saveTimeZonePrefrenceData();
     },
+    passwordValidation(val) {
+      if (!/^(?=.*[\w\d]).+/gi.test(val)) {
+        return false;
+      }
+      return true;
+    },
   },
 };
 </script>
diff --git a/src/views/SecurityAndAccess/UserManagement/ModalUser.vue b/src/views/SecurityAndAccess/UserManagement/ModalUser.vue
index 251b6ae..90733c9 100644
--- a/src/views/SecurityAndAccess/UserManagement/ModalUser.vue
+++ b/src/views/SecurityAndAccess/UserManagement/ModalUser.vue
@@ -153,18 +153,6 @@
                   <template v-if="!$v.form.password.required">
                     {{ $t('global.form.fieldRequired') }}
                   </template>
-                  <template
-                    v-if="
-                      !$v.form.password.minLength || !$v.form.password.maxLength
-                    "
-                  >
-                    {{
-                      $t('pageUserManagement.modal.passwordMustBeBetween', {
-                        min: passwordRequirements.minLength,
-                        max: passwordRequirements.maxLength,
-                      })
-                    }}
-                  </template>
                   <template v-else-if="!$v.form.password.pattern">
                     {{ $t('global.form.invalidFormat') }}
                   </template>
@@ -231,7 +219,6 @@
 import {
   required,
   maxLength,
-  minLength,
   sameAs,
   helpers,
   requiredIf,
@@ -299,7 +286,7 @@ export default {
         username: {
           required,
           maxLength: maxLength(16),
-          pattern: helpers.regex('pattern', /^([a-zA-Z_][a-zA-Z0-9_]*)/),
+          pattern: helpers.regex('pattern', /^[a-zA-Z_][a-zA-Z0-9_]*$/),
         },
         privilege: {
           required,
@@ -308,8 +295,6 @@ export default {
           required: requiredIf(function () {
             return this.requirePassword();
           }),
-          minLength: minLength(this.passwordRequirements.minLength),
-          maxLength: maxLength(this.passwordRequirements.maxLength),
           pattern: function (pw) {
             return this.passwordValidation(pw);
           },
@@ -391,15 +376,7 @@ export default {
       this.handleSubmit();
     },
     passwordValidation(val) {
-      if (
-        /([a-zA-Z0-9])\1\1+|(sshd|bin|daemon|sys|adm|asdfghjk|asdfghjkl|sync|shutdown|halt|mail|news|uucp operator|games|ftp|man|nobody|stunnel4|password|Password|qwertyui|qwertyuiop)+/gi.test(
-          val
-        ) ||
-        /^[!@#$%^&*)(+=._-]+$/gi.test(val) ||
-        this.form.password.indexOf(this.form.username) !== -1 ||
-        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?!\d)[a-zA-Z\d]$/gi.test(val) ||
-        /^(?:^|\D)(\d{8,20})$/gi.test(val)
-      ) {
+      if (!/^(?=.*[\w\d]).+/gi.test(val)) {
         return false;
       }
       return true;
diff --git a/src/views/SecurityAndAccess/UserManagement/PasswordComplexityRules.vue b/src/views/SecurityAndAccess/UserManagement/PasswordComplexityRules.vue
new file mode 100644
index 0000000..d4434ed
--- /dev/null
+++ b/src/views/SecurityAndAccess/UserManagement/PasswordComplexityRules.vue
@@ -0,0 +1,207 @@
+<template>
+  <b-container fluid="xl">
+    <b-form>
+      <div class="form-background p-3">
+        <b-form-group>
+          <h5 class="bold">
+            {{
+              $t(
+                'pageUserManagement.passwordRules.passwordForHigh.passwordComplexityForHigh'
+              )
+            }}
+          </h5>
+          <ul>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForHigh.rule1') }}
+            </li>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForHigh.rule2') }}
+            </li>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForHigh.rule3') }}
+              <ul>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForHigh.rule4')
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForHigh.rule5')
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForHigh.rule6')
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForHigh.rule7')
+                  }}
+                </li>
+              </ul>
+            </li>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForHigh.rule8') }}
+            </li>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForHigh.rule9') }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordForHigh.rule10')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordForHigh.rule11')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordForHigh.rule12')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordForHigh.rule13')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordForHigh.rule14')
+              }}
+            </li>
+          </ul>
+          <h5 class="bold">
+            {{
+              $t(
+                'pageUserManagement.passwordRules.passwordFormedium.passwordComplexityFormedium'
+              )
+            }}
+          </h5>
+          <ul>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordFormedium.rule1')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordFormedium.rule2')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordFormedium.rule3')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordFormedium.rule4')
+              }}
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordFormedium.rule5')
+              }}
+              <ul>
+                <li>
+                  {{
+                    $t(
+                      'pageUserManagement.passwordRules.passwordFormedium.rule6'
+                    )
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t(
+                      'pageUserManagement.passwordRules.passwordFormedium.rule7'
+                    )
+                  }}.
+                </li>
+                <li>
+                  {{
+                    $t(
+                      'pageUserManagement.passwordRules.passwordFormedium.rule8'
+                    )
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t(
+                      'pageUserManagement.passwordRules.passwordFormedium.rule9'
+                    )
+                  }}
+                </li>
+              </ul>
+            </li>
+            <li>
+              {{
+                $t('pageUserManagement.passwordRules.passwordFormedium.rule10')
+              }}
+            </li>
+          </ul>
+          <h5 class="bold">
+            {{
+              $t(
+                'pageUserManagement.passwordRules.passwordForLow.passwordComplexityForLow'
+              )
+            }}
+          </h5>
+          <ul>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForLow.rule1') }}
+            </li>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForLow.rule2') }}
+            </li>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForLow.rule3') }}
+              <ul>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForLow.rule4')
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForLow.rule5')
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForLow.rule6')
+                  }}
+                </li>
+                <li>
+                  {{
+                    $t('pageUserManagement.passwordRules.passwordForLow.rule7')
+                  }}
+                </li>
+              </ul>
+            </li>
+            <li>
+              {{ $t('pageUserManagement.passwordRules.passwordForLow.rule8') }}
+            </li>
+          </ul>
+        </b-form-group>
+        <div class="bold">
+          <span>{{ 'Note: ' }}</span
+          >{{ $t('pageUserManagement.note') }}
+        </div>
+      </div>
+    </b-form>
+  </b-container>
+</template>
+
+<script>
+export default {};
+</script>
+
+<style scoped>
+.bold {
+  font-weight: 700;
+}
+</style>
diff --git a/src/views/SecurityAndAccess/UserManagement/UserManagement.vue b/src/views/SecurityAndAccess/UserManagement/UserManagement.vue
index aa0abb3..8064231 100644
--- a/src/views/SecurityAndAccess/UserManagement/UserManagement.vue
+++ b/src/views/SecurityAndAccess/UserManagement/UserManagement.vue
@@ -101,6 +101,22 @@
         </b-collapse>
       </b-col>
     </b-row>
+    <b-row>
+      <b-col xl="8">
+        <b-button
+          v-b-toggle.collapse-Password-rules
+          data-test-id="userManagement-button-passwordComplexityRules"
+          variant="link"
+          class="mt-3"
+        >
+          <icon-chevron />
+          {{ $t('pageUserManagement.passwordComplexityRules') }}
+        </b-button>
+        <b-collapse id="collapse-Password-rules" class="mt-3">
+          <password-complexity-rules />
+        </b-collapse>
+      </b-col>
+    </b-row>
     <!-- Modals -->
     <modal-settings :settings="setting" @ok="saveAccountSettings" />
     <modal-user
@@ -125,6 +141,7 @@ import PageTitle from '@/components/Global/PageTitle';
 import TableRoles from './TableRoles';
 import TableToolbar from '@/components/Global/TableToolbar';
 import TableRowAction from '@/components/Global/TableRowAction';
+import PasswordComplexityRules from './PasswordComplexityRules.vue';
 
 import BVTableSelectableMixin, {
   selectedRows,
@@ -149,6 +166,7 @@ export default {
     TableRoles,
     TableRowAction,
     TableToolbar,
+    PasswordComplexityRules,
   },
   mixins: [BVTableSelectableMixin, BVToastMixin, LoadingBarMixin],
   beforeRouteLeave(to, from, next) {
-- 
2.25.1

