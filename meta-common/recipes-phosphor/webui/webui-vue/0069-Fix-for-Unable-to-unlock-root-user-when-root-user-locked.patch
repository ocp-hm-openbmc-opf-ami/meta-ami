From ca237add02ae993ce47781167834637bfca05eb1 Mon Sep 17 00:00:00 2001
From: Aravinth S <aravinths@ami.com>
Date: Mon, 3 Jul 2023 18:42:53 +0530
Subject: [PATCH] Fix for unable to unlock root user when locked

Signed-off-by: Aravinth S <aravinths@ami.com>
---
 .../SecurityAndAccess/UserManagementStore.js  | 14 ++++++--
 .../UserManagement/ModalUser.vue              | 33 ++++++++++++-------
 .../UserManagement/UserManagement.vue         |  5 ++-
 3 files changed, 37 insertions(+), 15 deletions(-)

diff --git a/src/store/modules/SecurityAndAccess/UserManagementStore.js b/src/store/modules/SecurityAndAccess/UserManagementStore.js
index d3db89d..6d828d5 100644
--- a/src/store/modules/SecurityAndAccess/UserManagementStore.js
+++ b/src/store/modules/SecurityAndAccess/UserManagementStore.js
@@ -77,9 +77,19 @@ const UserManagementStore = {
         .then((response) =>
           response.data.Members.map((user) => user['@odata.id'])
         )
-        .then((userIds) => api.all(userIds.map((user) => api.get(user))))
+        .then((userIds) => {
+          const userRequests = userIds.map((user) => {
+            return api.get(user).catch((error) => {
+              console.log(`Failed to fetch user ${user}: ${error}`);
+              return null;
+            });
+          });
+          return Promise.all(userRequests);
+        })
         .then((users) => {
-          const userData = users.map((user) => user.data);
+          const userData = users
+            .filter((user) => user !== null)
+            .map((user) => user.data);
           commit('setUsers', userData);
         })
         .catch((error) => {
diff --git a/src/views/SecurityAndAccess/UserManagement/ModalUser.vue b/src/views/SecurityAndAccess/UserManagement/ModalUser.vue
index 90733c9..b8e9909 100644
--- a/src/views/SecurityAndAccess/UserManagement/ModalUser.vue
+++ b/src/views/SecurityAndAccess/UserManagement/ModalUser.vue
@@ -17,9 +17,6 @@
               <template v-if="!$v.form.manualUnlock.$dirty">
                 {{ $t('pageUserManagement.modal.accountLocked') }}
               </template>
-              <template v-else>
-                {{ $t('pageUserManagement.modal.clickSaveToUnlockAccount') }}
-              </template>
             </alert>
           </b-col>
           <b-col sm="3">
@@ -33,7 +30,7 @@
               variant="primary"
               :disabled="$v.form.manualUnlock.$dirty"
               data-test-id="userManagement-button-manualUnlock"
-              @click="$v.form.manualUnlock.$touch()"
+              @click="accountUnLock"
             >
               {{ $t('pageUserManagement.modal.unlock') }}
             </b-button>
@@ -56,7 +53,10 @@
                 name="user-status"
                 data-test-id="userManagement-radioButton-statusDisabled"
                 :value="false"
-                :disabled="!newUser && originalUsername === disabled"
+                :disabled="
+                  (!newUser && originalUsername === disabled) ||
+                  form.username === 'root'
+                "
                 @input="$v.form.status.$touch()"
               >
                 {{ $t('global.status.disabled') }}
@@ -82,7 +82,10 @@
                 aria-describedby="username-help-block"
                 data-test-id="userManagement-input-username"
                 :state="getValidationState($v.form.username)"
-                :disabled="!newUser && originalUsername === disabled"
+                :disabled="
+                  (!newUser && originalUsername === disabled) ||
+                  form.username === 'root'
+                "
                 @input="$v.form.username.$touch()"
               />
               <b-form-invalid-feedback role="alert">
@@ -226,10 +229,11 @@ import {
 import VuelidateMixin from '@/components/Mixins/VuelidateMixin.js';
 import InputPasswordToggle from '@/components/Global/InputPasswordToggle';
 import Alert from '@/components/Global/Alert';
+import BVToastMixin from '@/components/Mixins/BVToastMixin';
 
 export default {
   components: { Alert, InputPasswordToggle },
-  mixins: [VuelidateMixin],
+  mixins: [VuelidateMixin, BVToastMixin],
   props: {
     user: {
       type: Object,
@@ -335,11 +339,6 @@ export default {
         if (this.$v.form.password.$dirty) {
           userData.password = this.form.password;
         }
-        if (this.$v.form.manualUnlock.$dirty) {
-          // If form manualUnlock control $dirty then
-          // set user Locked property to false
-          userData.locked = false;
-        }
         if (Object.entries(userData).length === 1) {
           this.closeModal();
           return;
@@ -381,6 +380,16 @@ export default {
       }
       return true;
     },
+    accountUnLock() {
+      let userData = {};
+      userData.originalUsername = this.originalUsername;
+      userData.locked = false;
+      this.$store
+        .dispatch('userManagement/updateUser', userData)
+        .then((success) => this.successToast(success))
+        .catch(({ message }) => this.errorToast(message))
+        .finally(() => this.closeModal());
+    },
   },
 };
 </script>
diff --git a/src/views/SecurityAndAccess/UserManagement/UserManagement.vue b/src/views/SecurityAndAccess/UserManagement/UserManagement.vue
index 8064231..612ecd9 100644
--- a/src/views/SecurityAndAccess/UserManagement/UserManagement.vue
+++ b/src/views/SecurityAndAccess/UserManagement/UserManagement.vue
@@ -273,7 +273,10 @@ export default {
   },
   methods: {
     editEnable(user) {
-      if ('root' === this.$store.getters['global/username']) {
+      if (
+        'root' === this.$store.getters['global/username'] ||
+        user.RoleId === 'Administrator'
+      ) {
         return true;
       } else {
         return user.UserName === 'root' ? false : true;
-- 
2.25.1

