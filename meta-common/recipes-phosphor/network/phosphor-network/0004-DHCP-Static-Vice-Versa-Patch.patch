diff --git a/src/ethernet_interface.hpp b/src/ethernet_interface.hpp
index daedc506..cc07ee59 100644
--- a/src/ethernet_interface.hpp
+++ b/src/ethernet_interface.hpp
@@ -167,6 +181,8 @@ class EthernetInterface : public Ifaces
     using EthernetInterfaceIntf::dhcp6;
     bool dhcp6(bool value) override;
 
+    void disableDHCP(IP::Protocol protocol);
+
     /** Retrieve Link State */
     bool linkUp() const override; 
diff --git a/src/ethernet_interface.cpp b/src/ethernet_interface.cpp
index 87c660d2..94567b78 100644
--- a/src/ethernet_interface.cpp
+++ b/src/ethernet_interface.cpp 
@@ -139,6 +151,33 @@ static IP::Protocol getProtocol(const InAddrAny& addr)
     throw std::runtime_error("Invalid addr type");
 }
 
void EthernetInterface::disableDHCP(IP::Protocol protocol)
+{
+        syslog(LOG_WARNING, "NIC disableDHCP");
+    DHCPConf dhcpState = EthernetInterfaceIntf::dhcpEnabled();
+    if (dhcpState == EthernetInterface::DHCPConf::both)
+    {
+        if (protocol == IP::Protocol::IPv4)
+        {
+            dhcpEnabled(EthernetInterface::DHCPConf::v6);
+        }
+        else if (protocol == IP::Protocol::IPv6)
+        {
+            dhcpEnabled(EthernetInterface::DHCPConf::v4);
+        }
+    }
+    else if ((dhcpState == EthernetInterface::DHCPConf::v4) &&
+             (protocol == IP::Protocol::IPv4))
+    {
+        dhcpEnabled(EthernetInterface::DHCPConf::none);
+    }
+    else if ((dhcpState == EthernetInterface::DHCPConf::v6) &&
+             (protocol == IP::Protocol::IPv6))
+    {
+        dhcpEnabled(EthernetInterface::DHCPConf::none);
+    }
+}
+
 bool EthernetInterface::dhcpIsEnabled(IP::Protocol family)
 {
     switch (family)
@@ -239,25 +278,15 @@ unsigned EthernetInterface::ifIndex() const
 ObjectPath EthernetInterface::ip(IP::Protocol protType, std::string ipaddress,
                                  uint8_t prefixLength, std::string gateway)
 {
+          syslog(LOG_WARNING, "NIC ip");
     if (dhcpIsEnabled(protType))
     {
-        log<level::INFO>("DHCP enabled on the interface, disabling"),
+        log<level::INFO>("DHCP enabled on the interface"),
             entry("INTERFACE=%s", interfaceName().c_str());
-        switch (protType)
-        {
-            case IP::Protocol::IPv4:
-                dhcp4(false);
-                break;
-            case IP::Protocol::IPv6:
-                dhcp6(false);
-                break;
-        }
-        // Delete the IP address object and that reloads the networkd
-        // to allow the same IP address to be set as Static IP
-        deleteObject(ipaddress);
+        disableDHCP(protType);
     }
 
-    IP::AddressOrigin origin = IP::AddressOrigin::Static;
+     IP::AddressOrigin origin = IP::AddressOrigin::Static;
 
     int addressFamily = (protType == IP::Protocol::IPv4) ? AF_INET : AF_INET6;
 
@@ -1201,5 +1230,4 @@ std::string EthernetInterface::defaultGateway6(std::string gateway)
 
     return gw;
 }
+
