From 806deee65bc3b2f5a10fff3c389c505fc1396346 Mon Sep 17 00:00:00 2001
From: Sandeep <sandeepap@ami.com>
Date: Wed, 24 Jan 2024 14:58:37 +0530
Subject: [PATCH] FIXES LED button Display issue in Overview Page

Also it covers recreation of patch 0070

Tested:

URI : https://{{IP}}/redfish/v1/Managers/bmc
Method : GET

Response :

{
"@odata.id": "/redfish/v1/Managers/bmc",
"@odata.type": "#Manager.v1_14_0.Manager",
"Actions": {
"#Manager.Reset": {
"@Redfish.ActionInfo": "/redfish/v1/Managers/bmc/ResetActionInfo",
"target": "/redfish/v1/Managers/bmc/Actions/Manager.Reset"
},
"#Manager.ResetToDefaults": {
"ResetType@Redfish.AllowableValues": [
"ResetAll",
"ResetToDefaultButKeepReservedSettings"
],
"target": "/redfish/v1/Managers/bmc/Actions/Manager.ResetToDefaults"
}
},
"CommandShell": {
"ConnectTypesSupported": [
"SSH",
"IPMI"
],
"MaxConcurrentSessions": 4,
"ServiceEnabled": true
},
"DateTime": "2023-10-16T09:36:11+00:00",
"DateTimeLocalOffset": "+00:00",
"Description": "Baseboard Management Controller",
"EthernetInterfaces": {
"@odata.id": "/redfish/v1/Managers/bmc/EthernetInterfaces"
},
"FirmwareVersion": "ot-0.3-100-ge00442-5d1fbc4",
"Id": "bmc",
"LastResetTime": "2023-10-16T09:26:20+00:00",
"Links": {
"ActiveSoftwareImage": {
"@odata.id": "/redfish/v1/UpdateService/FirmwareInventory/bmc_active"
},
"ManagerForChassis": [
{
"@odata.id": "/redfish/v1/Chassis/AC_Baseboard"
}
],
"ManagerForChassis@odata.count": 1,
"ManagerForServers": [
{
"@odata.id": "/redfish/v1/Systems/system"
}
],
"ManagerForServers@odata.count": 1,
"ManagerInChassis": {
"@odata.id": "/redfish/v1/Chassis/AC_Baseboard"
},
"SoftwareImages": [
{
"@odata.id": "/redfish/v1/UpdateService/FirmwareInventory/bmc_active"
}
],
"SoftwareImages@odata.count": 1
},
"LocationIndicatorActive": false,
"LogServices": {
"@odata.id": "/redfish/v1/Managers/bmc/LogServices"
},
"ManagerDiagnosticData": {
"@odata.id": "/redfish/v1/Managers/bmc/ManagerDiagnosticData"
},
"ManagerType": "BMC",
"Model": "OpenBmc",
"Name": "OpenBmc Manager",
"NetworkProtocol": {
"@odata.id": "/redfish/v1/Managers/bmc/NetworkProtocol"
},
"Oem": {
"@odata.id": "/redfish/v1/Managers/bmc#/Oem",
"@odata.type": "#OemManager.Oem",
"OpenBmc": {
"@odata.id": "/redfish/v1/Managers/bmc/Oem/OpenBmc/Jpeg",
"@odata.type": "#OemManager.OpenBmc",
"Certificates": {
"@odata.id": "/redfish/v1/Managers/bmc/Truststore/Certificates"
}
}
},
"PowerState": "On",
"SerialConsole": {
"ConnectTypesSupported": [
"IPMI",
"SSH"
],
"MaxConcurrentSessions": 15,
"ServiceEnabled": true
},
"ServiceEntryPointUUID": "df4322cb-e868-5b63-9e2e-b985fe0cadcf",
"Status": {
"Health": "OK",
"HealthRollup": "OK",
"State": "Enabled"
},
"UUID": "d021da1c-af15-4523-b472-42a7363e74f5",
"VirtualMedia": {
"@odata.id": "/redfish/v1/Managers/bmc/VirtualMedia"
}
}

Signed-off-by: Sandeep <sandeepap@ami.com>
---
 redfish-core/lib/managers.hpp | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git a/redfish-core/lib/managers.hpp b/redfish-core/lib/managers.hpp
index b4cb13aa..4aa242ea 100644
--- a/redfish-core/lib/managers.hpp
+++ b/redfish-core/lib/managers.hpp
@@ -249,6 +249,7 @@ inline void requestRoutesManagerResetToDefaultsAction(App& app)
             // Factory Reset doesn't actually happen until a reboot
             // Can't erase what the BMC is running on
             doBMCGracefulRestart(asyncResp);
+	    messages::success(asyncResp->res);
         },
             "xyz.openbmc_project.Software.BMC.Updater",
             "/xyz/openbmc_project/software",
@@ -2056,7 +2057,7 @@ inline void requestRoutesManager(App& app)
                                              "FirmwareVersion", true);
 
         managerGetLastResetTime(asyncResp);
-
+	getSystemLocationIndicatorActive(asyncResp);
         // ManagerDiagnosticData is added for all BMCs.
         nlohmann::json& managerDiagnosticData =
             asyncResp->res.jsonValue["ManagerDiagnosticData"];
@@ -2230,9 +2231,10 @@ inline void requestRoutesManager(App& app)
         std::optional<nlohmann::json> oem;
         std::optional<nlohmann::json> links;
         std::optional<std::string> datetime;
+	std::optional<bool> locationIndicatorActive;
 
         if (!json_util::readJsonPatch(req, asyncResp->res, "Oem", oem,
-                                      "DateTime", datetime, "Links", links))
+                                      "DateTime", datetime, "Links", links, "LocationIndicatorActive", locationIndicatorActive))
         {
             return;
         }
@@ -2293,6 +2295,10 @@ inline void requestRoutesManager(App& app)
         {
             setDateTime(asyncResp, std::move(*datetime));
         }
+	if (locationIndicatorActive)
+ 	{
+     	    setSystemLocationIndicatorActive(asyncResp, *locationIndicatorActive);
+ 	}
     });
 }
 
-- 
2.34.1

