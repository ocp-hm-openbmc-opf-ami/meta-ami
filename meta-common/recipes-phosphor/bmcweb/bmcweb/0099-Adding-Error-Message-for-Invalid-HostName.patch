From 5065eeeb993607e0d063ca7f5abab1610b879ee8 Mon Sep 17 00:00:00 2001
From: prasannas <prasannas@ami.com>
Date: Fri, 13 Oct 2023 15:29:18 +0530
Subject: [PATCH 99/99] Adding Error Message for Invalid HostName

Signed-off-by: prasannas <prasannas@ami.com>
---
 redfish-core/lib/ethernet.hpp | 61 ++++++++++++++++++++++++-------------------
 1 file changed, 34 insertions(+), 27 deletions(-)

diff --git a/redfish-core/lib/ethernet.hpp b/redfish-core/lib/ethernet.hpp
index 3a416c6..aa4ea79 100644
--- a/redfish-core/lib/ethernet.hpp
+++ b/redfish-core/lib/ethernet.hpp
@@ -894,6 +894,33 @@ void getEthernetIfaceList(CallbackFunc&& callback)
     });
 }
 
+inline bool isHostnameValid(const std::string& hostname)
+{
+    // A valid host name can never have the dotted-decimal form (RFC 1123)
+    if (std::all_of(hostname.begin(), hostname.end(), ::isdigit))
+    {
+        return false;
+    }
+    // Each label(hostname/subdomains) within a valid FQDN
+    // MUST handle host names of up to 63 characters (RFC 1123)
+    // labels cannot start or end with hyphens (RFC 952)
+    // labels can start with numbers (RFC 1123)
+    const static std::regex pattern(
+        "^[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]$");
+
+    return std::regex_match(hostname, pattern);
+}
+
+inline bool isDomainnameValid(const std::string& domainname)
+{
+    // Can have multiple subdomains
+    // Top Level Domain's min length is 2 character
+    const static std::regex pattern(
+        "^([A-Za-z0-9][a-zA-Z0-9\\-]{1,61}|[a-zA-Z0-9]{1,30}\\.)*[a-zA-Z]{2,}$");
+
+    return std::regex_match(domainname, pattern);
+}
+
 inline void
     handleHostnamePatch(const std::string& hostname,
                         const std::shared_ptr<bmcweb::AsyncResp>& asyncResp)
@@ -905,6 +932,13 @@ inline void
                                            "HostName");
         return;
     }
+    if (!isHostnameValid(hostname))
+    {
+        messages::propertyValueFormatError(asyncResp->res, hostname,
+                                           "HostName");
+        return;
+    }
+
     sdbusplus::asio::setProperty(
         *crow::connections::systemBus, "xyz.openbmc_project.Network",
         "/xyz/openbmc_project/network/config",
@@ -952,33 +986,6 @@ inline void
     });
 }
 
-inline bool isHostnameValid(const std::string& hostname)
-{
-    // A valid host name can never have the dotted-decimal form (RFC 1123)
-    if (std::all_of(hostname.begin(), hostname.end(), ::isdigit))
-    {
-        return false;
-    }
-    // Each label(hostname/subdomains) within a valid FQDN
-    // MUST handle host names of up to 63 characters (RFC 1123)
-    // labels cannot start or end with hyphens (RFC 952)
-    // labels can start with numbers (RFC 1123)
-    const static std::regex pattern(
-        "^[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]$");
-
-    return std::regex_match(hostname, pattern);
-}
-
-inline bool isDomainnameValid(const std::string& domainname)
-{
-    // Can have multiple subdomains
-    // Top Level Domain's min length is 2 character
-    const static std::regex pattern(
-        "^([A-Za-z0-9][a-zA-Z0-9\\-]{1,61}|[a-zA-Z0-9]{1,30}\\.)*[a-zA-Z]{2,}$");
-
-    return std::regex_match(domainname, pattern);
-}
-
 inline void handleFqdnPatch(const std::string& ifaceId, const std::string& fqdn,
                             const std::shared_ptr<bmcweb::AsyncResp>& asyncResp)
 {
-- 
2.9.5

