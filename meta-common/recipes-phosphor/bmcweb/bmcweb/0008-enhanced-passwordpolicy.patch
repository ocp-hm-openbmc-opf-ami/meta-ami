diff -Naur bmcweb_b/redfish-core/lib/account_service.hpp bmcweb_a/redfish-core/lib/account_service.hpp
--- bmcweb_b/redfish-core/lib/account_service.hpp	2022-09-26 18:34:01.093835723 +0530
+++ bmcweb_a/redfish-core/lib/account_service.hpp	2022-09-26 18:35:18.063368813 +0530
@@ -1370,6 +1370,30 @@
                                     *value;
                             }
                         }
+                        if (property.first == "RememberOldPasswordTimes")
+                        {
+                            const uint8_t* value =
+                                std::get_if<uint8_t>(&property.second);
+                            if (value != nullptr)
+                            {
+                                asyncResp->res
+                                    .jsonValue["Oem"]["OpenBMC"]
+                                              ["RememberOldPasswordTimes"] =
+                                    *value;
+                            }
+                        }
+                        if (property.first == "PasswordPolicyComplexity")
+                        {
+                            const std::string* value =
+                                std::get_if<std::string>(&property.second);
+                            if (value != nullptr)
+                            {
+                                asyncResp->res
+                                    .jsonValue["Oem"]["OpenBMC"]
+                                              ["PasswordPolicyComplexity"] =
+                                    *value;
+                            }
+                        }
                     }
                 },
                 "xyz.openbmc_project.User.Manager", "/xyz/openbmc_project/user",
@@ -1407,6 +1431,8 @@
                 std::optional<nlohmann::json> ldapObject;
                 std::optional<nlohmann::json> activeDirectoryObject;
                 std::optional<nlohmann::json> oemObject;
+                std::optional<std::string> passwordcomplexity;
+                std::optional<uint8_t> RememberOldPasswordTimes;
 
                 if (!json_util::readJsonPatch(
                         req, asyncResp->res, "AccountLockoutDuration",
@@ -1457,14 +1483,56 @@
                 {
                     if (std::optional<nlohmann::json> authMethodsObject;
                         oemOpenBMCObject &&
-                        json_util::readJson(*oemOpenBMCObject, asyncResp->res,
-                                            "AuthMethods", authMethodsObject))
+                        json_util::readJson(
+                            *oemOpenBMCObject, asyncResp->res, "AuthMethods",
+                            authMethodsObject, "PasswordPolicyComplexity",
+                            passwordcomplexity, "RememberOldPasswordTimes",
+                            RememberOldPasswordTimes))
                     {
                         if (authMethodsObject)
                         {
                             handleAuthMethodsPatch(*authMethodsObject,
                                                    asyncResp);
                         }
+                        if (passwordcomplexity)
+                        {
+                            crow::connections::systemBus->async_method_call(
+                                [asyncResp, passwordcomplexity](
+                                    const boost::system::error_code ec) {
+                                    if (ec)
+                                    {
+                                        messages::internalError(asyncResp->res);
+                                        return;
+                                    }
+                                    messages::success(asyncResp->res);
+                                },
+                                "xyz.openbmc_project.User.Manager",
+                                "/xyz/openbmc_project/user",
+                                "org.freedesktop.DBus.Properties", "Set",
+                                "xyz.openbmc_project.User.AccountPolicy",
+                                "PasswordPolicyComplexity",
+                                std::variant<std::string>(*passwordcomplexity));
+                        }
+                        if (RememberOldPasswordTimes)
+                        {
+                            crow::connections::systemBus->async_method_call(
+                                [asyncResp, RememberOldPasswordTimes](
+                                    const boost::system::error_code ec) {
+                                    if (ec)
+                                    {
+                                        messages::internalError(asyncResp->res);
+                                        return;
+                                    }
+                                    messages::success(asyncResp->res);
+                                },
+                                "xyz.openbmc_project.User.Manager",
+                                "/xyz/openbmc_project/user",
+                                "org.freedesktop.DBus.Properties", "Set",
+                                "xyz.openbmc_project.User.AccountPolicy",
+                                "RememberOldPasswordTimes",
+                                std::variant<uint8_t>(
+                                    *RememberOldPasswordTimes));
+                        }
                     }
                 }
 
