From 8f07db208dcb91583cff8bc256b49278186e6b3b Mon Sep 17 00:00:00 2001
From: MuthuLakshmiN <muthulakshmin@ami.com>
Date: Tue, 26 Mar 2024 19:06:05 +0530
Subject: [PATCH 192/192] Fix for getting an error when manually setting the
 date and time

Signed-off-by: MuthuLakshmiN <muthulakshmin@ami.com>
---
 redfish-core/lib/managers.hpp | 25 +++++++++++++++++++++++--
 1 file changed, 23 insertions(+), 2 deletions(-)

diff --git a/redfish-core/lib/managers.hpp b/redfish-core/lib/managers.hpp
index 266e466b..0f7534d3 100644
--- a/redfish-core/lib/managers.hpp
+++ b/redfish-core/lib/managers.hpp
@@ -2156,6 +2156,19 @@ inline void setTimeZone(std::shared_ptr<bmcweb::AsyncResp> aResp,
     }
 }
 
+bool isValidDateTimeFormat(const std::string& datetime)
+{
+    // Define the regex pattern for the expected DateTime format
+    std::regex dateTimePattern(R"((\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\+00:00)|(\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z))");
+    // Check if the datetime string matches the expected format
+    if (!std::regex_match(datetime, dateTimePattern))
+    {
+        return false;
+    }
+
+    return true;
+}
+
 inline void setDateTime(std::shared_ptr<bmcweb::AsyncResp> asyncResp,
                         std::string datetime)
 {
@@ -2186,7 +2199,8 @@ inline void setDateTime(std::shared_ptr<bmcweb::AsyncResp> asyncResp,
                     "/redfish/v1/Managers/bmc/NetworkProtocol"));
             return;
         }
-        asyncResp->res.jsonValue["DateTime"] = datetime;
+        //asyncResp->res.jsonValue["DateTime"] = datetime;
+	messages::success(asyncResp->res);
     });
 }
 
@@ -2523,7 +2537,7 @@ inline void requestRoutesManager(App& app)
             asyncResp->res.result(boost::beast::http::status::bad_request);
             return;
         }
-        asyncResp->res.result(boost::beast::http::status::no_content);
+        //asyncResp->res.result(boost::beast::http::status::no_content);
         if (oem)
         {
             // #ifdef BMCWEB_ENABLE_REDFISH_OEM_MANAGER_FAN_DATA
@@ -2581,6 +2595,13 @@ inline void requestRoutesManager(App& app)
         }
         if (datetime)
         {
+            if (!isValidDateTimeFormat(*datetime)) // datetime Format should be
+                                                   // yyyy-mm-ddThh:mm:ss+00:00 or yyyy-mm-ddThh:mm:ss.sssz
+            {
+                messages::propertyValueFormatError(asyncResp->res, *datetime,
+                                                   "DateTime");
+                return;
+            }
             setDateTime(asyncResp, std::move(*datetime));
         }
         if (locationIndicatorActive)
-- 
2.34.1

