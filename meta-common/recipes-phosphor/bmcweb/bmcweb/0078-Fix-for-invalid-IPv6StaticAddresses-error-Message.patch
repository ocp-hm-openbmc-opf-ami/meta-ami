From cdebca3aecb00511e1fd4d517be1c46aa2aab493 Mon Sep 17 00:00:00 2001
From: prasannas <prasannas@ami.com>
Date: Sat, 14 Oct 2023 17:09:20 +0530
Subject: [PATCH 78/78] Fix for invalid IPv6StaticAddresses error Message

Description:
  Proper Status code and error message appears while setting invalid IPv6 static address.

TestCase:
1)Patch Invalid Ipv6 Static Address
Patch call
https://x.x.x.x/redfish/v1/Managers/bmc/EthernetInterfaces/eth0
Body:
{
    "IPv6StaticAddresses": [
        {
            "Address": "2001:b03333:4444:5555:6666:7777:jjkk",
            "PrefixLength": 64
        }
    ]
}

Response:
{
    "error": {
        "@Message.ExtendedInfo": [
            {
                "@odata.type": "#Message.v1_1_1.Message",
                "Message": "The Requested IP address  is invalid",
                "MessageArgs": [
                    "Address",
                    "2001:b03333:4444:5555:6666:7777:jjkk"
                ],
                "MessageId": "Base.1.16.0.InvalidIP",
                "MessageSeverity": "warning",
                "Resolution": "Provide Valid IP address"
            }
        ],
        "code": "Base.1.16.0.InvalidIP",
        "message": "The Requested IP address  is invalid"
    }
}

Signed-off-by: prasannas <prasannas@ami.com>
---
 redfish-core/include/error_messages.hpp                   |  3 +++
 redfish-core/include/registries/base_message_registry.hpp | 14 ++++++++++++++
 redfish-core/lib/ethernet.hpp                             |  9 ++++-----
 redfish-core/src/error_messages.cpp                       | 13 +++++++++++++
 4 files changed, 34 insertions(+), 5 deletions(-)

diff --git a/redfish-core/include/error_messages.hpp b/redfish-core/include/error_messages.hpp
index e2e1b2f..a3bfeb8 100644
--- a/redfish-core/include/error_messages.hpp
+++ b/redfish-core/include/error_messages.hpp
@@ -1092,6 +1092,9 @@ nlohmann::json invalidQueryFilter();
 
 void invalidQueryFilter(crow::Response& res);
 
+nlohmann::json invalidip(std::string_view arg1, std::string_view arg2);
+void invalidip(crow::Response& res, std::string_view arg1,
+               std::string_view arg2);
 } // namespace messages
 
 } // namespace redfish
diff --git a/redfish-core/include/registries/base_message_registry.hpp b/redfish-core/include/registries/base_message_registry.hpp
index dc5060b..5c96042 100644
--- a/redfish-core/include/registries/base_message_registry.hpp
+++ b/redfish-core/include/registries/base_message_registry.hpp
@@ -1308,6 +1308,19 @@ constexpr std::array registry =
             {},
             "Correct the request body and resubmit the request if it failed.",
         }},
+    MessageEntry{
+	    "InvalidIP",
+	    {
+		"Indicates that a given IP address is invalid",
+		"The Requested IP address  is invalid",
+		"warning",
+		2,
+		{
+			"string"
+			"string",
+		},
+		"Provide Valid IP address",
+	}},
 
 };
 
@@ -1423,5 +1436,6 @@ enum class Index
     success = 107,
     undeterminedFault = 108,
     unrecognizedRequestBody = 109,
+    invalidip=110,
 };
 } // namespace redfish::registries::base
diff --git a/redfish-core/lib/ethernet.hpp b/redfish-core/lib/ethernet.hpp
index 79447f9..111ac3c 100644
--- a/redfish-core/lib/ethernet.hpp
+++ b/redfish-core/lib/ethernet.hpp
@@ -732,10 +732,10 @@ inline void deleteAndCreateIPAddress(
         std::string protocol = "xyz.openbmc_project.Network.IP.Protocol.";
         protocol += version == IpVersion::IpV4 ? "IPv4" : "IPv6";
         crow::connections::systemBus->async_method_call(
-            [asyncResp](const boost::system::error_code& ec2) {
+            [asyncResp, address](const boost::system::error_code& ec2) {
             if (ec2)
             {
-                messages::internalError(asyncResp->res);
+                messages::invalidip(asyncResp->res, "Address", address);
             }
         },
             "xyz.openbmc_project.Network",
@@ -768,8 +768,7 @@ inline void createIPv6(const std::string& ifaceId, uint8_t prefixLength,
         {
             if (ec == boost::system::errc::io_error)
             {
-                messages::propertyValueFormatError(asyncResp->res, address,
-                                                   "Address");
+                messages::invalidip(asyncResp->res, "Address", address);
             }
             else
             {
@@ -909,7 +908,7 @@ inline bool isHostnameValid(const std::string& hostname)
     // labels cannot start or end with hyphens (RFC 952)
     // hostname starts with an alphanumeric character
     const std::regex pattern("^[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,62}[a-zA-Z0-9])?$");
- 
+
     return std::regex_match(hostname, pattern);
 }
 
diff --git a/redfish-core/src/error_messages.cpp b/redfish-core/src/error_messages.cpp
index 239942f..d152e08 100644
--- a/redfish-core/src/error_messages.cpp
+++ b/redfish-core/src/error_messages.cpp
@@ -1881,6 +1881,19 @@ void invalidQueryFilter(crow::Response& res)
     addMessageToErrorJson(res.jsonValue, invalidQueryFilter());
 }
 
+nlohmann::json invalidip(std::string_view arg1, std::string_view arg2)
+{
+    return getLog(redfish::registries::base::Index::invalidip,
+                  std::to_array({arg1, arg2}));
+}
+
+void invalidip(crow::Response& res, std::string_view arg1,
+               std::string_view arg2)
+{
+    res.result(boost::beast::http::status::bad_request);
+    addMessageToErrorJson(res.jsonValue, invalidip(arg1, arg2));
+}
+
 } // namespace messages
 
 } // namespace redfish
-- 
2.9.5

