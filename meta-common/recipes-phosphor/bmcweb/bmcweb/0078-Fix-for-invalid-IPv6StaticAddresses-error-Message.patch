From 84ae250fc6a7a65d5546a88a73daa5e81257ebbf Mon Sep 17 00:00:00 2001
From: prasannas <prasannas@ami.com>
Date: Tue, 18 Jul 2023 18:27:05 +0530
Subject: [PATCH 2419/2419] Fix for invalid IPv6StaticAddresses error Message

---
 redfish-core/include/error_messages.hpp                |  2 ++
 .../include/registries/base_message_registry.hpp       | 18 ++++++++++++++++--
 redfish-core/lib/ethernet.hpp                          |  4 ++--
 redfish-core/src/error_messages.cpp                    | 11 +++++++++++
 4 files changed, 31 insertions(+), 4 deletions(-)

diff --git a/redfish-core/include/error_messages.hpp b/redfish-core/include/error_messages.hpp
index d74e240..0ef3a71 100644
--- a/redfish-core/include/error_messages.hpp
+++ b/redfish-core/include/error_messages.hpp
@@ -1091,6 +1091,8 @@ nlohmann::json invalidQueryFilter();
 
 void invalidQueryFilter(crow::Response& res);
 
+nlohmann::json invalidip(std::string_view arg1,std::string_view arg2);
+void invalidip(crow::Response& res, std::string_view arg1,std::string_view arg2);
 } // namespace messages
 
 } // namespace redfish
diff --git a/redfish-core/include/registries/base_message_registry.hpp b/redfish-core/include/registries/base_message_registry.hpp
index 382e11a..eab6e1f 100644
--- a/redfish-core/include/registries/base_message_registry.hpp
+++ b/redfish-core/include/registries/base_message_registry.hpp
@@ -1246,7 +1246,20 @@ constexpr std::array registry =
                 "string",
             },
             "Correct the value for the property in the request body and resubmit the request if the operation failed.",
-        }}
+        }},
+    MessageEntry{
+	    "InvalidIP",
+	    {
+		"Indicates that a given IP address is invalid",
+		"The Requested IP address  is invalid",
+		"warning",
+		2,
+		{
+			"string"
+			"string",
+		},
+		"Provide Valid IP address",
+	}}
 };
 
 enum class Index
@@ -1355,6 +1368,7 @@ enum class Index
     success = 101,
     undeterminedFault = 102,
     unrecognizedRequestBody = 103,
-    propertySizeExceeded = 104
+    propertySizeExceeded = 104,
+    invalidip=105
 };
 } // namespace redfish::registries::base
diff --git a/redfish-core/lib/ethernet.hpp b/redfish-core/lib/ethernet.hpp
index ea132b4..ac26fb8 100644
--- a/redfish-core/lib/ethernet.hpp
+++ b/redfish-core/lib/ethernet.hpp
@@ -766,10 +766,10 @@ inline void createIPv6(const std::string& ifaceId, uint8_t prefixLength,
                        const std::string& address,
                        const std::shared_ptr<bmcweb::AsyncResp>& asyncResp)
 {
-    auto createIpHandler = [asyncResp](const boost::system::error_code& ec) {
+    auto createIpHandler = [asyncResp,address](const boost::system::error_code& ec) {
         if (ec)
         {
-            messages::internalError(asyncResp->res);
+		messages::invalidip(asyncResp->res,"Address",address);
         }
     };
     // Passing null for gateway, as per redfish spec IPv6StaticAddresses object
diff --git a/redfish-core/src/error_messages.cpp b/redfish-core/src/error_messages.cpp
index 1a5d7b0..e12ace3 100644
--- a/redfish-core/src/error_messages.cpp
+++ b/redfish-core/src/error_messages.cpp
@@ -1850,6 +1850,17 @@ void invalidQueryFilter(crow::Response& res)
     addMessageToErrorJson(res.jsonValue, invalidQueryFilter());
 }
 
+nlohmann::json invalidip(std::string_view arg1,std::string_view arg2)
+{
+    return getLog(redfish::registries::base::Index::invalidip,
+                  std::to_array({arg1,arg2}));
+}
+
+void invalidip(crow::Response& res, std::string_view arg1,std::string_view arg2)
+{
+    res.result(boost::beast::http::status::bad_request);
+    addMessageToErrorJson(res.jsonValue,invalidip(arg1,arg2));
+}
 
 } // namespace messages
 
-- 
2.9.5

