From 42af5ffefdc8694a5985555ba0d1a9ee4e8b97b5 Mon Sep 17 00:00:00 2001
From: Ginu George <ginugeorge@ami.com>
Date: Thu, 25 Apr 2024 08:17:41 -0400
Subject: [PATCH 253/253] Add Hostname and Domainname validations for FQDN
 Attribute

---
 redfish-core/lib/ethernet.hpp | 16 +++++++++++-----
 1 file changed, 11 insertions(+), 5 deletions(-)

diff --git a/redfish-core/lib/ethernet.hpp b/redfish-core/lib/ethernet.hpp
index 4ad144f9..172065fd 100644
--- a/redfish-core/lib/ethernet.hpp
+++ b/redfish-core/lib/ethernet.hpp
@@ -938,20 +938,26 @@ inline bool isHostnameValid(const std::string& hostname)
         return false;
     }
     // Each label(hostname/subdomains) within a valid FQDN
-    // MUST handle host names of up to 64 characters (RFC 1123)
+    // MUST handle host names of up to 63 characters (RFC 1123)
     // labels cannot start or end with hyphens (RFC 952)
+    // labels can start with numbers (RFC 1123)
     // hostname starts with an alphanumeric character
-    const std::regex pattern("^[a-zA-Z0-9]([a-zA-Z0-9\\-]{0,62}[a-zA-Z0-9])?$");
+    const static std::regex pattern(
+        "^[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9]$");
 
     return std::regex_match(hostname, pattern);
 }
 
 inline bool isDomainnameValid(const std::string& domainname)
 {
-    // Can have multiple subdomains
-    // Top Level Domain's min length is 2 character
+    // Can have Multiple Sub Domains
+    // Top Level Domain is mandatory and max length is 63 characters, although most are around 2-3 characters. Can have only alphabetical characters.
+    // For Top Level Domain, we have limited max length and min length as 6 and 2 respectively.
+    // Need to have at least one Sub Domain, apart from the Top Level Domain(TLD)
+    // Each Sub Domain(label) can have up to 63 characters.
+    // Each Sub Domain(label) can have alphanumeric characters, cannot start or end with hyphens, need to have a trailing dot after each subdomain.
     const static std::regex pattern(
-        "^([A-Za-z0-9][a-zA-Z0-9\\-]{1,61}|[a-zA-Z0-9]{1,30}\\.)*[a-zA-Z]{2,}$");
+        "^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+([a-zA-Z]{2,6})$");
 
     return std::regex_match(domainname, pattern);
 }
-- 
2.34.1

