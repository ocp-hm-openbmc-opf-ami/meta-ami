From a32de4827669b2a06515dd2494527c85c63de3a0 Mon Sep 17 00:00:00 2001
From: Sivaranjani <sivaranjaniv@ami.com>
Date: Wed, 10 Apr 2024 13:37:28 +0530
Subject: [PATCH 243/243] Change the value of Chassis Instance Sensors Voltage
 ReadingRangeMax to 4 digits after decimal

---
 redfish-core/lib/sensors.hpp | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/redfish-core/lib/sensors.hpp b/redfish-core/lib/sensors.hpp
index 3d18be9e..98cb338a 100644
--- a/redfish-core/lib/sensors.hpp
+++ b/redfish-core/lib/sensors.hpp
@@ -1074,6 +1074,7 @@ inline void objectPropertiesToJson(
             // The property we want to set may be nested json, so use
             // a json_pointer for easy indexing into the json structure.
             const nlohmann::json::json_pointer& key = std::get<2>(p);
+            const nlohmann::json::json_pointer& keyMax = nlohmann::json::json_pointer("/ReadingRangeMax");
 
             const double* doubleValue = std::get_if<double>(&valueVariant);
             if (doubleValue == nullptr)
@@ -1088,7 +1089,8 @@ inline void objectPropertiesToJson(
                     // Readings are allowed to be NAN for unavailable;  coerce
                     // them to null in the json response.
                     sensorJson[key] = nullptr;
-                    continue;
+                    sensorJson[keyMax] = nullptr;
+		    continue;
                 }
                 BMCWEB_LOG_WARNING("Sensor value for {} was unexpectedly {}",
                                    valueName, *doubleValue);
@@ -1097,6 +1099,7 @@ inline void objectPropertiesToJson(
             if (forceToInt)
             {
                 sensorJson[key] = static_cast<int64_t>(*doubleValue);
+		sensorJson[keyMax] = static_cast<int64_t>(*doubleValue);
             }
             else
             {
@@ -1111,6 +1114,10 @@ inline void objectPropertiesToJson(
                 else {
                         sensorJson[key] = *doubleValue;
                 }
+                if (keyMax == nlohmann::json::json_pointer("/ReadingRangeMax")) {
+                        double roundedValueMax = std::round(*doubleValue * 10000.0) / 10000.0;
+                        sensorJson[keyMax] = roundedValueMax;
+                }
             }
         }
     }
-- 
2.34.1

