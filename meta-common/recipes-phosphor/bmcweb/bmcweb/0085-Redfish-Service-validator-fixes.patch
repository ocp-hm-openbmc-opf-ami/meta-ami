From 267c8692f557cbd4e05fee94131e833d2187d90e Mon Sep 17 00:00:00 2001
From: prasannas <prasannas@ami.com>
Date: Tue, 17 Oct 2023 10:45:53 +0530
Subject: [PATCH] Redfish Service Validator Fixes

Signed-off-by: vamsikrishnak <vamsikrishnak@ami.com>
---
 .../include/registries/base_message_registry.hpp   |  4 +-
 redfish-core/lib/bios.hpp                          |  2 +-
 redfish-core/lib/managers.hpp                      | 61 ++++++++++++----------
 redfish-core/lib/redfish_sessions.hpp              |  3 +-
 static/redfish/v1/schema/OemComputerSystem_v1.xml  | 21 ++++++++
 .../redfish/v1/schema/OpenBMCAccountService_v1.xml |  8 +++
 6 files changed, 66 insertions(+), 33 deletions(-)

diff --git a/redfish-core/include/registries/base_message_registry.hpp b/redfish-core/include/registries/base_message_registry.hpp
index e4d6a65..c9f778e 100644
--- a/redfish-core/include/registries/base_message_registry.hpp
+++ b/redfish-core/include/registries/base_message_registry.hpp
@@ -1313,10 +1313,10 @@ constexpr std::array registry =
 	    {
 		"Indicates that a given IP address is invalid",
 		"The Requested IP address  is invalid",
-		"warning",
+		"Warning",
 		2,
 		{
-			"string"
+			"string",
 			"string",
 		},
 		"Provide Valid IP address",
diff --git a/redfish-core/lib/bios.hpp b/redfish-core/lib/bios.hpp
index 7dbcde8..50d3cfa 100644
--- a/redfish-core/lib/bios.hpp
+++ b/redfish-core/lib/bios.hpp
@@ -1442,7 +1442,7 @@ inline void
                          const std::shared_ptr<bmcweb::AsyncResp>& asyncResp)
 {
     asyncResp->res.jsonValue["@odata.id"] = "/redfish/v1/Systems/system/Bios";
-    asyncResp->res.jsonValue["@odata.type"] = "#Bios.v1_1_0.Bios";
+    asyncResp->res.jsonValue["@odata.type"] = "#Bios.v1_2_0.Bios";
     asyncResp->res.jsonValue["Name"] = "BIOS Configuration";
     asyncResp->res.jsonValue["Description"] = "BIOS Configuration Service";
     asyncResp->res.jsonValue["Id"] = "BIOS";
diff --git a/redfish-core/lib/managers.hpp b/redfish-core/lib/managers.hpp
index 105c8f8..3ae1e8e 100644
--- a/redfish-core/lib/managers.hpp
+++ b/redfish-core/lib/managers.hpp
@@ -2350,10 +2350,10 @@ inline void requestRoutesManager(App& app)
         managerDiagnosticData["@odata.id"] =
             "/redfish/v1/Managers/bmc/ManagerDiagnosticData";
 
-#ifdef BMCWEB_ENABLE_REDFISH_OEM_MANAGER_FAN_DATA
-        auto pids = std::make_shared<GetPIDValues>(asyncResp);
-        pids->run();
-#endif
+        // #ifdef BMCWEB_ENABLE_REDFISH_OEM_MANAGER_FAN_DATA
+        //         auto pids = std::make_shared<GetPIDValues>(asyncResp);
+        //         pids->run();
+        // #endif
 
         getMainChassisId(asyncResp,
                          [](const std::string& chassisId,
@@ -2538,31 +2538,34 @@ inline void requestRoutesManager(App& app)
         asyncResp->res.result(boost::beast::http::status::no_content);
         if (oem)
         {
-#ifdef BMCWEB_ENABLE_REDFISH_OEM_MANAGER_FAN_DATA
-            std::optional<nlohmann::json> openbmc;
-            if (!redfish::json_util::readJson(*oem, asyncResp->res, "OpenBmc",
-                                              openbmc))
-            {
-                return;
-            }
-            if (openbmc)
-            {
-                std::optional<nlohmann::json> fan;
-                if (!redfish::json_util::readJson(*openbmc, asyncResp->res,
-                                                  "Fan", fan))
-                {
-                    return;
-                }
-                if (fan)
-                {
-                    auto pid = std::make_shared<SetPIDValues>(asyncResp, *fan);
-                    pid->run();
-                }
-            }
-#else
-            messages::propertyUnknown(asyncResp->res, "Oem");
-            return;
-#endif
+            // #ifdef BMCWEB_ENABLE_REDFISH_OEM_MANAGER_FAN_DATA
+            //             std::optional<nlohmann::json> openbmc;
+            //             if (!redfish::json_util::readJson(*oem,
+            //             asyncResp->res, "OpenBmc",
+            //                                               openbmc))
+            //             {
+            //                 return;
+            //             }
+            //             if (openbmc)
+            //             {
+            //                 std::optional<nlohmann::json> fan;
+            //                 if (!redfish::json_util::readJson(*openbmc,
+            //                 asyncResp->res,
+            //                                                   "Fan", fan))
+            //                 {
+            //                     return;
+            //                 }
+            //                 if (fan)
+            //                 {
+            //                     auto pid =
+            //                     std::make_shared<SetPIDValues>(asyncResp,
+            //                     *fan); pid->run();
+            //                 }
+            //             }
+            // #else
+            //             messages::propertyUnknown(asyncResp->res, "Oem");
+            //             return;
+            // #endif
         }
         if (links)
         {
diff --git a/redfish-core/lib/redfish_sessions.hpp b/redfish-core/lib/redfish_sessions.hpp
index 3b6c3bf..4a0906c 100644
--- a/redfish-core/lib/redfish_sessions.hpp
+++ b/redfish-core/lib/redfish_sessions.hpp
@@ -40,7 +40,8 @@ inline void fillSessionObject(crow::Response& res,
     res.jsonValue["Name"] = "User Session";
     res.jsonValue["Description"] = "Manager User Session";
     res.jsonValue["ClientOriginIPAddress"] = session.clientIp;
-    res.jsonValue["SessionType"] = "WebUI";
+    res.jsonValue["Oem"]["AMI_WebSession"]["@odata.id"]= boost::urls::format(
+         "/redfish/v1/SessionService/Sessions/{}#/Oem/AMI_WebSession",session.uniqueId);
     res.jsonValue["Oem"]["AMI_WebSession"]["@odata.type"] =
         "#AMIWebSession.v1_0_0.WebSession";
     res.jsonValue["Oem"]["AMI_WebSession"]["KvmActive"] =
diff --git a/static/redfish/v1/schema/OemComputerSystem_v1.xml b/static/redfish/v1/schema/OemComputerSystem_v1.xml
index 6588f0a..7cce95f 100644
--- a/static/redfish/v1/schema/OemComputerSystem_v1.xml
+++ b/static/redfish/v1/schema/OemComputerSystem_v1.xml
@@ -35,6 +35,11 @@
                             <PropertyValue Property="Pattern" String="[A-Za-z0-9_.:]+" />
                             <PropertyValue Property="Type" String="OemComputerSystem.FirmwareProvisioning" />
                         </NavigationProperty>
+                        <NavigationProperty Type="OemComputerSystem.PhysicalLED">
+                            <Annotation Term="OData.AutoExpand"/>
+                            <PropertyValue Property="Pattern" String="[A-Za-z0-9_.:]+" />
+                            <PropertyValue Property="Type" String="OemComputerSystem.PhysicalLED" />
+                        </NavigationProperty>
                     </Collection>
                 </Annotation>
             </ComplexType>
@@ -48,6 +53,22 @@
                     <Annotation Term="OData.LongDescription" String="The value of this property indicating provisioning status of platform firmware."/>
                 </Property>
             </ComplexType>
+            <ComplexType Name="PhysicalLED" BaseType="Resource.OemObject">
+                <Annotation Term="OData.AdditionalProperties" Bool="false" />
+                <Annotation Term="OData.Description" String="physical leds to display status of server." />
+                <Property Name="AmberLED" Type="Edm.String" Nullable="false">
+                    <Annotation Term="OData.Description" String="physical leds to display status of server." />
+                    <Annotation Term="OData.LongDescription" String="physical leds to display status of server." />
+                </Property>
+                <Property Name="GreenLED" Type="Edm.String" Nullable="false">
+                    <Annotation Term="OData.Description" String="physical leds to display status of server." />
+                    <Annotation Term="OData.LongDescription" String="physical leds to display status of server." />
+                </Property>
+                <Property Name="SusackLED" Type="Edm.String" Nullable="false">
+                    <Annotation Term="OData.Description" String="physical leds to display status of server." />
+                    <Annotation Term="OData.LongDescription" String="physical leds to display status of server." />
+                </Property>
+            </ComplexType>
 
             <EnumType Name="FirmwareProvisioningStatus">
                 <Member Name="NotProvisioned">
diff --git a/static/redfish/v1/schema/OpenBMCAccountService_v1.xml b/static/redfish/v1/schema/OpenBMCAccountService_v1.xml
index 66b00bb..c35df91 100644
--- a/static/redfish/v1/schema/OpenBMCAccountService_v1.xml
+++ b/static/redfish/v1/schema/OpenBMCAccountService_v1.xml
@@ -38,6 +38,14 @@
           <Annotation Term="OData.Description" String="Authorization Methods configuration."/>
           <Annotation Term="OData.LongDescription" String="Configuration describing which auth methods are enabled."/>
         </Property>
+        <Property Name="PasswordPolicyComplexity" Type="Edm.String">
+          <Annotation Term="OData.Description" String="It indicates complexity of the password" />
+          <Annotation Term="OData.LongDescription" String="It indicates complexity of the password" />
+        </Property>
+        <Property Name="RememberOldPasswordTimes" Type="Edm.Decimal">
+          <Annotation Term="OData.Description" String="It indicates the old password count" />
+          <Annotation Term="OData.LongDescription" String="It indicates the old password count" />
+        </Property>
       </ComplexType>
 
       <ComplexType Name="AuthMethodsConfig">
-- 
2.9.5

