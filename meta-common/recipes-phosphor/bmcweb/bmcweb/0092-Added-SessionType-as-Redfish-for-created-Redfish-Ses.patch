From 5142c782f3ec058622fc211f0fc0897142cb9e31 Mon Sep 17 00:00:00 2001
From: vamsikrishnak <vamsikrishnak@ami.com>
Date: Thu, 17 Aug 2023 14:57:18 +0530
Subject: [PATCH] Added SessionType as Redfish for created Redfish Sessions

Signed-off-by: vamsikrishnak <vamsikrishnak@ami.com>
---
 include/sessions.hpp                  | 7 +++++--
 redfish-core/lib/redfish_sessions.hpp | 3 ++-
 2 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/include/sessions.hpp b/include/sessions.hpp
index 8d18776..646dcf6 100644
--- a/include/sessions.hpp
+++ b/include/sessions.hpp
@@ -37,6 +37,7 @@ struct UserSession
     std::string csrfToken;
     std::optional<std::string> clientId;
     std::string clientIp;
+    std::string sessionType;
     std::chrono::time_point<std::chrono::steady_clock> lastUpdated;
     PersistenceType persistence{PersistenceType::TIMEOUT};
     bool isConfigureSelfOnly = false;
@@ -259,9 +260,11 @@ class SessionStore
             }
         }
 
+	std::string sessionType = "WebUI";
+
         auto session = std::make_shared<UserSession>(UserSession{
-            uniqueId, sessionToken, std::string(username), csrfToken, clientId,
-            redfish::ip_util::toString(clientIp),
+            uniqueId, sessionToken, std::string(username), csrfToken, clientId, 
+	    sessionType, redfish::ip_util::toString(clientIp),
             std::chrono::steady_clock::now(), persistence,
             isConfigureSelfOnly});
         auto it = authTokens.emplace(sessionToken, session);
diff --git a/redfish-core/lib/redfish_sessions.hpp b/redfish-core/lib/redfish_sessions.hpp
index 4ebc58e..5e4c747 100644
--- a/redfish-core/lib/redfish_sessions.hpp
+++ b/redfish-core/lib/redfish_sessions.hpp
@@ -40,7 +40,7 @@ inline void fillSessionObject(crow::Response& res,
     res.jsonValue["Name"] = "User Session";
     res.jsonValue["Description"] = "Manager User Session";
     res.jsonValue["ClientOriginIPAddress"] = session.clientIp;
-    res.jsonValue["SessionType"] = "WebUI";
+    res.jsonValue["SessionType"] = session.sessionType;
     res.jsonValue["Oem"]["AMI_WebSession"]["@odata.type"] =
         "#AMIWebSession.v1_0_0.WebSession";
     res.jsonValue["Oem"]["AMI_WebSession"]["KvmActive"] =
@@ -445,6 +445,7 @@ inline void handleSessionCollectionPost(
     else
     {
         asyncResp->res.result(boost::beast::http::status::created);
+	session->sessionType = "Redfish";
         fillSessionObject(asyncResp->res, *session);
     }
 
-- 
2.9.5

