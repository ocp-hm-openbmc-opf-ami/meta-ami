From 191d0afc7ddfbb6cca42301663ff4cc4c2026b18 Mon Sep 17 00:00:00 2001
From: gokulp <gokulp@ami.com>
Date: Wed, 26 Jul 2023 12:44:38 +0530
Subject: [PATCH 2425/2425] Fixed-the-Enable-Disable-outband-IPMI-issue

---
 redfish-core/lib/network_protocol.hpp | 28 ++++++++++++++++++++------
 1 file changed, 21 insertions(+), 7 deletions(-)

diff --git a/redfish-core/lib/network_protocol.hpp b/redfish-core/lib/network_protocol.hpp
index 5353a4fe..46dfcee1 100644
--- a/redfish-core/lib/network_protocol.hpp
+++ b/redfish-core/lib/network_protocol.hpp
@@ -27,6 +27,7 @@
 
 #include <boost/system/error_code.hpp>
 #include <sdbusplus/asio/property.hpp>
+#include <utils/service_utils.hpp>
 
 #include <array>
 #include <optional>
@@ -39,13 +40,13 @@ namespace redfish
 void getNTPProtocolEnabled(const std::shared_ptr<bmcweb::AsyncResp>& asyncResp);
 std::string getHostName();
 
-static constexpr std::string_view sshServiceName = "dropbear";
-static constexpr std::string_view httpsServiceName = "bmcweb";
-static constexpr std::string_view ipmiServiceName = "phosphor-ipmi-net";
+static constexpr const char* sshServiceName = "dropbear";
+static constexpr const char* httpsServiceName = "bmcweb";
+static constexpr const char* ipmiServiceName = "phosphor_2dipmi_2dnet";
 
 // Mapping from Redfish NetworkProtocol key name to backend service that hosts
 // that protocol.
-static constexpr std::array<std::pair<std::string_view, std::string_view>, 3>
+static constexpr std::array<std::pair<const char*, const char*>, 3>
     networkProtocolToDbus = {{{"SSH", sshServiceName},
                               {"HTTPS", httpsServiceName},
                               {"IPMI", ipmiServiceName}}};
@@ -234,8 +235,21 @@ inline void getNetworkData(const std::shared_ptr<bmcweb::AsyncResp>& asyncResp,
             "/redfish/v1/Managers/bmc/NetworkProtocol/HTTPS/Certificates";
     }
 
-    getPortStatusAndPath(std::span(networkProtocolToDbus),
-                         std::bind_front(afterNetworkPortRequest, asyncResp));
+    for (const auto& protocol : networkProtocolToDbus)
+    {
+        const std::string& protocolName = protocol.first;
+        const std::string& serviceName = protocol.second;
+
+        service_util::getEnabled(
+            asyncResp, serviceName,
+            nlohmann::json::json_pointer(std::string("/") + protocolName +
+                                         "/ProtocolEnabled"));
+        service_util::getPortNumber(
+            asyncResp, serviceName,
+            nlohmann::json::json_pointer(std::string("/") + protocolName +
+                                         "/Port"));
+    }
+
 } // namespace redfish
 
 inline void handleNTPProtocolEnabled(
@@ -578,7 +578,7 @@ inline void handleManagersNetworkProtocolPatch(
     {
         handleProtocolEnabled(
             *ipmiEnabled, asyncResp,
-            encodeServiceObjectPath(std::string(ipmiServiceName) + '@'));
+            encodeServiceObjectPath(ipmiServiceName));
     }

     if (sshEnabled)
-- 
2.34.1

