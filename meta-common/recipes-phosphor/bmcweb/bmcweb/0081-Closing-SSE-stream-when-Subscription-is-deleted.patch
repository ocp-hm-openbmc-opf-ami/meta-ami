From b91a615520a9e6e9574b0529c4816b0c354f8b7b Mon Sep 17 00:00:00 2001
From: arunthomas <arunthomasb@ami.com>
Date: Tue, 17 Oct 2023 22:32:15 +0530
Subject: [PATCH 81/81] Closing SSE stream when Subscription is deleted

When Subscription is deleted by HTTP Delete request to the
subscription URI, clossing the assosciated SSE stream.

Tested: Verified that the SSE stream gets closed when the subscription is
deleted. All other event service functionality is working as earlier.

Signed-off-by: arunthomas <arunthomasb@ami.com>
---
 redfish-core/include/event_service_manager.hpp | 17 +++++++++++++++++
 1 file changed, 17 insertions(+)

diff --git a/redfish-core/include/event_service_manager.hpp b/redfish-core/include/event_service_manager.hpp
index bb4e0e1b..25cafb5a 100644
--- a/redfish-core/include/event_service_manager.hpp
+++ b/redfish-core/include/event_service_manager.hpp
@@ -404,6 +404,12 @@ class Subscription : public persistent_data::UserSubscription
 
     ~Subscription() = default;
 
+    void getSseConnection(std::shared_ptr<crow::sse_socket::Connection>& connPtr)
+    {
+	connPtr = sseConn;
+	return;
+    }
+
     bool sendEvent(std::string&& msg)
     {
         persistent_data::EventServiceConfig eventServiceConfig =
@@ -1068,8 +1074,15 @@ class EventServiceManager
     void deleteSubscription(const std::string& id)
     {
         auto obj = subscriptionsMap.find(id);
+        std::shared_ptr<crow::sse_socket::Connection> sseConnPtr = NULL;
         if (obj != subscriptionsMap.end())
         {
+	    std::shared_ptr<Subscription> entry = obj->second;
+	    if (entry->subscriptionType == subscriptionTypeSSE)
+	    {
+		entry->getSseConnection(sseConnPtr);
+	    }	
+
             subscriptionsMap.erase(obj);
             auto obj2 = persistent_data::EventServiceStore::getInstance()
                             .subscriptionsConfigMap.find(id);
@@ -1085,6 +1098,10 @@ class EventServiceManager
                             "OpenBMC.0.1.EventSubscriptionRemoved",
                             "REDFISH_MESSAGE_ARGS=%s", id.c_str(), NULL);
         }
+        if(sseConnPtr)
+        {
+            sseConnPtr->close("subscription deleted");
+        }	
     }
 
     void deleteSseSubscription(
-- 
2.39.2

