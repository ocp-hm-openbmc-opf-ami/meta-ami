From 9c9e29d05efa2bf285bd87b3eb09958f29ea05e5 Mon Sep 17 00:00:00 2001
From: muthulakshmin <muthulakshmin@ami.com>
Date: Mon, 25 Mar 2024 19:00:15 +0530
Subject: [PATCH 234/234] Fix for patching the properties is possible even when
 the interface is disabled

Signed-off-by: muthulakshmin <muthulakshmin@ami.com>
---
 redfish-core/lib/ethernet.hpp | 67 +++++++++++++++++++++++++++++++++++
 1 file changed, 67 insertions(+)

diff --git a/redfish-core/lib/ethernet.hpp b/redfish-core/lib/ethernet.hpp
index f3c08589..08fc7fad 100644
--- a/redfish-core/lib/ethernet.hpp
+++ b/redfish-core/lib/ethernet.hpp
@@ -2352,6 +2352,73 @@ inline void handleEthernetInterfaceInstancePatch(
                                         ifaceId);
             return;
         }
+	
+	bool isNicEnabled = ethData.nicEnabled;
+        if(!interfaceEnabled && !isNicEnabled)
+        {
+           if(dhcpv4)
+           {
+               messages::propertyValueConflict(asyncResp->res, "DHCPv4",
+                                               "InterfaceEnabled");
+           }
+           if(dhcpv6)
+           {
+               messages::propertyValueConflict(asyncResp->res, "DHCPv6",
+                                               "InterfaceEnabled");
+           }
+           if(fqdn)
+           {
+               messages::propertyValueConflict(asyncResp->res, "FQDN",
+                                               "InterfaceEnabled");
+           }
+           if(hostname)
+           {
+               messages::propertyValueConflict(asyncResp->res, "HostName",
+                                               "InterfaceEnabled");
+           }
+           if(ipv4StaticAddresses)
+           {
+               messages::propertyValueConflict(asyncResp->res, "IPv4StaticAddresses",
+                                               "InterfaceEnabled");
+           }
+           if(ipv6DefaultGateway)
+           {
+               messages::propertyValueConflict(asyncResp->res, "IPv6DefaultGateway",
+                                               "InterfaceEnabled");
+           }
+           if(ipv6StaticDefaultGateways)
+           {
+               messages::propertyValueConflict(asyncResp->res, "IPv6StaticDefaultGateways",
+                                               "InterfaceEnabled");
+           }
+           if(ipv6StaticAddresses)
+           {
+               messages::propertyValueConflict(asyncResp->res, "IPv6StaticAddresses",
+                                               "InterfaceEnabled");
+           }
+           if(macAddress)
+           {
+               messages::propertyValueConflict(asyncResp->res, "MACAddress",
+                                               "InterfaceEnabled");
+           }
+           if(mtuSize)
+           {
+               messages::propertyValueConflict(asyncResp->res, "MTUSize",
+                                               "InterfaceEnabled");
+           }
+           if(ipv6AutoConfigEnabled)
+           {
+               messages::propertyValueConflict(asyncResp->res, "StatelessAddressAutoConfig/IPv6AutoConfigEnabled",
+                                               "InterfaceEnabled");
+           }
+           if(staticNameServers)
+           {
+               messages::propertyValueConflict(asyncResp->res, "StaticNameServers",
+                                               "InterfaceEnabled");
+           }
+           return;
+        }
+
         bool ipv4AddressValid = true;
         if(ipv4StaticAddresses)  // IPv4StaticAddresses attribute is present
         {
-- 
2.34.1

