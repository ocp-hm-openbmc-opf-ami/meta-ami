From c0e5d6ad36773926289e206f07a1eb664519f66a Mon Sep 17 00:00:00 2001
From: prasannas <prasannas@ami.com>
Date: Tue, 21 Nov 2023 12:05:37 +0530
Subject: [PATCH 142/142]Redfish Support for Delete BSOD image

Testcase:
1)Open a BMC terminal and provide following command to trigger BSOD:
ipmitool raw 0x0a 0x44 0x00 0x00 0x02 0x00 0x00 0x00 0x00 0x41 0x0 0x04 0x20 0x0 0x6f 0x01 0xff 0xf

2)The captured image is currently set to be stored in BMC tmp folder: /tmp/screenShotBSOD.jpeg

3)The captured image is Displayed as base64 Format in Below Uri:
GET https://<BMC_IP>/redfish/v1/Managers/bmc/Oem/OpenBmc/Jpeg
Note:Response should be in Base64 format

4)To Delete BSOD Image:
DELETE
https://<<BMC_IP>>/redfish/v1/Managers/bmc/Oem/OpenBmc/Jpeg

Response:
{
    "@Message.ExtendedInfo": [
        {
            "@odata.type": "#Message.v1_1_1.Message",
            "Message": "The request completed successfully.",
            "MessageArgs": [],
            "MessageId": "Base.1.16.0.Success",
            "MessageSeverity": "OK",
            "Resolution": "None"
        }
    ]
}

Signed-off-by: prasannas <prasannas@ami.com>
---
 redfish-core/include/redfish.hpp |  1 +
 redfish-core/lib/bsodjpeg.hpp    | 40 +++++++++++++++++++++++++++++++++++++---
 2 files changed, 38 insertions(+), 3 deletions(-)

diff --git a/redfish-core/include/redfish.hpp b/redfish-core/include/redfish.hpp
index 6c8517a..85af1bb 100644
--- a/redfish-core/include/redfish.hpp
+++ b/redfish-core/include/redfish.hpp
@@ -125,6 +125,7 @@ class RedfishService
         requestRoutesManagerResetToDefaultsAction(app);
         requestRoutesManagerDiagnosticData(app);
         requestRoutesBsodjpeg(app);
+        requestRoutesDeleteBsodjpeg(app);
         requestRoutesChassisCollection(app);
         requestRoutesChassis(app);
         requestRoutesChassisResetAction(app);
diff --git a/redfish-core/lib/bsodjpeg.hpp b/redfish-core/lib/bsodjpeg.hpp
index 8631c4e..1a9c362 100644
--- a/redfish-core/lib/bsodjpeg.hpp
+++ b/redfish-core/lib/bsodjpeg.hpp
@@ -6,9 +6,10 @@
 
 namespace redfish
 {
+std::string inputImagePath = "/tmp/screenShotBSOD.jpeg";
+
 inline void getBsodjpeg(std::shared_ptr<bmcweb::AsyncResp> asyncResp)
 {
-    std::string inputImagePath = "/tmp/screenShotBSOD.jpeg";
     std::ifstream imageFile(inputImagePath, std::ios::binary);
 
     if (!imageFile)
@@ -18,6 +19,12 @@ inline void getBsodjpeg(std::shared_ptr<bmcweb::AsyncResp> asyncResp)
         return;
     }
 
+    if (fs::is_empty(inputImagePath)) // Checking Created File is empty or not
+    {
+        messages::internalError(asyncResp->res);
+        return;
+    }
+
     imageFile.seekg(0, std::ios::end);
     std::streampos fileSize = imageFile.tellg();
     imageFile.seekg(0, std::ios::beg);
@@ -44,9 +51,36 @@ inline void requestRoutesBsodjpeg(App& app)
         {
             return;
         }
-       asyncResp->res.jsonValue["@odata.id"]="/redfish/v1/Managers/bmc/Oem/OpenBmc/Jpeg";
-       asyncResp->res.jsonValue["@odata.type"]="#Jpeg_v1_0_0.Jpeg";
+        asyncResp->res.jsonValue["@odata.id"] =
+            "/redfish/v1/Managers/bmc/Oem/OpenBmc/Jpeg";
+        asyncResp->res.jsonValue["@odata.type"] = "#Jpeg_v1_0_0.Jpeg";
         getBsodjpeg(asyncResp);
     });
 }
+
+inline void requestRoutesDeleteBsodjpeg(App& app)
+{
+    BMCWEB_ROUTE(app, "/redfish/v1/Managers/bmc/Oem/OpenBmc/Jpeg")
+        .privileges({{"Login"}, {"ConfigureComponents"}})
+        .methods(boost::beast::http::verb::delete_)(
+            [&app](const crow::Request& req,
+                   const std::shared_ptr<bmcweb::AsyncResp>& asyncResp) {
+        if (!redfish::setUpRedfishRoute(app, req, asyncResp))
+        {
+            return;
+        }
+
+        if (fs::exists(inputImagePath))
+        {
+            fs::remove(inputImagePath);
+            messages::success(asyncResp->res);
+        }
+        else
+        {
+            messages::internalError(asyncResp->res);
+            return;
+        }
+    });
+}
+
 } // namespace redfish
-- 
2.9.5

