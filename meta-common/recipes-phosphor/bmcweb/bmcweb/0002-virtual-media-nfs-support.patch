From 55112eff5821d9b078f1cd9238b920687f816218 Mon Sep 17 00:00:00 2001
From: Pranoy Goru <gorumanip@ami.com>
Date: Fri, 13 Oct 2023 13:13:45 +0530
Subject: [PATCH 2/2] virtual-media-nfs-support

---
 redfish-core/lib/virtual_media.hpp | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/redfish-core/lib/virtual_media.hpp b/redfish-core/lib/virtual_media.hpp
index 6c616389..dfda743c 100644
--- a/redfish-core/lib/virtual_media.hpp
+++ b/redfish-core/lib/virtual_media.hpp
@@ -208,6 +208,10 @@ inline std::string getTransferProtocolTypeFromUri(const std::string& imageUri)
     {
         return "HTTPS";
     }
+    if (scheme == "nfs")
+    {
+        return "NFS";
+    }
 
     return "None";
 }
@@ -425,6 +429,7 @@ enum class TransferProtocol
 {
     https,
     smb,
+    nfs,
     invalid
 };
 
@@ -444,6 +449,10 @@ inline std::optional<TransferProtocol>
     {
         return TransferProtocol::https;
     }
+    if (scheme == "nfs")
+    {
+        return TransferProtocol::nfs;
+    }
     if (!scheme.empty())
     {
         return TransferProtocol::invalid;
@@ -469,6 +478,11 @@ inline std::optional<TransferProtocol> getTransferProtocolFromParam(
         return TransferProtocol::smb;
     }
 
+    if (*transferProtocolType == "NFS")
+    {
+        return TransferProtocol::nfs;
+    }
+
     if (*transferProtocolType == "HTTPS")
     {
         return TransferProtocol::https;
@@ -490,6 +504,11 @@ inline std::string
         return "smb://" + imageUri;
     }
 
+    if (transferProtocol == TransferProtocol::nfs)
+    {
+        return "nfs://" + imageUri;
+    }
+
     if (transferProtocol == TransferProtocol::https)
     {
         return "https://" + imageUri;
@@ -902,7 +921,7 @@ inline void validateParams(const std::shared_ptr<bmcweb::AsyncResp>& asyncResp,
     {
         BMCWEB_LOG_ERROR("Request action parameter ImageUrl must "
                          "contain specified protocol type from list: "
-                         "(smb, https).");
+                         "(smb, nfs, https).");
 
         messages::resourceAtUriInUnknownFormat(asyncResp->res, *url);
 
-- 
2.34.1

