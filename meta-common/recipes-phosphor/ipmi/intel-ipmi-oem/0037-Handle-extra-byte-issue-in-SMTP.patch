From 31a2401ad5c5cba45e84eb8932e926f86a1e56c3 Mon Sep 17 00:00:00 2001
From: saravananm <saravananm@ami.com>
Date: Fri, 15 Dec 2023 01:39:32 +0530
Subject: [PATCH] Handle-extra-byte-issue-in-SMTP

Description :
Get SMTP configuration paramater for 1, 2,3,4 is accepting extra byte instead of it should throw the "INVALID DATA LENGTH" Error Response.

Tested:

Build Successfully and Verified,its Working As Expected.

Before Fix:
msgubuntu4@msgubuntu4-OptiPlex-5080:~$ ipmitool -H 10.0.100.120 -U root -P 0penBmc -I lanplus -C 17 raw 0x30 0xE4 0x04 0x01 0x00

msgubuntu4@msgubuntu4-OptiPlex-5080:~$

After Fix:
msgubuntu4@msgubuntu4-OptiPlex-5080:~$ ipmitool -H 10.0.100.120 -U root -P 0penBmc -I lanplus -C 17 raw 0x30 0xE4 0x04 0x01 0x>

Unable to send RAW command (channel=0x0 netfn=0x0 lun=0x0 cmd=0xe4 rsp=0xc7): Request Data length invalid

Working As Expected.

Signed-off-by: saravananm <saravananm@ami.com>
---
 include/oemcommands.hpp |  4 ++++
 src/oemcommands.cpp     | 12 ++++++++++++
 2 files changed, 16 insertions(+)

diff --git a/include/oemcommands.hpp b/include/oemcommands.hpp
index 38353b6..0256918 100644
--- a/include/oemcommands.hpp
+++ b/include/oemcommands.hpp
@@ -370,6 +370,10 @@ static constexpr const uint8_t selEvtTargetShift = 4;
 static constexpr const uint8_t targetInstanceMask = 0x0E;
 static constexpr const uint8_t targetInstanceShift = 1;
 
+// SMTP Config parameters:
+static constexpr const uint8_t index_value = 0x01;
+static constexpr const uint8_t index_value2 = 0x02;
+
 enum class IPMINetfnIntelOEMAppCmd
 {
     mdrStatus = 0x20,
diff --git a/src/oemcommands.cpp b/src/oemcommands.cpp
index ac0d867..1251a36 100644
--- a/src/oemcommands.cpp
+++ b/src/oemcommands.cpp
@@ -4174,6 +4174,14 @@ ipmi::RspType<std::vector<uint8_t>> ipmiOEMGetSmtpConfig(ipmi::Context::ptr ctx,
     std::string host = std::get<1>(smtpcfg);
     uint16_t port = std::get<2>(smtpcfg);
     std::string sender = std::get<3>(smtpcfg);
+    if (parameter != static_cast<uint8_t>(smtpSetting ::recMailId))
+    {
+        std::array<uint8_t, 0> bytes;
+        if (req.unpack(bytes) != 0 || !req.fullyUnpacked())
+       {
+            return responseReqDataLenInvalid();
+        }
+    }
 
     std::vector<uint8_t> resData = {};
     switch (smtpSetting(parameter))
@@ -4233,6 +4241,10 @@ ipmi::RspType<std::vector<uint8_t>> ipmiOEMGetSmtpConfig(ipmi::Context::ptr ctx,
             {
                 return responseReqDataLenInvalid();
             }
+            if (index != index_value && index != index_value2)
+            {
+                return ipmi::responseInvalidFieldRequest();
+            }
             std::string str = rec[index - 1];
             if (str.empty())
             {
-- 
2.25.1

