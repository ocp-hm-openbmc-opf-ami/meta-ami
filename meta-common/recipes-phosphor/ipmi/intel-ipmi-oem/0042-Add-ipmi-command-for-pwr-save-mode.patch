From 9ba183726957b4414ec4bedbb8640d60e45dae9c Mon Sep 17 00:00:00 2001
From: "chrisduxbury@ami.com" <chrisduxbury@ami.com>
Date: Wed, 31 Jan 2024 14:50:43 +0800
Subject: [PATCH] Add ipmi command for pwr save mode

---
 include/oemcommands.hpp |  2 +
 ipmi-allowlist.conf     |  2 +
 src/oemcommands.cpp     | 92 +++++++++++++++++++++++++++++++++++++++++
 3 files changed, 96 insertions(+)

diff --git a/include/oemcommands.hpp b/include/oemcommands.hpp
index 89c4aeb..27876cf 100644
--- a/include/oemcommands.hpp
+++ b/include/oemcommands.hpp
@@ -254,6 +254,8 @@ static constexpr Cmd cmdOEMSetSELPolicy = 0x7F;
 static constexpr Cmd cmdOEMGetKCSStatus = 0x3E;
 static constexpr Cmd cmdOEMSetKCSStatus = 0x3F;
 static constexpr Cmd cmdOEMCancelTask = 0xB1;
+static constexpr Cmd cmdOEMEnDisPowerSaveMode = 0xAA;
+static constexpr Cmd cmdOEMGetPowerSaveMode = 0xAB;
 
 namespace network
 {
diff --git a/ipmi-allowlist.conf b/ipmi-allowlist.conf
index a6de39a..a3317e3 100644
--- a/ipmi-allowlist.conf
+++ b/ipmi-allowlist.conf
@@ -338,6 +338,8 @@
 0x32:0x8d:0xff7f   //<Intel OEM Platform>:<Get SSD Power>
 0x32:0x90:0x7f7f   //<Intel OEM Platform>:<Get-Set Serial Port Speed>
 0x32:0x91:0x7f7f   //<Intel OEM Platform>:<Clear CMOS>
+0x32:0xaa:0xff7f   //<Intel OEM Platform>:<Enable Disable Power Save Mode>
+0x32:0xab:0xff7f   //<Intel OEM Platform>:<Get Power Save Mode>
 0x3e:0x02:0xff7f   //<Intel Managed Data Region>:<BMC Data Region Update Event Message>
 0x3e:0x20:0x7f7f   //<Intel Managed Data Region>:<BMC Region Status>
 0x3e:0x21:0x7f7f   //<Intel Managed Data Region>:<BMC Region Update Complete>
diff --git a/src/oemcommands.cpp b/src/oemcommands.cpp
index bef7e82..9efceee 100644
--- a/src/oemcommands.cpp
+++ b/src/oemcommands.cpp
@@ -64,6 +64,7 @@
 #include <xyz/openbmc_project/Control/Security/RestrictionMode/server.hpp>
 #include <xyz/openbmc_project/Control/Security/SpecialMode/server.hpp>
 #include <xyz/openbmc_project/Network/FirewallConfiguration/server.hpp>
+#include <xyz/openbmc_project/USB/status/server.hpp>
 
 #include <array>
 #include <filesystem>
@@ -5767,6 +5768,87 @@ ipmi::RspType<message::Payload> ipmiOEMGetFirewallConfiguration(uint8_t paramete
     return ipmi::responseUnspecifiedError();
 }
 
+ipmi::RspType<> ipmiOEMEnDisPwrSaveMode(ipmi::Context::ptr ctx, std::optional<uint8_t> req)
+{
+	int resp;
+	if (!req)
+    {
+        return ipmi::responseReqDataLenInvalid();
+		
+    }
+
+	if ( (*req) != 0 && (*req) != 1)
+	{
+		return ipmi::responseInvalidFieldRequest(); 
+	}
+
+
+	std::shared_ptr<sdbusplus::asio::connection> dbus = getSdBus();
+
+	auto method = dbus->new_method_call("xyz.openbmc_project.Settings",
+                                        "/xyz/openbmc_project/logging/settings",
+                                        "xyz.openbmc_project.USB",
+                                        "SetUSBPowerSaveMode");
+	
+	method.append(static_cast<int>(*req));
+	try
+	{
+		auto data = dbus->call(method);
+		data.read(resp);
+		if (resp == 0xC0 || resp < 0 )
+		{
+			
+			std::cerr << "Busy node or ioctl failed \n";
+			return ipmi::response(ipmi::ccUnspecifiedError);
+		}
+		
+	}
+	catch (const sdbusplus::exception_t& e)
+    {
+
+		std::cerr << "SetUSBPowerSaveMode method call failed \n";
+        return ipmi::response(ipmi::ccUnspecifiedError);
+    }
+	return ipmi::responseSuccess();	
+}
+
+ipmi::RspType<uint8_t> ipmiOEMGetPwrSaveMode(ipmi::Context::ptr ctx)
+{
+	int resp;
+	
+  	std::shared_ptr<sdbusplus::asio::connection> dbus = getSdBus();
+  
+	auto method = dbus->new_method_call("xyz.openbmc_project.Settings",
+										  "/xyz/openbmc_project/logging/settings",
+										  "xyz.openbmc_project.USB",
+										  "GetUSBPowerSaveMode");
+
+	try
+    {
+        auto data = dbus->call(method);
+        data.read(resp);
+		if (resp == 0)
+		{
+			std::cerr << "virtual hub usb device connected to HOST \n";
+		}
+		else if (resp == 1)
+		{
+			std::cerr << "virtual hub usb device disconnected from HOST \n";
+		}
+		else if (resp == 0xC0 || resp < 0 )
+		{
+			std::cerr << "Busy node or ioctl failed \n";
+			return ipmi::response(ipmi::ccUnspecifiedError);
+		}
+    }
+    catch (sdbusplus::exception_t& e)
+    {
+        std::cerr << "GetUSBPowerSaveMode method call failed \n";
+        return ipmi::response(ipmi::ccUnspecifiedError);
+    }
+    return ipmi::responseSuccess(resp);
+}
+
 static void registerOEMFunctions(void)
 {
     phosphor::logging::log<phosphor::logging::level::INFO>(
@@ -6066,6 +6148,16 @@ static void registerOEMFunctions(void)
     registerHandler(prioOemBase, ami::netFnGeneral,
                     ami::general::cmdOEMGetFirewallConfiguration, Privilege::User,
                     ipmiOEMGetFirewallConfiguration);
+
+    // <Enable Disable Power Save Mode>
+    registerHandler(prioOemBase, ami::netFnGeneral,
+                    ami::general::cmdOEMEnDisPowerSaveMode, Privilege::User,
+                    ipmiOEMEnDisPwrSaveMode);
+
+    // <Get Power Save Mode>
+    registerHandler(prioOemBase, ami::netFnGeneral,
+                    ami::general::cmdOEMGetPowerSaveMode, Privilege::User,
+                    ipmiOEMGetPwrSaveMode);
 }
 
 } // namespace ipmi
-- 
2.42.0

