From 288b70f6d97e15d4c319447a53273f87b70b85e8 Mon Sep 17 00:00:00 2001
From: saravananm <saravananm@ami.com>
Date: Fri, 9 Jun 2023 13:00:38 +0530
Subject: [PATCH] Fix Get Channel Auth

Description:
   Get Channel Authentication Capabilities is supporting Invalid bytes instead of throwing error.
Check the Condition for Reserve Bit.If Reserve bit not Equal to Zero means throw the Error.

Tested:
 Build Successfully and Verified Get Channel Authentication Capabilities Working As Expected.

Before Fix : Get Channel Authentication Capabilities is supporting Invalid bytes instead of throwing error.

msgubuntu4@msgubuntu4-OptiPlex-5080:~$ ipmitool -H 10.0.104.152 -U root -P 0penBmc -C 17 -I lanplus raw 0x06 0x38 0x1E 0x04
03 80 04 02 00 00 00 00

After Fix: Get Channel Authentication Capabilities Working As Expected

Signed-off-by: saravananm <saravananm@ami.com>
---
 command/channel_auth.cpp |  6 ++++++
 command/channel_auth.hpp | 12 +++++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/command/channel_auth.cpp b/command/channel_auth.cpp
index 44d5cad..5ed2110 100644
--- a/command/channel_auth.cpp
+++ b/command/channel_auth.cpp
@@ -37,6 +37,12 @@ std::vector<uint8_t>
     constexpr unsigned int channelMask = 0x0f;
     uint8_t chNum = ipmi::convertCurrentChannelNum(
         request->channelNumber & channelMask, getInterfaceIndex());
+   
+    if (request->reserved1 != 0x00)
+    {
+        std::vector<uint8_t> errorPayload{IPMI_CC_INVALID_FIELD_REQUEST};
+        return errorPayload;
+    }
 
     if (!ipmi::isValidChannel(chNum) ||
         (ipmi::EChannelSessSupported::none ==
diff --git a/command/channel_auth.hpp b/command/channel_auth.hpp
index c518ba7..b14aa71 100644
--- a/command/channel_auth.hpp
+++ b/command/channel_auth.hpp
@@ -14,7 +14,17 @@ namespace command
  */
 struct GetChannelCapabilitiesReq
 {
-    uint8_t channelNumber;
+
+#if BYTE_ORDER == BIG_ENDIAN
+    uint8_t reserved1 : 4;
+    uint8_t channelNumber : 4;
+#endif
+
+#if BYTE_ORDER == LITTLE_ENDIAN
+    uint8_t channelNumber : 4;
+    uint8_t reserved1 :4;
+#endif
+
     uint8_t reqMaxPrivLevel;
 } __attribute__((packed));
 
-- 
2.25.1

