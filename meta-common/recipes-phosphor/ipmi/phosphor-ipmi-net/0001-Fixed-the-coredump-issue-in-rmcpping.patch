From d1139ea424f2dd1ac077ead5246652b1b98ff8b2 Mon Sep 17 00:00:00 2001
From: sonan <sonan@ami.com>
Date: Fri, 5 Apr 2024 17:30:19 +0530
Subject: [PATCH] Fixed the coredump issue in rmcpping

---
 message.hpp         | 2 +-
 message_handler.cpp | 3 ++-
 message_parsers.cpp | 4 ++--
 3 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/message.hpp b/message.hpp
index 1deef71..438e282 100644
--- a/message.hpp
+++ b/message.hpp
@@ -4,7 +4,7 @@
 #include <memory>
 #include <numeric>
 #include <vector>
-
+#define RMCP_PING
 namespace message
 {
 
diff --git a/message_handler.cpp b/message_handler.cpp
index f5c4a1b..9b9a764 100644
--- a/message_handler.cpp
+++ b/message_handler.cpp
@@ -57,7 +57,8 @@ Handler::~Handler()
     try
     {
 #ifdef RMCP_PING
-        if (ClassOfMsg::ASF == inMessage->rmcpMsgClass)
+        if ((inMessage != nullptr) &&
+            (ClassOfMsg::ASF == inMessage->rmcpMsgClass))
         {
             sendASF();
         }
diff --git a/message_parsers.cpp b/message_parsers.cpp
index 33b53c1..00357ca 100644
--- a/message_parsers.cpp
+++ b/message_parsers.cpp
@@ -444,14 +444,14 @@ std::vector<uint8_t> flatten(uint8_t asfMsgTag)
 
     // No OEM-specific capabilities exist, therefore the second
     // IANA Enterprise Number contains the same IANA(4542)
-    header->ping.iana = header->iana = endian::to_ipmi(parser::ASF_IANA);
+    header->ping.iana = header->iana = endian::to_network(parser::ASF_IANA);
     header->ping.msgType = static_cast<uint8_t>(RmcpMsgType::PONG);
     header->ping.msgTag = asfMsgTag;
     header->ping.reserved = 0x00;
     header->ping.dataLen =
         parser::RMCP_ASF_PONG_DATA_LEN; // as per spec 13.2.4,
 
-    header->iana = parser::ASF_IANA;
+    header->iana = endian::to_network(parser::ASF_IANA);
     header->oemDefined = 0x00;
     header->suppEntities = parser::ASF_SUPP_ENT;
     header->suppInteract = parser::ASF_SUPP_INT;
-- 
2.43.0

