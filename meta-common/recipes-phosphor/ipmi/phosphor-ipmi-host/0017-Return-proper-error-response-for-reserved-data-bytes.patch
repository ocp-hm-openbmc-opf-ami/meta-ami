From 8f1513ce7b86f4e90e7f08310c5f273ed629b1c6 Mon Sep 17 00:00:00 2001
From: vipinc <vipinc@ami.com>
Date: Tue, 23 May 2023 13:39:18 +0530
Subject: [PATCH] Return proper error response for reserved data bytes

Set System Info parameters takes block of string data and the
first byte indicates the encoding of the string. the bits
[7:4] are reserved. This patch verifies if the reserveds bits
are being used and return proper error response

//Before Fix:
1)Paramter 1
root@intel-obmc:~# ipmitool raw 0x06 0x58 0x01 0x00 0x03 0x0e 0x56 0x65 0x72 0x73 0x69 0x6f 0x6e 0x32 0x2e 0x31 0x32 0x33 0x34 0x35

root@intel-obmc:~#
2)Parameter 2
root@intel-obmc:~# ipmitool raw 0x06 0x58 0x02 0x00 0x03 0x0e 0x56 0x65 0x72 0x73 0x69 0x6f 0x6e 0x32 0x2e 0x31 0x32 0x33 0x34 0x35

root@intel-obmc:~#
3)Parameter 3:
root@intel-obmc:~# ipmitool raw 0x06 0x58 0x01 0x00 0x03 0x0e 0x56 0x65 0x72 0x73 0x69 0x6f 0x6e 0x32 0x2e 0x31 0x32 0x33 0x34 0x35

root@intel-obmc:~
//After Fix:
1)Parameter 1
root@bmc-maca226bfb56eaa:~# ipmitool  raw 0x06 0x58 0x01 0x00 0x03 0x0e 0x56 0x65 0x72 0x73 0x69 0x6f 0x6e 0x32 0x2e 0x31 0x32 0x33 0x34  0x35
Unable to send RAW command (channel=0x0 netfn=0x6 lun=0x0 cmd=0x58 rsp=0xcc): Invalid data field in request
2)Parameter 2
root@bmc-maca226bfb56eaa:~# ipmitool raw 0x06 0x58 0x02 0x00 0x03 0x0e 0x56 0x65 0x72 0x73 0x69 0x6f 0x6e 0x32 0x2e 0x31 0x32 0x33 0x34 0x35
Unable to send RAW command (channel=0x0 netfn=0x6 lun=0x0 cmd=0x58 rsp=0xcc): Invalid data field in request
3)Parameter 3:
root@bmc-maca226bfb56eaa:~# ipmitool raw 0x06 0x58 0x01 0x00 0x03 0x0e 0x56 0x65 0x72 0x73 0x69 0x6f 0x6e 0x32 0x2e 0x31 0x32 0x33 0x34 0x35
Unable to send RAW command (channel=0x0 netfn=0x6 lun=0x0 cmd=0x58 rsp=0xcc): Invalid data field in request

Signed-off-by: vipinc <vipinc@ami.com>
---
 apphandler.cpp | 5 +++++
 1 file changed, 5 insertions(+)

diff --git a/apphandler.cpp b/apphandler.cpp
index 63d26a0..b53cba0 100644
--- a/apphandler.cpp
+++ b/apphandler.cpp
@@ -1487,6 +1487,11 @@ ipmi::RspType<> ipmiAppSetSystemInfo(uint8_t paramSelector, uint8_t data1,
     size_t count = 0;
     if (setSelector == 0) // First chunk has only 14 bytes.
     {
+        uint8_t encoding = configData.at(0);
+        if (encoding > 0x02) // Only 0x0h - 0x02h data allowed as per IPMI Spec.
+        {
+            return ipmi::responseInvalidFieldRequest();
+        }
         size_t stringLen = configData.at(1); // string length
         // maxBytesPerParamter is 256. It will always be greater than stringLen
         // (unit8_t) if maxBytes changes in future, then following line is
-- 
2.25.1

