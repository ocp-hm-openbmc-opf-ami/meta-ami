From ebb8a844391dcfee21cad5040a81111072d12287 Mon Sep 17 00:00:00 2001
From: saravananm <saravananm@ami.com>
Date: Mon, 17 Jul 2023 13:19:26 +0530
Subject: [PATCH] Fix-For-SOL 
Description: 
 SOL Parameters 0,1,2,3,4 Able to set invalid SOL configuration value, instead its throw the  invalid data error.

Tested:
Build Successfully and Verified SOL parameter value Working as expected.

Before Fix:
SOL parameter 0,1,2,3,4 Able to Set without Throw the error.

msgubuntu4@msgubuntu4-OptiPlex-5080:~$ ipmitool -H 10.0.98.155 -U root -P 0penBmc -I lanplus -C 17 raw 0x0c 0x21 0x03 0x04 0x08 0x07

msgubuntu4@msgubuntu4-OptiPlex-5080:~$

After Fix:

SOL parameter Working As per Expected.

ipmitool -H 10.0.98.155 -U root -P 0penBmc -I lanplus -C 17 raw 0x0c 0x21 0x03 0x04 0x08 0x07
Unable to send RAW command (channel=0x0 netfn=0xc lun=0x0 cmd=0x21 rsp=0xc7): Request data length invalid

Signed-off-by: saravananm <saravananm@ami.com>
---
 transporthandler.cpp | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/transporthandler.cpp b/transporthandler.cpp
index df4a0e5..1a3b7c3 100644
--- a/transporthandler.cpp
+++ b/transporthandler.cpp
@@ -2311,6 +2311,8 @@ enum class Privilege : uint8_t
 constexpr uint8_t progressMask = 0x03;
 constexpr uint8_t enableMask = 0x01;
 constexpr uint8_t retryMask = 0x07;
+constexpr uint8_t commonMask = 0x01;
+constexpr uint8_t privileageMask = 0x05;
 
 ipmi::RspType<> setSOLConfParams(ipmi::Context::ptr ctx, uint4_t chNum,
                                  uint4_t reserved, uint8_t paramSelector,
@@ -2339,7 +2341,7 @@ ipmi::RspType<> setSOLConfParams(ipmi::Context::ptr ctx, uint4_t chNum,
     {
         case sol::Parameter::progress:
         {
-            if (configParamData2)
+            if (configParamData2 || !(configParamData1 <= progressMask))
             {
                 return ipmi::responseReqDataLenInvalid();
             }
@@ -2363,7 +2365,7 @@ ipmi::RspType<> setSOLConfParams(ipmi::Context::ptr ctx, uint4_t chNum,
         }
         case sol::Parameter::enable:
         {
-            if (configParamData2)
+            if (configParamData2 || !(configParamData1 <= enableMask))
             {
                 return ipmi::responseReqDataLenInvalid();
             }
@@ -2376,7 +2378,7 @@ ipmi::RspType<> setSOLConfParams(ipmi::Context::ptr ctx, uint4_t chNum,
         }
         case sol::Parameter::authentication:
         {
-            if (configParamData2)
+            if (configParamData2 || (configParamData1 <= commonMask) || !(configParamData1 <= privileageMask))
             {
                 return ipmi::responseReqDataLenInvalid();
             }
@@ -2405,7 +2407,7 @@ ipmi::RspType<> setSOLConfParams(ipmi::Context::ptr ctx, uint4_t chNum,
         }
         case sol::Parameter::accumulate:
         {
-            if (!configParamData2)
+            if (!(configParamData1 == commonMask && configParamData2 == commonMask))
             {
                 return ipmi::responseReqDataLenInvalid();
             }
@@ -2426,7 +2428,7 @@ ipmi::RspType<> setSOLConfParams(ipmi::Context::ptr ctx, uint4_t chNum,
         }
         case sol::Parameter::retry:
         {
-            if (!configParamData2)
+            if (!(configParamData1 <= retryMask && configParamData2 == commonMask))
             {
                 return ipmi::responseReqDataLenInvalid();
             }
-- 
2.25.1

