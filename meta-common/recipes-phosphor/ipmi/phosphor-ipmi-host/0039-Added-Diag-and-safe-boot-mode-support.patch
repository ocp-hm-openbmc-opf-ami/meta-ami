From 60d2625c8ebbdd031f29225f72e7a142c8e0ef18 Mon Sep 17 00:00:00 2001
From: prasannas <prasannas@ami.com>
Date: Tue, 17 Oct 2023 19:30:32 +0530
Subject: [PATCH 39/39] Added Diag and safe boot mode support

Description:
   Adding Diag and Safe mode support for host.
Tested :
1)Patch Boot Source Override target in Redfish below uri :
 https://x.x.x.x/redfish/v1/Systems/system
Body:
{
    "Boot": {
        "BootSourceOverrideEnabled": "Once",
        "BootSourceOverrideTarget": "Safe",
        "BootSourceOverrideMode": "UEFI"
    }
}
Response:
    204 No Content

2)Verify the boot parameter set from IPMI command ipmitool chassis bootparam get 5 for Diag Mode Support

root@AMIOT-560e8ae48098:~# ipmitool chassis bootparam get 5
Boot parameter version: 1
Boot parameter 5 is valid/unlocked
Boot parameter data: a010000000
 Boot Flags :
   - Boot Flag Valid
   - Options apply to only next boot
   - BIOS EFI boot
   - Boot Device Selector : Force Boot from Diagnostic Partition
   - BIOS verbosity : System Default
   - Console Redirection control : Console redirection occurs per BIOS configuration setting (default)
   - BIOS Mux Control Override : BIOS uses recommended setting of the mux at the end of POST

3)Verify the boot parameter set from IPMI command ipmitool chassis bootparam get 5 for  Safe Mode Support

root@AMIOT-560e8ae48098:~# ipmitool chassis bootparam get 5
Boot parameter version: 1
Boot parameter 5 is valid/unlocked
Boot parameter data: a00c000000
 Boot Flags :
   - Boot Flag Valid
   - Options apply to only next boot
   - BIOS EFI boot
   - Boot Device Selector : Force Boot from default Hard-Drive, request Safe-Mode
   - BIOS verbosity : System Default
   - Console Redirection control : Console redirection occurs per BIOS configuration setting (default)
   - BIOS Mux Control Override : BIOS uses recommended setting of the mux at the end of POST

Signed-off-by: prasannas <prasannas@ami.com>
---
 chassishandler.cpp | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/chassishandler.cpp b/chassishandler.cpp
index fc30135..34c0ebb 100644
--- a/chassishandler.cpp
+++ b/chassishandler.cpp
@@ -1543,9 +1543,8 @@ std::map<IpmiValue, Source::Sources> sourceIpmiToDbus = {
     {ipmiDefault, Source::Sources::Default}};
 
 std::map<IpmiValue, Mode::Modes> modeIpmiToDbus = {
-#ifdef ENABLE_BOOT_FLAG_SAFE_MODE_SUPPORT
     {0x03, Mode::Modes::Safe},
-#endif // ENABLE_BOOT_SAFE_MODE_SUPPORT
+    {0x04, Mode::Modes::Diag},
     {0x06, Mode::Modes::Setup},
     {ipmiDefault, Mode::Modes::Regular}};
 
@@ -1560,9 +1559,8 @@ std::map<Source::Sources, IpmiValue> sourceDbusToIpmi = {
     {Source::Sources::Default, ipmiDefault}};
 
 std::map<Mode::Modes, IpmiValue> modeDbusToIpmi = {
-#ifdef ENABLE_BOOT_FLAG_SAFE_MODE_SUPPORT
     {Mode::Modes::Safe, 0x03},
-#endif // ENABLE_BOOT_SAFE_MODE_SUPPORT
+    {Mode::Modes::Diag, 0x04},
     {Mode::Modes::Setup, 0x06},
     {Mode::Modes::Regular, ipmiDefault}};
 
@@ -2039,13 +2037,13 @@ ipmi::RspType<> ipmiChassisSetSysBootOptions(ipmi::Context::ptr ctx,
     {
         uint2_t setInProgressFlag;
         uint6_t rsvd;
-	constexpr uint8_t setInProgressMask = 0x02;
+        constexpr uint8_t setInProgressMask = 0x02;
 
         if (data.unpack(setInProgressFlag, rsvd) != 0 || !data.fullyUnpacked())
         {
             return ipmi::responseReqDataLenInvalid();
         }
-	if (setInProgressFlag > setInProgressMask)
+        if (setInProgressFlag > setInProgressMask)
         {
             return ipmi::responseInvalidFieldRequest();
         }
-- 
2.9.5

