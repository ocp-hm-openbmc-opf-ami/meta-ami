From 7c8e73937f0ead9f70146ba20784bed615a37af9 Mon Sep 17 00:00:00 2001
From: vipinc <vipinc@ami.com>
Date: Tue, 14 Nov 2023 11:42:18 +0530
Subject: [PATCH 1/1] Add D-Bus logging support for Discrete Sensor

This patch add support for properly logging the discrete sensor event
so it will be logged properly into Redfish & IPMI.

Tested in AST2600evb & Intel Archercity Platform:

1. Trigger a test event for discrete sensor & verifiy the
event is properly logged into Redfish & IPMI

root@intel-obmc:~# ipmitool sel list
   1 | 11/05/23 | 17:00:42 UTC | Temperature #0x01 | Lower Non-critical going low  | Asserted
   2 | 11/05/23 | 17:03:30 UTC | Watchdog2 #0x08 | Power cycle | Asserted
root@intel-obmc:~#
//Redfish Event log

RF URL: https://10.0.136.250/redfish/v1/Systems/system/LogServices/EventLog/Entries/2

{
    "@odata.id": "/redfish/v1/Systems/system/LogServices/EventLog/Entries/2",
    "@odata.type": "#LogEntry.v1_9_0.LogEntry",
    "AdditionalDataURI": "/redfish/v1/Systems/system/LogServices/EventLog/Entries/2/attachment",
    "Created": "2023-11-05T17:03:30.779+00:00",
    "EntryType": "Event",
    "Id": "2",
    "Message": "Watchdog2 sensor PowerCycleevent assert detected",
    "Modified": "2023-11-05T17:03:30.779+00:00",
    "Name": "System Event Log Entry",
    "Resolved": false,
    "Severity": "OK"
}

Jira link: https://oneami.atlassian.net/browse/OT-2021

Signed-off-by: vipinc <vipinc@ami.com>
---
 src/ProcessorStatus.cpp |  2 +-
 src/Utils.cpp           | 33 +++++++++++++++------------------
 2 files changed, 16 insertions(+), 19 deletions(-)

diff --git a/src/ProcessorStatus.cpp b/src/ProcessorStatus.cpp
index 0a4f06d..6ce44d5 100644
--- a/src/ProcessorStatus.cpp
+++ b/src/ProcessorStatus.cpp
@@ -72,7 +72,7 @@ bool ProcessorStatus::setupEvent(
     gpioEventDescriptor.assign(gpioLineFd);
 
     logData.push_back(name);
-    logData.push_back("PresenceDetected");
+    logData.push_back("Presence Detected");
     logData.push_back(processorPath + name);
     logData.push_back("SensorProcessorPresence");
     if (state)
diff --git a/src/Utils.cpp b/src/Utils.cpp
index 727d3ab..e32ecb6 100644
--- a/src/Utils.cpp
+++ b/src/Utils.cpp
@@ -19,8 +19,11 @@
 #include "dbus-sensor_config.h"
 
 #include "DeviceMgmt.hpp"
+#include "xyz/openbmc_project/Logging/Entry/server.hpp"
 
 #include <boost/container/flat_map.hpp>
+#include <phosphor-logging/elog.hpp>
+#include <phosphor-logging/log.hpp>
 #include <sdbusplus/asio/connection.hpp>
 #include <sdbusplus/asio/object_server.hpp>
 #include <sdbusplus/bus/match.hpp>
@@ -36,7 +39,10 @@
 #include <vector>
 
 namespace fs = std::filesystem;
-
+using ErrLvl = sdbusplus::xyz::openbmc_project::Logging::server::Entry::Level;
+auto sevLvl = ErrLvl::Informational;
+using namespace phosphor::logging;
+using AdditionalData = std::map<std::string, std::string>;
 static bool powerStatusOn = false;
 static bool biosHasPost = false;
 static bool manufacturingMode = false;
@@ -53,27 +59,18 @@ void addSelEntry(std::shared_ptr<sdbusplus::asio::connection>& conn,
     const std::string sensorName = logData[0];
     const std::string eventName = logData[1];
     const std::string sensorPath = logData[2];
-    const std::string redfishId = "OpenBMC.0.1." + logData[3];
+    AdditionalData addData;
+    std::stringstream stream;
 
-    // Log Redfish event
-    if (assert)
-    {
-        lg2::info("{EVENT} assert", "EVENT", eventName, "REDFISH_MESSAGE_ID",
-                  redfishId, "REDFISH_MESSAGE_ARGS",
-                  (sensorName + "," + eventName));
-    }
-    else
-    {
-        lg2::info("{EVENT} deassert", "EVENT", eventName, "REDFISH_MESSAGE_ID",
-                  redfishId, "REDFISH_MESSAGE_ARGS",
-                  (sensorName + "," + eventName));
-    }
+    stream << std::hex << std::uppercase << std::setfill('0');
+    stream << std::setw(2) << static_cast<int>(eventData[0]);
+    auto selDataStr = stream.str();
+    std::string redfishId = sensorName + " logged a " + eventName ;
 
-    // Log into IPMI SEL event
+    // Log SEL event
     auto method = conn->new_method_call(ipmiService, ipmiObjPath, ipmiIntf,
                                         ipmiSelAddMethod);
-    method.append(ipmiSELAddMessage, sensorPath, eventData, assert,
-                  selBMCGenID);
+    method.append(redfishId, sensorPath, eventData, assert, selBMCGenID, addData);
     try
     {
         auto reply = conn->call(method);
-- 
2.25.1

