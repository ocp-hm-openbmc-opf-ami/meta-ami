diff --git a/home/msgubuntu/babu/a/mkfru.cpp b/mkfru.cpp
index afadbd324..2678d6e61 100644
--- a/home/msgubuntu/babu/a/mkfru.cpp
+++ b/mkfru.cpp
@@ -24,10 +24,19 @@
 #include <string>
 #include <vector>
 
+#define SERIAL_NUM_LEN (12)
+
 constexpr uint8_t fillChar = '.';
 constexpr uint8_t eof = 0xc1;
 const std::string intel = "Intel Corporation";
 
+/*dummy product & serial number need to change once get from vendor*/
+const char b_serial[SERIAL_NUM_LEN]  = "Intel_3245";
+const char p_serial[SERIAL_NUM_LEN]  = "Intel_7568";
+
+const std::string board_serial(b_serial);
+const std::string product_serial(p_serial);
+
 // round up to nearest block size (power of 2)
 constexpr size_t blockRound(size_t len, size_t blk)
 {
@@ -117,7 +126,9 @@ std::vector<uint8_t> genBoardContents(const std::string& name)
     constexpr size_t pnSize = 10;
     const std::string version = "FRU Ver 0.01";
     size_t contentSize = headerSize + 1 + name.size() + 1 + intel.size() + 1 +
-                         snSize + 1 + pnSize + 1 + version.size() + sizeof(eof);
+//                         snSize + 1 + pnSize + 1 + version.size() + sizeof(eof);
+                         board_serial.size() + 1 + pnSize + 1 + version.size() + sizeof(eof);
+
     std::vector<uint8_t> data(contentSize);
     size_t offset = 0;
     // chassis type (main server chassis)
@@ -130,7 +141,8 @@ std::vector<uint8_t> genBoardContents(const std::string& name)
     // product name
     offset += fillStr(data.begin() + offset, name);
     // board sn
-    offset += fillDots(data.begin() + offset, snSize);
+    //offset += fillDots(data.begin() + offset, snSize);
+    offset += fillStr(data.begin() + offset, board_serial);
     // board pn
     offset += fillDots(data.begin() + offset, pnSize);
     // fru version string
@@ -150,7 +162,8 @@ std::vector<uint8_t> genProductContents(const std::string& name)
     constexpr size_t idSize = 0;
     const std::string version = "FRU Ver 0.01";
     size_t contentSize = headerSize + 1 + intel.size() + 1 + name.size() + 1 +
-                         pnSize + 1 + pvSize + 1 + snSize + 1 + atSize + 1 +
+                         //pnSize + 1 + pvSize + 1 + snSize + 1 + atSize + 1 +
+                         pnSize + 1 + pvSize + 1 + product_serial.size() + 1 + atSize + 1 +
                          idSize + sizeof(eof);
     std::vector<uint8_t> data(contentSize);
     size_t offset = 0;
@@ -165,7 +178,7 @@ std::vector<uint8_t> genProductContents(const std::string& name)
     // product version
     offset += fillDots(data.begin() + offset, pvSize);
     // product serial number
-    offset += fillDots(data.begin() + offset, snSize);
+    offset += fillStr(data.begin() + offset, product_serial);
     // product asset tag
     offset += fillDots(data.begin() + offset, atSize);
     // empty fru file id
@@ -175,6 +188,7 @@ std::vector<uint8_t> genProductContents(const std::string& name)
     return data;
 }
 
+
 int createFru(const std::string& name)
 {
     std::vector<uint8_t> internal{1, 0, 0, 0, 0, 0, 0, 1}; // fixed data
