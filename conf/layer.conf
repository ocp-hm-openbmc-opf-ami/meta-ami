# We have a conf and classes directory, add to BBPATH
BBPATH .= ":${LAYERDIR}"

# We have recipes-* directories, add to BBFILES
BBFILES += "${LAYERDIR}/meta-common/recipes-*/*/*.bb \
            ${LAYERDIR}/meta-common/recipes-*/*/*.bbappend \
           "

BBFILES_RESTRICTED += "${LAYERDIR}/meta-restricted/recipes-*/*/*.bb \
                       ${LAYERDIR}/meta-restricted/recipes-*/*/*.bbappend"

BBFILES:append = "${@bb.utils.contains('BBFILE_COLLECTIONS', 'restricted', BBFILES_RESTRICTED, '', d)}"

BBFILE_COLLECTIONS += "meta-ami"
BBFILE_PATTERN_meta-ami = "^${LAYERDIR}/"
BBFILE_PRIORITY_meta-ami = "14"

LAYERVERSION_meta-ami = "1"
LAYERSERIES_COMPAT_meta-ami = "kirkstone langdale"

IMAGE_INSTALL:append = " pef-alert-manager mail-alert-manager adcapp pwmtachtool intel-ipmi-oem webui-vue virtual-media host-interface default-fru phosphor-node-manager-proxy pmci-launcher nvmemi-daemon pldmd mctpd phosphor-snmp"

IMAGE_INSTALL:append = " ${@bb.utils.contains('IMAGE_FSTYPES', 'intel-pfr', '', 'ami-fw-update', d)}"
IMAGE_INSTALL:remove = " ${@bb.utils.contains('IMAGE_FSTYPES', 'intel-pfr', '', 'intel-fw-update', d)}"
IMAGE_FEATURES += "obmc-user-mgmt-ldap"

#NIC Management
#IMAGE_INSTALL:append = " nic-mgmt"

#NVMe Management
#IMAGE_INSTALL:append = " nvme-mgmt"

#BRCM Raid and HBA management
#IMAGE_INSTALL:append = " raid-mgmt hba-mgmt"

#Firmware Update CPLD
#IMAGE_INSTALL:append = " cpld-tool"

#dm-verity, rootfs verification
#IMAGE_CLASSES += "dm-verity-img"
#DM_VERITY_IMAGE = "obmc-phosphor-image"
#DM_VERITY_IMAGE_TYPE = "squashfs-xz"
#dm-verity

#verified boot
#SPL_BINARY = "spl/u-boot-spl.bin"
UBOOT_SIGN_ENABLE = "0"
SPL_SIGN_ENABLE = "0"
UBOOT_FITIMAGE_ENABLE = "0"

FIT_HASH_ALG = "sha256"
FIT_SIGN_ALG = "rsa2048"
FIT_SIGN_NUMBITS = "2048"
UBOOT_FIT_HASH_ALG = "sha256"
UBOOT_FIT_SIGN_ALG = "rsa2048"
UBOOT_FIT_SIGN_NUMBITS = "2048"

UBOOT_SIGN_KEYNAME = "rsa_oem_fitimage_key"
SPL_SIGN_KEYNAME = "rsa_oem_fitimage_key"

UBOOT_SIGN_KEYDIR = "${WORKDIR}"
SPL_SIGN_KEYDIR = "${WORKDIR}"
#verified boot
